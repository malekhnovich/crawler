The following page is located at the url: http://en.wikipedia.org/wiki/Flyweight_pattern
<!DOCTYPE html>

<html class="client-nojs" dir="ltr" lang="en">
<head>
<meta charset="utf-8"/>
<title>Flyweight pattern - Wikipedia, the free encyclopedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Flyweight_pattern","wgTitle":"Flyweight pattern","wgCurRevisionId":731585554,"wgRevisionId":731585554,"wgArticleId":140538,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages containing cite templates with deprecated parameters","Articles lacking in-text citations from May 2008","All articles lacking in-text citations","Software design patterns","Articles with example Java code","Software optimization"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Flyweight_pattern","wgRelevantArticleId":140538,"wgRequestId":"V@-@4wpAMEoAABrrMdwAAAAA","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":false},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgWikibaseItemId":"Q1060964","wgCentralAuthMobileDomain":false,"wgVisualEditorToolbarScrollOffset":0,"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user.cssprefs":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.cite.styles":"ready","ext.pygments":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.tmh.thumbnail.styles":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.options",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","ext.centralauth.centralautologin","mmv.head","ext.visualEditor.desktopArticleTarget.init","ext.uls.interface","ext.quicksurveys.init","mw.MediaWikiPlayer.loader","mw.PopUpMediaTransform","skins.vector.js"]);});</script>
<link href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.cite.styles%7Cext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cextra-toolbar-buttons%2Cfeatured-articles-links%2CrefToolbar%2Cswitcher%2Cteahouse%2Cwatchlist-notice%7Cext.pygments%2CwikimediaBadges%7Cext.tmh.thumbnail.styles%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector" rel="stylesheet"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta content="" name="ResourceLoaderDynamicStyles"/>
<link href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector" rel="stylesheet"/>
<meta content="MediaWiki 1.28.0-wmf.20" name="generator"/>
<meta content="origin-when-cross-origin" name="referrer"/>
<link href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Flyweight_pattern" rel="alternate"/>
<link href="/w/index.php?title=Flyweight_pattern&amp;action=edit" rel="alternate" title="Edit this page" type="application/x-wiki"/>
<link href="/w/index.php?title=Flyweight_pattern&amp;action=edit" rel="edit" title="Edit this page"/>
<link href="/static/apple-touch/wikipedia.png" rel="apple-touch-icon"/>
<link href="/static/favicon/wikipedia.ico" rel="shortcut icon"/>
<link href="/w/opensearch_desc.php" rel="search" title="Wikipedia (en)" type="application/opensearchdescription+xml"/>
<link href="//en.wikipedia.org/w/api.php?action=rsd" rel="EditURI" type="application/rsd+xml"/>
<link href="//creativecommons.org/licenses/by-sa/3.0/" rel="copyright"/>
<link href="https://en.wikipedia.org/wiki/Flyweight_pattern" rel="canonical"/>
<link href="//login.wikimedia.org" rel="dns-prefetch"/>
<link href="//meta.wikimedia.org" rel="dns-prefetch"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Flyweight_pattern rootpage-Flyweight_pattern skin-vector action-view feature-page-action-bar-v2"> <div class="noprint" id="mw-page-base"></div>
<div class="noprint" id="mw-head-base"></div>
<div class="mw-body" id="content" role="main">
<a id="top"></a>
<div id="siteNotice"><!-- CentralNotice --></div>
<div class="mw-indicators">
</div>
<h1 class="firstHeading" id="firstHeading" lang="en">Flyweight pattern</h1>
<div class="mw-body-content" id="bodyContent">
<div id="siteSub">From Wikipedia, the free encyclopedia</div>
<div id="contentSub"></div>
<div class="mw-jump" id="jump-to-nav">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
</div>
<div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="en"><table class="metadata plainlinks ambox ambox-style ambox-More_footnotes" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px"><img alt="" data-file-height="48" data-file-width="48" height="40" src="//upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/40px-Text_document_with_red_question_mark.svg.png" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/60px-Text_document_with_red_question_mark.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/80px-Text_document_with_red_question_mark.svg.png 2x" width="40"/></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This article includes a <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">list of references</a>, but <b>its sources remain unclear</b> because it has <b>insufficient <a href="/wiki/Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">inline citations</a></b>. <span class="hide-when-compact">Please help to <a href="/wiki/Wikipedia:WikiProject_Fact_and_Reference_Check" title="Wikipedia:WikiProject Fact and Reference Check">improve</a> this article by <a href="/wiki/Wikipedia:When_to_cite" title="Wikipedia:When to cite">introducing</a> more precise citations.</span> <small><i>(May 2008)</i></small> <small class="hide-when-compact"><i>(<a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this template message</a>)</i></small></span></td>
</tr>
</table>
<p>In <a href="/wiki/Computer_programming" title="Computer programming">computer programming</a>, <b>flyweight</b> is a <a class="mw-redirect" href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">software design pattern</a>. A flyweight is an <a href="/wiki/Object_(computer_science)" title="Object (computer science)">object</a> that minimizes <a href="/wiki/Computer_memory" title="Computer memory">memory</a> use by sharing as much data as possible with other similar objects; it is a way to use objects in large numbers when a simple repeated representation would use an unacceptable amount of memory. Often some parts of the object state can be shared, and it is common practice to hold them in external <a href="/wiki/Data_structure" title="Data structure">data structures</a> and pass them to the flyweight objects temporarily when they are used.</p>
<p>A classic example usage of the flyweight pattern is the data structures for graphical representation of characters in a <a href="/wiki/Word_processor" title="Word processor">word processor</a>. It might be desirable to have, for each character in a document, a <a href="/wiki/Glyph" title="Glyph">glyph</a> object containing its font outline, font metrics, and other formatting data, but this would amount to hundreds or thousands of bytes for each character. Instead, for every character there might be a <a href="/wiki/Reference_(computer_science)" title="Reference (computer science)">reference</a> to a flyweight glyph object shared by every instance of the same character in the document; only the position of each character (in the document and/or the page) would need to be stored internally.</p>
<p>Another example is <a href="/wiki/String_interning" title="String interning">string interning</a>.</p>
<p>In other contexts the idea of sharing identical data structures is called <a href="/wiki/Hash_consing" title="Hash consing">hash consing</a>.</p>
<p></p>
<div class="toc" id="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#History"><span class="tocnumber">1</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Immutability_and_equality"><span class="tocnumber">2</span> <span class="toctext">Immutability and equality</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Concurrency"><span class="tocnumber">3</span> <span class="toctext">Concurrency</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#Example_in_C.23"><span class="tocnumber">4</span> <span class="toctext">Example in C#</span></a>
<ul>
<li class="toclevel-2 tocsection-5"><a href="#Simple_implementation"><span class="tocnumber">4.1</span> <span class="toctext">Simple implementation</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-6"><a href="#Example_in_Java"><span class="tocnumber">5</span> <span class="toctext">Example in Java</span></a></li>
<li class="toclevel-1 tocsection-7"><a href="#Example_in_Scala"><span class="tocnumber">6</span> <span class="toctext">Example in Scala</span></a></li>
<li class="toclevel-1 tocsection-8"><a href="#Example_in_Ruby"><span class="tocnumber">7</span> <span class="toctext">Example in Ruby</span></a></li>
<li class="toclevel-1 tocsection-9"><a href="#Example_in_Python"><span class="tocnumber">8</span> <span class="toctext">Example in Python</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#Example_in_Swift"><span class="tocnumber">9</span> <span class="toctext">Example in Swift</span></a></li>
<li class="toclevel-1 tocsection-11"><a href="#See_also"><span class="tocnumber">10</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#References"><span class="tocnumber">11</span> <span class="toctext">References</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="History">History</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=1" title="Edit section: History">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>According to the textbook <i><a class="mw-redirect" href="/wiki/Design_Patterns_(book)" title="Design Patterns (book)">Design Patterns: Elements of Reusable Object-Oriented Software</a></i>,<sup class="reference" id="cite_ref-1"><a href="#cite_note-1">[1]</a></sup> the flyweight pattern was first coined and extensively explored by <a class="new" href="/w/index.php?title=Paul_Calder&amp;action=edit&amp;redlink=1" title="Paul Calder (page does not exist)">Paul Calder</a> and <a class="new" href="/w/index.php?title=Mark_Linton&amp;action=edit&amp;redlink=1" title="Mark Linton (page does not exist)">Mark Linton</a> in 1990 to efficiently handle glyph information in a WYSIWYG document editor,<sup class="reference" id="cite_ref-2"><a href="#cite_note-2">[2]</a></sup> although similar techniques were already used in other systems, e.g., an application framework by Weinand et al. (1988).<sup class="reference" id="cite_ref-3"><a href="#cite_note-3">[3]</a></sup></p>
<h2><span class="mw-headline" id="Immutability_and_equality">Immutability and equality</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=2" title="Edit section: Immutability and equality">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>To enable safe sharing, between clients and threads, Flyweight objects must be <a href="/wiki/Immutable_object" title="Immutable object">immutable</a>. Flyweight objects are by definition value objects. The identity of the object instance is of no consequence therefore two Flyweight instances of the same value are considered equal.</p>
<p>Example in C# (note Equals and GetHashCode overrides as well as == and != operator overloads):</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">public</span> <span class="k">class</span> <span class="nc">CoffeeFlavour</span> <span class="p">{</span>
    <span class="k">private</span> <span class="k">readonly</span> <span class="kt">string</span> <span class="n">_flavour</span><span class="p">;</span>

    <span class="k">public</span> <span class="nf">CoffeeFlavour</span><span class="p">(</span><span class="kt">string</span> <span class="n">flavour</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">_flavour</span> <span class="p">=</span> <span class="n">flavour</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="kt">string</span> <span class="n">Flavour</span> <span class="p">{</span>
        <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_flavour</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">override</span> <span class="kt">bool</span> <span class="nf">Equals</span><span class="p">(</span><span class="kt">object</span> <span class="n">obj</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">ReferenceEquals</span><span class="p">(</span><span class="k">null</span><span class="p">,</span> <span class="n">obj</span><span class="p">))</span> <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
        <span class="k">return</span> <span class="n">obj</span> <span class="k">is</span> <span class="n">CoffeeFlavour</span> <span class="p">&amp;&amp;</span> <span class="n">Equals</span><span class="p">((</span><span class="n">CoffeeFlavour</span><span class="p">)</span><span class="n">obj</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="kt">bool</span> <span class="nf">Equals</span><span class="p">(</span><span class="n">CoffeeFlavour</span> <span class="n">other</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="kt">string</span><span class="p">.</span><span class="n">Equals</span><span class="p">(</span><span class="n">_flavour</span><span class="p">,</span> <span class="n">other</span><span class="p">.</span><span class="n">_flavour</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">override</span> <span class="kt">int</span> <span class="nf">GetHashCode</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">(</span><span class="n">_flavour</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">?</span> <span class="n">_flavour</span><span class="p">.</span><span class="n">GetHashCode</span><span class="p">()</span> <span class="p">:</span> <span class="m">0</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">bool</span> <span class="k">operator</span> <span class="p">==(</span><span class="n">CoffeeFlavour</span> <span class="n">a</span><span class="p">,</span> <span class="n">CoffeeFlavour</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nf">Equals</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">);</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">static</span> <span class="kt">bool</span> <span class="k">operator</span> <span class="p">!=(</span><span class="n">CoffeeFlavour</span> <span class="n">a</span><span class="p">,</span> <span class="n">CoffeeFlavour</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">!</span><span class="n">Equals</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
<h2><span class="mw-headline" id="Concurrency">Concurrency</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=3" title="Edit section: Concurrency">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Special consideration must be made in scenarios where Flyweight objects are created on multiple threads. If the list of values is finite and known in advance the Flyweights can be instantiated ahead of time and retrieved from a container on multiple threads with no contention. If Flyweights are instantiated on multiple threads there are two options:</p>
<ol>
<li>Make Flyweight instantiation single threaded thus introducing contention and ensuring one instance per value.</li>
<li>Allow concurrent threads to create multiple Flyweight instances thus eliminating contention and allowing multiple instances per value. This option is only viable if the equality criterion is met.</li>
</ol>
<h2><span class="mw-headline" id="Example_in_C.23">Example in C#</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=4" title="Edit section: Example in C#">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">using</span> <span class="nn">System.Collections.Concurrent</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Threading</span><span class="p">;</span>

<span class="k">public</span> <span class="k">interface</span> <span class="n">ICoffeeFlavourFactory</span> <span class="p">{</span>
    <span class="n">CoffeeFlavour</span> <span class="nf">GetFlavour</span><span class="p">(</span><span class="kt">string</span> <span class="n">flavour</span><span class="p">);</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">ReducedMemoryFootprint</span> <span class="p">:</span> <span class="n">ICoffeeFlavourFactory</span> <span class="p">{</span>
    <span class="k">private</span> <span class="k">readonly</span> <span class="kt">object</span> <span class="n">_cacheLock</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">object</span><span class="p">();</span>
    <span class="k">private</span> <span class="k">readonly</span> <span class="n">IDictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="n">CoffeeFlavour</span><span class="p">&gt;</span> <span class="n">_cache</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Dictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="n">CoffeeFlavour</span><span class="p">&gt;();</span>

    <span class="k">public</span> <span class="n">CoffeeFlavour</span> <span class="nf">GetFlavour</span><span class="p">(</span><span class="kt">string</span> <span class="n">flavour</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">_cache</span><span class="p">.</span><span class="n">ContainsKey</span><span class="p">(</span><span class="n">flavour</span><span class="p">))</span> <span class="k">return</span> <span class="n">_cache</span><span class="p">[</span><span class="n">flavour</span><span class="p">];</span>
        <span class="kt">var</span> <span class="n">coffeeFlavour</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CoffeeFlavour</span><span class="p">(</span><span class="n">flavour</span><span class="p">);</span>
        <span class="n">ThreadPool</span><span class="p">.</span><span class="n">QueueUserWorkItem</span><span class="p">(</span><span class="n">AddFlavourToCache</span><span class="p">,</span> <span class="n">coffeeFlavour</span><span class="p">);</span>
        <span class="k">return</span> <span class="n">coffeeFlavour</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">void</span> <span class="nf">AddFlavourToCache</span><span class="p">(</span><span class="kt">object</span> <span class="n">state</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">var</span> <span class="n">coffeeFlavour</span> <span class="p">=</span> <span class="p">(</span><span class="n">CoffeeFlavour</span><span class="p">)</span><span class="n">state</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(!</span><span class="n">_cache</span><span class="p">.</span><span class="n">ContainsKey</span><span class="p">(</span><span class="n">coffeeFlavour</span><span class="p">.</span><span class="n">Flavour</span><span class="p">))</span> <span class="p">{</span>
            <span class="k">lock</span> <span class="p">(</span><span class="n">_cacheLock</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(!</span><span class="n">_cache</span><span class="p">.</span><span class="n">ContainsKey</span><span class="p">(</span><span class="n">coffeeFlavour</span><span class="p">.</span><span class="n">Flavour</span><span class="p">))</span> <span class="n">_cache</span><span class="p">.</span><span class="n">Add</span><span class="p">(</span><span class="n">coffeeFlavour</span><span class="p">.</span><span class="n">Flavour</span><span class="p">,</span> <span class="n">coffeeFlavour</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">MinimumMemoryFootprint</span> <span class="p">:</span> <span class="n">ICoffeeFlavourFactory</span> <span class="p">{</span>
    <span class="k">private</span> <span class="k">readonly</span> <span class="n">ConcurrentDictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="n">CoffeeFlavour</span><span class="p">&gt;</span> <span class="n">_cache</span> <span class="p">=</span> <span class="k">new</span> <span class="n">ConcurrentDictionary</span><span class="p">&lt;</span><span class="kt">string</span><span class="p">,</span> <span class="n">CoffeeFlavour</span><span class="p">&gt;();</span>

    <span class="k">public</span> <span class="n">CoffeeFlavour</span> <span class="nf">GetFlavour</span><span class="p">(</span><span class="kt">string</span> <span class="n">flavour</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">_cache</span><span class="p">.</span><span class="n">GetOrAdd</span><span class="p">(</span><span class="n">flavour</span><span class="p">,</span> <span class="n">flv</span> <span class="p">=&gt;</span> <span class="k">new</span> <span class="n">CoffeeFlavour</span><span class="p">(</span><span class="n">flv</span><span class="p">));</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
<h3><span class="mw-headline" id="Simple_implementation">Simple implementation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=5" title="Edit section: Simple implementation">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Flyweight allows you to share bulky data which are common to each object. In other words, if you think that same data is repeating for every object, you can use this pattern to point to the single object and hence can easily save space. Here the FlyweightPointer creates a static member Company, which is used for every object of MyObject.</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c1">// Defines Flyweight object which repeats itself.</span>
<span class="k">public</span> <span class="k">class</span> <span class="nc">FlyWeight</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">CompanyName</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">CompanyLocation</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">CompanyWebSite</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="c1">//Bulky Data</span>
    <span class="k">public</span> <span class="kt">byte</span><span class="p">[]</span> <span class="n">CompanyLogo</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span> 
<span class="p">}</span>

<span class="k">public</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">FlyWeightPointer</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">static</span> <span class="k">readonly</span> <span class="n">FlyWeight</span> <span class="n">Company</span> <span class="p">=</span> <span class="k">new</span> <span class="n">FlyWeight</span>
    <span class="p">{</span>
        <span class="n">CompanyName</span> <span class="p">=</span> <span class="s">"Abc"</span><span class="p">,</span>
        <span class="n">CompanyLocation</span> <span class="p">=</span> <span class="s">"XYZ"</span><span class="p">,</span>
        <span class="n">CompanyWebSite</span> <span class="p">=</span> <span class="s">"www.abc.com"</span>
        <span class="c1">// Load CompanyLogo here</span>
    <span class="p">};</span>
<span class="p">}</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">MyObject</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">public</span> <span class="kt">string</span> <span class="n">Company</span>
    <span class="p">{</span>
        <span class="k">get</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="n">FlyWeightPointer</span><span class="p">.</span><span class="n">Company</span><span class="p">.</span><span class="n">CompanyName</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
<h2><span class="mw-headline" id="Example_in_Java">Example in Java</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=6" title="Edit section: Example in Java">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Vector</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.concurrent.ConcurrentHashMap</span><span class="o">;</span>

<span class="c1">// Instances of CoffeeFlavour will be the Flyweights</span>
<span class="kd">class</span> <span class="nc">CoffeeFlavour</span> <span class="o">{</span>
  <span class="kd">private</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>

  <span class="n">CoffeeFlavour</span><span class="o">(</span><span class="n">String</span> <span class="n">newFlavor</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">newFlavor</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@Override</span>
  <span class="kd">public</span> <span class="n">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
  <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// Menu acts as a factory and cache for CoffeeFlavour flyweight objects</span>
<span class="kd">class</span> <span class="nc">Menu</span> <span class="o">{</span>
  <span class="kd">private</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">CoffeeFlavour</span><span class="o">&gt;</span> <span class="n">flavours</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ConcurrentHashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">CoffeeFlavour</span><span class="o">&gt;();</span>

  <span class="n">CoffeeFlavour</span> <span class="nf">lookup</span><span class="o">(</span><span class="n">String</span> <span class="n">flavorName</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">(!</span><span class="n">flavours</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">flavorName</span><span class="o">))</span>
      <span class="n">flavours</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">flavorName</span><span class="o">,</span> <span class="k">new</span> <span class="n">CoffeeFlavour</span><span class="o">(</span><span class="n">flavorName</span><span class="o">));</span>
    <span class="k">return</span> <span class="n">flavours</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">flavorName</span><span class="o">);</span>
  <span class="o">}</span>

  <span class="kt">int</span> <span class="nf">totalCoffeeFlavoursMade</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">flavours</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
  <span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">Order</span> <span class="o">{</span>
  <span class="kd">private</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">tableNumber</span><span class="o">;</span>
  <span class="kd">private</span> <span class="kd">final</span> <span class="n">CoffeeFlavour</span> <span class="n">flavour</span><span class="o">;</span>

  <span class="n">Order</span><span class="o">(</span><span class="kt">int</span> <span class="n">tableNumber</span><span class="o">,</span> <span class="n">CoffeeFlavour</span> <span class="n">flavor</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">this</span><span class="o">.</span><span class="na">tableNumber</span> <span class="o">=</span> <span class="n">tableNumber</span><span class="o">;</span>
    <span class="k">this</span><span class="o">.</span><span class="na">flavour</span> <span class="o">=</span> <span class="n">flavor</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="kt">void</span> <span class="nf">serve</span><span class="o">()</span> <span class="o">{</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Serving "</span> <span class="o">+</span> <span class="n">flavour</span> <span class="o">+</span> <span class="s">" to table "</span> <span class="o">+</span> <span class="n">tableNumber</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">CoffeeShop</span> <span class="o">{</span>
  <span class="kd">private</span> <span class="kd">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Order</span><span class="o">&gt;</span> <span class="n">orders</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Vector</span><span class="o">&lt;</span><span class="n">Order</span><span class="o">&gt;();</span>
  <span class="kd">private</span> <span class="kd">final</span> <span class="n">Menu</span> <span class="n">menu</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Menu</span><span class="o">();</span>

  <span class="kt">void</span> <span class="nf">takeOrder</span><span class="o">(</span><span class="n">String</span> <span class="n">flavourName</span><span class="o">,</span> <span class="kt">int</span> <span class="n">table</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">CoffeeFlavour</span> <span class="n">flavour</span> <span class="o">=</span> <span class="n">menu</span><span class="o">.</span><span class="na">lookup</span><span class="o">(</span><span class="n">flavourName</span><span class="o">);</span>
    <span class="n">Order</span> <span class="n">order</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Order</span><span class="o">(</span><span class="n">table</span><span class="o">,</span> <span class="n">flavour</span><span class="o">);</span>
    <span class="n">orders</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">order</span><span class="o">);</span>
  <span class="o">}</span>
  
  <span class="kt">void</span> <span class="nf">service</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">for</span> <span class="o">(</span><span class="n">Order</span> <span class="n">order</span> <span class="o">:</span> <span class="n">orders</span><span class="o">)</span>
      <span class="n">order</span><span class="o">.</span><span class="na">serve</span><span class="o">();</span>
  <span class="o">}</span>
  
  <span class="n">String</span> <span class="nf">report</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">return</span> <span class="s">"\ntotal CoffeeFlavour objects made: "</span>
        <span class="o">+</span> <span class="n">menu</span><span class="o">.</span><span class="na">totalCoffeeFlavoursMade</span><span class="o">();</span>
  <span class="o">}</span>

  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">CoffeeShop</span> <span class="n">shop</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CoffeeShop</span><span class="o">();</span>

    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Cappuccino"</span><span class="o">,</span> <span class="mi">2</span><span class="o">);</span>
    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Frappe"</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Espresso"</span><span class="o">,</span> <span class="mi">1</span><span class="o">);</span>
    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Frappe"</span><span class="o">,</span> <span class="mi">897</span><span class="o">);</span>
    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Cappuccino"</span><span class="o">,</span> <span class="mi">97</span><span class="o">);</span>
    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Frappe"</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Espresso"</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Cappuccino"</span><span class="o">,</span> <span class="mi">3</span><span class="o">);</span>
    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Espresso"</span><span class="o">,</span> <span class="mi">96</span><span class="o">);</span>
    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Frappe"</span><span class="o">,</span> <span class="mi">552</span><span class="o">);</span>
    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Cappuccino"</span><span class="o">,</span> <span class="mi">121</span><span class="o">);</span>
    <span class="n">shop</span><span class="o">.</span><span class="na">takeOrder</span><span class="o">(</span><span class="s">"Espresso"</span><span class="o">,</span> <span class="mi">121</span><span class="o">);</span>

    <span class="n">shop</span><span class="o">.</span><span class="na">service</span><span class="o">();</span>
    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">shop</span><span class="o">.</span><span class="na">report</span><span class="o">());</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div>
<h2><span class="mw-headline" id="Example_in_Scala">Example in Scala</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=7" title="Edit section: Example in Scala">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="cm">/*</span>
<span class="cm">https://gist.github.com/pkinsky/111aee2f129c03ff1d0d</span>
<span class="cm">run as a script using `scala flyweight.scala`</span>
<span class="cm">expected output:</span>
<span class="cm">  Serving CoffeeFlavour(Espresso) to table 121</span>
<span class="cm">  Serving CoffeeFlavour(Cappuccino) to table 121</span>
<span class="cm">  Serving CoffeeFlavour(Frappe) to table 552</span>
<span class="cm">  Serving CoffeeFlavour(Espresso) to table 96</span>
<span class="cm">  Serving CoffeeFlavour(Cappuccino) to table 3</span>
<span class="cm">  Serving CoffeeFlavour(Espresso) to table 3</span>
<span class="cm">  Serving CoffeeFlavour(Frappe) to table 3</span>
<span class="cm">  Serving CoffeeFlavour(Cappuccino) to table 97</span>
<span class="cm">  Serving CoffeeFlavour(Frappe) to table 897</span>
<span class="cm">  Serving CoffeeFlavour(Espresso) to table 1</span>
<span class="cm">  Serving CoffeeFlavour(Frappe) to table 1</span>
<span class="cm">  Serving CoffeeFlavour(Cappuccino) to table 2</span>
<span class="cm">  total CoffeeFlavour objects made: 3</span>
<span class="cm">*/</span>

<span class="k">class</span> <span class="nc">CoffeeFlavour</span><span class="o">(</span><span class="k">val</span> <span class="n">name</span><span class="k">:</span> <span class="kt">String</span><span class="o">){</span>
    <span class="k">override</span> <span class="k">def</span> <span class="n">toString</span> <span class="k">=</span> <span class="s">s"CoffeeFlavour(</span><span class="si">$name</span><span class="s">)"</span>
<span class="o">}</span>

<span class="k">object</span> <span class="nc">CoffeeFlavour</span> <span class="o">{</span>
    <span class="k">import</span> <span class="nn">scala.collection.mutable.Map</span>
    <span class="k">private</span> <span class="k">val</span> <span class="n">cache</span> <span class="k">=</span> <span class="nc">Map</span><span class="o">.</span><span class="n">empty</span><span class="o">[</span><span class="kt">String</span>, <span class="kt">CoffeeFlavour</span><span class="o">]</span>

    <span class="k">def</span> <span class="n">apply</span><span class="o">(</span><span class="n">name</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span><span class="k">:</span> <span class="kt">CoffeeFlavour</span> <span class="o">=</span>
        <span class="n">cache</span><span class="o">.</span><span class="n">getOrElseUpdate</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="k">new</span> <span class="nc">CoffeeFlavour</span><span class="o">(</span><span class="n">name</span><span class="o">))</span>

    <span class="k">def</span> <span class="n">totalCoffeeFlavoursMade</span> <span class="k">=</span> <span class="n">cache</span><span class="o">.</span><span class="n">size</span>
<span class="o">}</span>


<span class="k">case</span> <span class="k">class</span> <span class="nc">Order</span><span class="o">(</span><span class="n">tableNumber</span><span class="k">:</span> <span class="kt">Int</span><span class="o">,</span> <span class="n">flavour</span><span class="k">:</span> <span class="kt">CoffeeFlavour</span><span class="o">){</span>

  <span class="k">def</span> <span class="n">serve</span><span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span>
    <span class="n">println</span><span class="o">(</span><span class="s">s"Serving </span><span class="si">$flavour</span><span class="s"> to table </span><span class="si">$tableNumber</span><span class="s">"</span><span class="o">)</span>
<span class="o">}</span>

<span class="k">object</span> <span class="nc">CoffeeShop</span> <span class="o">{</span>
  <span class="k">var</span> <span class="n">orders</span> <span class="k">=</span> <span class="nc">List</span><span class="o">.</span><span class="n">empty</span><span class="o">[</span><span class="kt">Order</span><span class="o">]</span>

  <span class="k">def</span> <span class="n">takeOrder</span><span class="o">(</span><span class="n">flavourName</span><span class="k">:</span> <span class="kt">String</span><span class="o">,</span> <span class="n">table</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">val</span> <span class="n">flavour</span> <span class="k">=</span> <span class="nc">CoffeeFlavour</span><span class="o">(</span><span class="n">flavourName</span><span class="o">)</span>
    <span class="k">val</span> <span class="n">order</span> <span class="k">=</span> <span class="nc">Order</span><span class="o">(</span><span class="n">table</span><span class="o">,</span> <span class="n">flavour</span><span class="o">)</span>
    <span class="n">orders</span> <span class="k">=</span> <span class="n">order</span> <span class="o">::</span> <span class="n">orders</span>
  <span class="o">}</span>

  <span class="k">def</span> <span class="n">service</span><span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span> <span class="n">orders</span><span class="o">.</span><span class="n">foreach</span><span class="o">(</span><span class="k">_</span><span class="o">.</span><span class="n">serve</span><span class="o">)</span>

  <span class="k">def</span> <span class="n">report</span> <span class="k">=</span>
    <span class="s">s"total CoffeeFlavour objects made: </span><span class="si">${</span><span class="nc">CoffeeFlavour</span><span class="o">.</span><span class="n">totalCoffeeFlavoursMade</span><span class="si">}</span><span class="s">"</span>
<span class="o">}</span>


<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Cappuccino"</span><span class="o">,</span> <span class="mi">2</span><span class="o">)</span>
<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Frappe"</span><span class="o">,</span> <span class="mi">1</span><span class="o">)</span>
<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Espresso"</span><span class="o">,</span> <span class="mi">1</span><span class="o">)</span>
<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Frappe"</span><span class="o">,</span> <span class="mi">897</span><span class="o">)</span>
<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Cappuccino"</span><span class="o">,</span> <span class="mi">97</span><span class="o">)</span>
<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Frappe"</span><span class="o">,</span> <span class="mi">3</span><span class="o">)</span>
<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Espresso"</span><span class="o">,</span> <span class="mi">3</span><span class="o">)</span>
<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Cappuccino"</span><span class="o">,</span> <span class="mi">3</span><span class="o">)</span>
<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Espresso"</span><span class="o">,</span> <span class="mi">96</span><span class="o">)</span>
<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Frappe"</span><span class="o">,</span> <span class="mi">552</span><span class="o">)</span>
<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Cappuccino"</span><span class="o">,</span> <span class="mi">121</span><span class="o">)</span>
<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">takeOrder</span><span class="o">(</span><span class="s">"Espresso"</span><span class="o">,</span> <span class="mi">121</span><span class="o">)</span>

<span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">service</span>
<span class="n">println</span><span class="o">(</span><span class="nc">CoffeeShop</span><span class="o">.</span><span class="n">report</span><span class="o">)</span>
</pre></div>
<h2><span class="mw-headline" id="Example_in_Ruby">Example in Ruby</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=8" title="Edit section: Example in Ruby">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c1"># Flyweight Object</span>
<span class="k">class</span> <span class="nc">Lamp</span>
  <span class="kp">attr_reader</span> <span class="ss">:color</span>
  <span class="c1">#attr_reader makes color attribute available outside </span>
  <span class="c1">#of the class by calling .color on a Lamp instance</span>

  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">color</span><span class="p">)</span>
    <span class="vi">@color</span> <span class="o">=</span> <span class="n">color</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">class</span> <span class="nc">TreeBranch</span>
  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">branch_number</span><span class="p">)</span>
    <span class="vi">@branch_number</span> <span class="o">=</span> <span class="n">branch_number</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">hang</span><span class="p">(</span><span class="n">lamp</span><span class="p">)</span>
    <span class="nb">puts</span> <span class="s2">"Hang </span><span class="si">#{</span><span class="n">lamp</span><span class="o">.</span><span class="n">color</span><span class="si">}</span><span class="s2"> lamp on branch </span><span class="si">#{</span><span class="vi">@branch_number</span><span class="si">}</span><span class="s2">"</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># Flyweight Factory</span>
<span class="k">class</span> <span class="nc">LampFactory</span>
  <span class="k">def</span> <span class="nf">initialize</span>
    <span class="vi">@lamps</span> <span class="o">=</span> <span class="p">{}</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">find_lamp</span><span class="p">(</span><span class="n">color</span><span class="p">)</span>
    <span class="k">if</span> <span class="vi">@lamps</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="n">color</span><span class="p">)</span>
      <span class="c1"># if the lamp already exists, reference it instead of creating a new one</span>
      <span class="n">lamp</span> <span class="o">=</span> <span class="vi">@lamps</span><span class="o">[</span><span class="n">color</span><span class="o">]</span>
    <span class="k">else</span>
      <span class="n">lamp</span> <span class="o">=</span> <span class="no">Lamp</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">color</span><span class="p">)</span>
      <span class="vi">@lamps</span><span class="o">[</span><span class="n">color</span><span class="o">]</span> <span class="o">=</span> <span class="n">lamp</span>
    <span class="k">end</span>
    <span class="n">lamp</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">total_number_of_lamps_made</span>
    <span class="vi">@lamps</span><span class="o">.</span><span class="n">size</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="k">class</span> <span class="nc">ChristmasTree</span>
  <span class="k">def</span> <span class="nf">initialize</span>
    <span class="vi">@lamp_factory</span> <span class="o">=</span> <span class="no">LampFactory</span><span class="o">.</span><span class="n">new</span>
    <span class="vi">@lamps_hung</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="n">dress_up_the_tree</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">hang_lamp</span><span class="p">(</span><span class="n">color</span><span class="p">,</span> <span class="n">branch_number</span><span class="p">)</span>
    <span class="no">TreeBranch</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">branch_number</span><span class="p">)</span><span class="o">.</span><span class="n">hang</span><span class="p">(</span><span class="vi">@lamp_factory</span><span class="o">.</span><span class="n">find_lamp</span><span class="p">(</span><span class="n">color</span><span class="p">))</span>
    <span class="vi">@lamps_hung</span> <span class="o">+=</span> <span class="mi">1</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">dress_up_the_tree</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'red'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'yellow'</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'red'</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'yellow'</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'red'</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'yellow'</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'red'</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'yellow'</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'red'</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'yellow'</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'red'</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'yellow'</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'red'</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'blue'</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>
    <span class="n">hang_lamp</span><span class="p">(</span><span class="s1">'yellow'</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>
    <span class="nb">puts</span> <span class="s2">"Made </span><span class="si">#{</span><span class="vi">@lamp_factory</span><span class="o">.</span><span class="n">total_number_of_lamps_made</span><span class="si">}</span><span class="s2"> total lamps"</span>
    <span class="nb">puts</span> <span class="s2">"Hung </span><span class="si">#{</span><span class="vi">@lamps_hung</span><span class="si">}</span><span class="s2"> total lamps"</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
<h2><span class="mw-headline" id="Example_in_Python">Example in Python</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=9" title="Edit section: Example in Python">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>By default, instances of <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python's</a> new-style classes have a dictionary to store instance data. When there are many instances, the total space consumed by the many dictionaries can be large. Accordingly, new-style classes support a <i>__slots__</i> class variable to save space. It works by suppressing the instance dictionary and instead making more compact objects with fixed pointers to predefined attributes. This forgoes the ability to easily add new attributes, but saves the space overhead of a sparse <a href="/wiki/Hash_table" title="Hash table">hash table</a> for each instance. <sup class="reference" id="cite_ref-4"><a href="#cite_note-4">[4]</a></sup></p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">class</span> <span class="nc">Part</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>

    <span class="n">__slots__</span> <span class="o">=</span> <span class="p">[</span><span class="s1">'part_number'</span><span class="p">,</span> <span class="s1">'part_name'</span><span class="p">,</span> <span class="s1">'unit_cost'</span><span class="p">]</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">part_number</span><span class="p">,</span> <span class="n">part_name</span><span class="p">,</span> <span class="n">unit_cost</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">part_number</span> <span class="o">=</span> <span class="n">part_number</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">part_name</span> <span class="o">=</span> <span class="n">part_name</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">unit_cost</span> <span class="o">=</span> <span class="n">unit_cost</span>

    <span class="k">def</span> <span class="nf">total_cost</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">quantity</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">unit_cost</span> <span class="o">*</span> <span class="n">quantity</span>

<span class="n">assembly</span> <span class="o">=</span> <span class="p">[(</span><span class="mi">30</span><span class="p">,</span> <span class="n">Part</span><span class="p">(</span><span class="s1">'XL123'</span><span class="p">,</span> <span class="s1">'xwidget'</span><span class="p">,</span> <span class="mf">1.25</span><span class="p">)),</span>
            <span class="p">(</span><span class="mi">20</span><span class="p">,</span> <span class="n">Part</span><span class="p">(</span><span class="s1">'CQ456'</span><span class="p">,</span> <span class="s1">'jcog'</span><span class="p">,</span> <span class="mf">3.75</span><span class="p">)),</span>
            <span class="p">(</span><span class="mi">12</span><span class="p">,</span> <span class="n">Part</span><span class="p">(</span><span class="s1">'MT789'</span><span class="p">,</span> <span class="s1">'cgear'</span><span class="p">,</span> <span class="mf">2.50</span><span class="p">))]</span>

<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">(</span><span class="n">part</span><span class="o">.</span><span class="n">total_cost</span><span class="p">(</span><span class="n">quantity</span><span class="p">)</span> <span class="k">for</span> <span class="n">quantity</span><span class="p">,</span> <span class="n">part</span> <span class="ow">in</span> <span class="n">assembly</span><span class="p">))</span>
</pre></div>
<h2><span class="mw-headline" id="Example_in_Swift">Example in Swift</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=10" title="Edit section: Example in Swift">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="kd">import</span> <span class="nc">Foundation</span>

<span class="c1">// Instances of CoffeeFlavour will be the Flyweights</span>
<span class="kd">struct</span> <span class="nc">CoffeeFlavor</span> <span class="p">:</span> <span class="n">CustomStringConvertible</span> <span class="p">{</span>
    <span class="kd">var</span> <span class="nv">flavor</span><span class="p">:</span> <span class="nb">String</span>
    <span class="kd">var</span> <span class="nv">description</span><span class="p">:</span> <span class="nb">String</span> <span class="p">{</span> <span class="k">return</span> <span class="n">flavor</span> <span class="p">}</span>
<span class="p">}</span>

<span class="c1">// Menu acts as a factory and cache for CoffeeFlavour flyweight objects</span>
<span class="kd">struct</span> <span class="nc">Menu</span> <span class="p">{</span>
    <span class="kd">private</span> <span class="kd">var</span> <span class="nv">flavors</span> <span class="p">=</span> <span class="p">[</span><span class="nb">String</span><span class="p">:</span> <span class="n">CoffeeFlavor</span><span class="p">]()</span>
    
    <span class="kr">mutating</span> <span class="kd">func</span> <span class="nf">lookup</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="nb">String</span><span class="p">)</span> <span class="p">-&gt;</span> <span class="n">CoffeeFlavor</span> <span class="p">{</span>
        <span class="k">if</span> <span class="kd">let</span> <span class="nv">f</span> <span class="p">=</span> <span class="n">flavors</span><span class="p">[</span><span class="n">flavor</span><span class="p">]</span> <span class="p">{</span> <span class="k">return</span> <span class="n">f</span> <span class="p">}</span> 
        <span class="k">else</span> <span class="p">{</span>
            <span class="kd">let</span> <span class="nv">cFlavor</span> <span class="p">=</span> <span class="n">CoffeeFlavor</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="n">flavor</span><span class="p">)</span>
            <span class="n">flavors</span><span class="p">[</span><span class="n">flavor</span><span class="p">]</span> <span class="p">=</span> <span class="n">cFlavor</span>
            <span class="k">return</span> <span class="n">cFlavor</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">struct</span> <span class="nc">CoffeeShop</span> <span class="p">{</span>
    <span class="kd">private</span> <span class="kd">var</span> <span class="nv">orders</span> <span class="p">=</span> <span class="p">[</span><span class="nb">Int</span><span class="p">:</span> <span class="n">CoffeeFlavor</span><span class="p">]()</span>
    <span class="kd">private</span> <span class="kd">var</span> <span class="nv">menu</span> <span class="p">=</span> <span class="n">Menu</span><span class="p">()</span>
    
    <span class="kr">mutating</span> <span class="kd">func</span> <span class="nf">takeOrder</span><span class="p">(</span><span class="n">flavor</span> <span class="n">flavor</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="nb">Int</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">orders</span><span class="p">[</span><span class="n">table</span><span class="p">]</span> <span class="p">=</span> <span class="n">menu</span><span class="p">.</span><span class="n">lookup</span><span class="p">(</span><span class="n">flavor</span><span class="p">)</span>
    <span class="p">}</span>
    
    <span class="kd">func</span> <span class="nf">serve</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">for</span> <span class="p">(</span><span class="n">table</span><span class="p">,</span> <span class="n">flavor</span><span class="p">)</span> <span class="k">in</span> <span class="n">orders</span> <span class="p">{</span>
            <span class="bp">print</span><span class="p">(</span><span class="s">"Serving </span><span class="si">\(</span><span class="n">flavor</span><span class="si">)</span><span class="s"> to table </span><span class="si">\(</span><span class="n">table</span><span class="si">)</span><span class="s">"</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="kd">let</span> <span class="nv">coffeeShop</span> <span class="p">=</span> <span class="n">CoffeeShop</span><span class="p">()</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Frappe"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">3</span><span class="p">);</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">2</span><span class="p">);</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Frappe"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">15</span><span class="p">);</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">10</span><span class="p">);</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Frappe"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">8</span><span class="p">);</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">7</span><span class="p">);</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">4</span><span class="p">);</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">9</span><span class="p">);</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Frappe"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">12</span><span class="p">);</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Cappuccino"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">13</span><span class="p">);</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">takeOrder</span><span class="p">(</span><span class="n">flavor</span><span class="p">:</span> <span class="s">"Espresso"</span><span class="p">,</span> <span class="n">table</span><span class="p">:</span> <span class="mi">5</span><span class="p">);</span>
<span class="n">coffeeShop</span><span class="p">.</span><span class="n">serve</span><span class="p">()</span>
</pre></div>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=11" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="/wiki/Copy-on-write" title="Copy-on-write">Copy-on-write</a></li>
<li><a href="/wiki/Memoization" title="Memoization">Memoization</a></li>
<li><a class="mw-redirect" href="/wiki/Multiton" title="Multiton">Multiton</a></li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Flyweight_pattern&amp;action=edit&amp;section=12" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><cite class="citation book"><a href="/wiki/Erich_Gamma" title="Erich Gamma">Gamma, Erich</a>; <a class="mw-redirect" href="/wiki/Richard_Helm" title="Richard Helm">Richard Helm</a>, <a href="/wiki/Ralph_Johnson_(computer_scientist)" title="Ralph Johnson (computer scientist)">Ralph Johnson</a>, and <a href="/wiki/John_Vlissides" title="John Vlissides">John Vlissides</a> (1995). <i><a class="mw-redirect" href="/wiki/Design_Patterns_(book)" title="Design Patterns (book)">Design Patterns: Elements of Reusable Object-Oriented Software</a></i>. <a href="/wiki/Addison-Wesley" title="Addison-Wesley">Addison-Wesley</a>. pp. 205–206. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-201-63361-2" title="Special:BookSources/0-201-63361-2">0-201-63361-2</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFlyweight+pattern&amp;rft.aufirst=Erich&amp;rft.aulast=Gamma&amp;rft.btitle=Design+Patterns%3A+Elements+of+Reusable+Object-Oriented+Software&amp;rft.date=1995&amp;rft.genre=book&amp;rft.isbn=0-201-63361-2&amp;rft.pages=205-206&amp;rft.pub=Addison-Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span> <span class="error citation-comment" style="font-size:100%">Cite uses deprecated parameter <code style="color:inherit; border:inherit; padding:inherit;">|coauthors=</code> (<a href="/wiki/Help:CS1_errors#deprecated_params" title="Help:CS1 errors">help</a>)</span></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><cite class="citation conference">Calder, Paul R.; Linton, Mark A. (October 1990). <i>Glyphs: Flyweight Objects for User Interfaces</i>. The 3rd Annual <a href="/wiki/ACM_SIGGRAPH" title="ACM SIGGRAPH">ACM SIGGRAPH</a> Symposium on User Interface Software and Technology. Snowbird, Utah, United States. pp. 92–101. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a class="external text" href="//dx.doi.org/10.1145%2F97924.97935" rel="nofollow">10.1145/97924.97935</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-89791-410-4" title="Special:BookSources/0-89791-410-4">0-89791-410-4</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFlyweight+pattern&amp;rft.aufirst=Paul+R.&amp;rft.aulast=Calder&amp;rft.au=Linton%2C+Mark+A.&amp;rft.btitle=Glyphs%3A+Flyweight+Objects+for+User+Interfaces&amp;rft.date=1990-10&amp;rft.genre=conference&amp;rft_id=info%3Adoi%2F10.1145%2F97924.97935&amp;rft.isbn=0-89791-410-4&amp;rft.pages=92-101&amp;rft.place=Snowbird%2C+Utah%2C+United+States&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><cite class="citation conference">Weinand, Andre; Gamma, Erich; Marty, Rudolf (1988). <i>ET++—an object oriented application framework in C++</i>. <a href="/wiki/OOPSLA" title="OOPSLA">OOPSLA</a> (Object-Oriented Programming Systems, Languages and Applications). San Diego, California, United States. pp. 46–57. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a class="external text" href="//dx.doi.org/10.1145%2F62083.62089" rel="nofollow">10.1145/62083.62089</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-89791-284-5" title="Special:BookSources/0-89791-284-5">0-89791-284-5</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AFlyweight+pattern&amp;rft.aufirst=Andre&amp;rft.au=Gamma%2C+Erich&amp;rft.aulast=Weinand&amp;rft.au=Marty%2C+Rudolf&amp;rft.btitle=ET%2B%2B%94an+object+oriented+application+framework+in+C%2B%2B&amp;rft.date=1988&amp;rft.genre=conference&amp;rft_id=info%3Adoi%2F10.1145%2F62083.62089&amp;rft.isbn=0-89791-284-5&amp;rft.pages=46-57&amp;rft.place=San+Diego%2C+California%2C+United+States&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4">^</a></b></span> <span class="reference-text"><a class="external free" href="https://docs.python.org/3/reference/datamodel.html#slots" rel="nofollow">https://docs.python.org/3/reference/datamodel.html#slots</a></span></li>
</ol>
</div>
<div aria-labelledby="Software_design_patterns" class="navbox" role="navigation" style="padding:3px">
<table class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
<tr>
<th class="navbox-title" colspan="2" scope="col">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="/wiki/Template:Design_Patterns_patterns" title="Template:Design Patterns patterns"><abbr style=";;background:none transparent;border:none;" title="View this template">v</abbr></a></li>
<li class="nv-talk"><a href="/wiki/Template_talk:Design_Patterns_patterns" title="Template talk:Design Patterns patterns"><abbr style=";;background:none transparent;border:none;" title="Discuss this template">t</abbr></a></li>
<li class="nv-edit"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Template:Design_Patterns_patterns&amp;action=edit"><abbr style=";;background:none transparent;border:none;" title="Edit this template">e</abbr></a></li>
</ul>
</div>
<div id="Software_design_patterns" style="font-size:114%"><a href="/wiki/Software_design_pattern" title="Software design pattern">Software design patterns</a></div>
</th>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row"><a href="/wiki/Design_Patterns" title="Design Patterns">Gang of Four<br/>
patterns</a></th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em"></div>
<table class="nowraplinks navbox-subgroup" style="border-spacing:0">
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;">
<div style="padding:0em 0.75em;"><a href="/wiki/Creational_pattern" title="Creational pattern">Creational</a></div>
</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Abstract_factory_pattern" title="Abstract factory pattern">Abstract factory</a></li>
<li><a href="/wiki/Builder_pattern" title="Builder pattern">Builder</a></li>
<li><a href="/wiki/Factory_method_pattern" title="Factory method pattern">Factory method</a></li>
<li><a href="/wiki/Prototype_pattern" title="Prototype pattern">Prototype</a></li>
<li><a href="/wiki/Singleton_pattern" title="Singleton pattern">Singleton</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;">
<div style="padding:0em 0.75em;"><a href="/wiki/Structural_pattern" title="Structural pattern">Structural</a></div>
</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Adapter_pattern" title="Adapter pattern">Adapter</a></li>
<li><a href="/wiki/Bridge_pattern" title="Bridge pattern">Bridge</a></li>
<li><a href="/wiki/Composite_pattern" title="Composite pattern">Composite</a></li>
<li><a href="/wiki/Decorator_pattern" title="Decorator pattern">Decorator</a></li>
<li><a href="/wiki/Facade_pattern" title="Facade pattern">Facade</a></li>
<li><strong class="selflink">Flyweight</strong></li>
<li><a href="/wiki/Proxy_pattern" title="Proxy pattern">Proxy</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;">
<div style="padding:0em 0.75em;"><a href="/wiki/Behavioral_pattern" title="Behavioral pattern">Behavioral</a></div>
</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Chain-of-responsibility_pattern" title="Chain-of-responsibility pattern">Chain of responsibility</a></li>
<li><a href="/wiki/Command_pattern" title="Command pattern">Command</a></li>
<li><a href="/wiki/Interpreter_pattern" title="Interpreter pattern">Interpreter</a></li>
<li><a href="/wiki/Iterator_pattern" title="Iterator pattern">Iterator</a></li>
<li><a href="/wiki/Mediator_pattern" title="Mediator pattern">Mediator</a></li>
<li><a href="/wiki/Memento_pattern" title="Memento pattern">Memento</a></li>
<li><a href="/wiki/Observer_pattern" title="Observer pattern">Observer</a></li>
<li><a href="/wiki/State_pattern" title="State pattern">State</a></li>
<li><a href="/wiki/Strategy_pattern" title="Strategy pattern">Strategy</a></li>
<li><a href="/wiki/Template_method_pattern" title="Template method pattern">Template method</a></li>
<li><a href="/wiki/Visitor_pattern" title="Visitor pattern">Visitor</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row"><a href="/wiki/Concurrency_pattern" title="Concurrency pattern">Concurrency<br/>
patterns</a></th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Active_object" title="Active object">Active object</a></li>
<li><a href="/wiki/Balking_pattern" title="Balking pattern">Balking</a></li>
<li><a href="/wiki/Binding_properties_pattern" title="Binding properties pattern">Binding properties</a></li>
<li><a href="/wiki/Double-checked_locking" title="Double-checked locking">Double-checked locking</a></li>
<li><a href="/wiki/Asynchronous_method_invocation" title="Asynchronous method invocation">Event-based asynchronous</a></li>
<li><a href="/wiki/Guarded_suspension" title="Guarded suspension">Guarded suspension</a></li>
<li><a href="/wiki/Join-pattern" title="Join-pattern">Join</a></li>
<li><a class="mw-redirect" href="/wiki/Lock_pattern" title="Lock pattern">Lock</a></li>
<li><a href="/wiki/Monitor_(synchronization)" title="Monitor (synchronization)">Monitor</a></li>
<li><a href="/wiki/Proactor_pattern" title="Proactor pattern">Proactor</a></li>
<li><a href="/wiki/Reactor_pattern" title="Reactor pattern">Reactor</a></li>
<li><a href="/wiki/Readers%E2%80%93writer_lock" title="Readers–writer lock">Read write lock</a></li>
<li><a class="mw-redirect" href="/wiki/Scheduler_pattern" title="Scheduler pattern">Scheduler</a></li>
<li><a class="mw-redirect" href="/wiki/Thread_pool_pattern" title="Thread pool pattern">Thread pool</a></li>
<li><a href="/wiki/Thread-local_storage" title="Thread-local storage">Thread-local storage</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row"><a href="/wiki/Architectural_pattern" title="Architectural pattern">Architectural<br/>
patterns</a></th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Front_controller" title="Front controller">Front controller</a></li>
<li><a href="/wiki/Interceptor_pattern" title="Interceptor pattern">Interceptor</a></li>
<li><a href="/wiki/Model%E2%80%93view%E2%80%93controller" title="Model–view–controller">MVC</a></li>
<li><a href="/wiki/Multitier_architecture" title="Multitier architecture"><i>n</i>-tier</a></li>
<li><a href="/wiki/Specification_pattern" title="Specification pattern">Specification</a></li>
<li><a href="/wiki/Publish%E2%80%93subscribe_pattern" title="Publish–subscribe pattern">Publish–subscribe</a></li>
<li><a href="/wiki/Naked_objects" title="Naked objects">Naked objects</a></li>
<li><a href="/wiki/Service_locator_pattern" title="Service locator pattern">Service locator</a></li>
<li><a href="/wiki/Active_record_pattern" title="Active record pattern">Active record</a></li>
<li><a href="/wiki/Identity_map_pattern" title="Identity map pattern">Identity map</a></li>
<li><a href="/wiki/Data_access_object" title="Data access object">Data access object</a></li>
<li><a href="/wiki/Data_transfer_object" title="Data transfer object">Data transfer object</a></li>
<li><a class="new" href="/w/index.php?title=Action%E2%80%93Domain%E2%80%93Responder&amp;action=edit&amp;redlink=1" title="Action–Domain–Responder (page does not exist)">ADR</a></li>
<li><a href="/wiki/Inversion_of_control" title="Inversion of control">Inversion of control</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Other<br/>
patterns</th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a class="mw-redirect" href="/wiki/Blackboard_design_pattern" title="Blackboard design pattern">Blackboard</a></li>
<li><a href="/wiki/Business_delegate_pattern" title="Business delegate pattern">Business delegate</a></li>
<li><a href="/wiki/Composite_entity_pattern" title="Composite entity pattern">Composite entity</a></li>
<li><a href="/wiki/Dependency_injection" title="Dependency injection">Dependency injection</a></li>
<li><a href="/wiki/Intercepting_filter_pattern" title="Intercepting filter pattern">Intercepting filter</a></li>
<li><a href="/wiki/Lazy_loading" title="Lazy loading">Lazy loading</a></li>
<li><a href="/wiki/Mock_object" title="Mock object">Mock object</a></li>
<li><a class="mw-redirect" href="/wiki/Null_object_pattern" title="Null object pattern">Null object</a></li>
<li><a href="/wiki/Object_pool_pattern" title="Object pool pattern">Object pool</a></li>
<li><a href="/wiki/Servant_(design_pattern)" title="Servant (design pattern)">Servant</a></li>
<li><a href="/wiki/Twin_pattern" title="Twin pattern">Twin</a></li>
<li><a href="/wiki/Type_Tunnel_pattern" title="Type Tunnel pattern">Type tunnel</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Books</th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><i><a href="/wiki/Design_Patterns" title="Design Patterns">Design Patterns</a></i></li>
<li><i><a href="/wiki/Enterprise_Integration_Patterns" title="Enterprise Integration Patterns">Enterprise Integration Patterns</a></i></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">People</th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Christopher_Alexander" title="Christopher Alexander">Christopher Alexander</a></li>
<li><a href="/wiki/Erich_Gamma" title="Erich Gamma">Erich Gamma</a></li>
<li><a href="/wiki/Ralph_Johnson_(computer_scientist)" title="Ralph Johnson (computer scientist)">Ralph Johnson</a></li>
<li><a href="/wiki/John_Vlissides" title="John Vlissides">John Vlissides</a></li>
<li><a href="/wiki/Grady_Booch" title="Grady Booch">Grady Booch</a></li>
<li><a href="/wiki/Kent_Beck" title="Kent Beck">Kent Beck</a></li>
<li><a href="/wiki/Ward_Cunningham" title="Ward Cunningham">Ward Cunningham</a></li>
<li><a href="/wiki/Martin_Fowler" title="Martin Fowler">Martin Fowler</a></li>
<li><a href="/wiki/Robert_Cecil_Martin" title="Robert Cecil Martin">Robert Martin</a></li>
<li><a href="/wiki/Jim_Coplien" title="Jim Coplien">Jim Coplien</a></li>
<li><a href="/wiki/Douglas_C._Schmidt" title="Douglas C. Schmidt">Douglas Schmidt</a></li>
<li><a href="/wiki/Linda_Rising" title="Linda Rising">Linda Rising</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Communities</th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/The_Hillside_Group" title="The Hillside Group">The Hillside Group</a></li>
<li><a href="/wiki/Portland_Pattern_Repository" title="Portland Pattern Repository">The Portland Pattern Repository</a></li>
</ul>
</div>
</td>
</tr>
</table>
</div>
<!-- Saved in parser cache with key enwiki:pcache:idhash:140538-0!*!0!!en!4!* and timestamp 20161001055041 and revision id 731585554
 -->
<noscript><img alt="" height="1" src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" style="border: none; position: absolute;" title="" width="1"/></noscript></div> <div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Flyweight_pattern&amp;oldid=731585554">https://en.wikipedia.org/w/index.php?title=Flyweight_pattern&amp;oldid=731585554</a>"					</div>
<div class="catlinks" data-mw="interface" id="catlinks"><div class="mw-normal-catlinks" id="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Software_design_patterns" title="Category:Software design patterns">Software design patterns</a></li><li><a href="/wiki/Category:Software_optimization" title="Category:Software optimization">Software optimization</a></li></ul></div><div class="mw-hidden-catlinks mw-hidden-cats-hidden" id="mw-hidden-catlinks">Hidden categories: <ul><li><a href="/wiki/Category:Pages_containing_cite_templates_with_deprecated_parameters" title="Category:Pages containing cite templates with deprecated parameters">Pages containing cite templates with deprecated parameters</a></li><li><a href="/wiki/Category:Articles_lacking_in-text_citations_from_May_2008" title="Category:Articles lacking in-text citations from May 2008">Articles lacking in-text citations from May 2008</a></li><li><a href="/wiki/Category:All_articles_lacking_in-text_citations" title="Category:All articles lacking in-text citations">All articles lacking in-text citations</a></li><li><a href="/wiki/Category:Articles_with_example_Java_code" title="Category:Articles with example Java code">Articles with example Java code</a></li></ul></div></div> <div class="visualClear"></div>
</div>
</div>
<div id="mw-navigation">
<h2>Navigation menu</h2>
<div id="mw-head">
<div aria-labelledby="p-personal-label" class="" id="p-personal" role="navigation">
<h3 id="p-personal-label">Personal tools</h3>
<ul>
<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a accesskey="n" href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]">Talk</a></li><li id="pt-anoncontribs"><a accesskey="y" href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Flyweight+pattern" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a accesskey="o" href="/w/index.php?title=Special:UserLogin&amp;returnto=Flyweight+pattern" title="You're encouraged to log in; however, it's not mandatory. [o]">Log in</a></li> </ul>
</div>
<div id="left-navigation">
<div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
<h3 id="p-namespaces-label">Namespaces</h3>
<ul>
<li class="selected" id="ca-nstab-main"><span><a accesskey="c" href="/wiki/Flyweight_pattern" title="View the content page [c]">Article</a></span></li>
<li id="ca-talk"><span><a accesskey="t" href="/wiki/Talk:Flyweight_pattern" rel="discussion" title="Discussion about the content page [t]">Talk</a></span></li>
</ul>
</div>
<div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
<h3 id="p-variants-label">
<span>Variants</span><a href="#"></a>
</h3>
<div class="menu">
<ul>
</ul>
</div>
</div>
</div>
<div id="right-navigation">
<div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
<h3 id="p-views-label">Views</h3>
<ul>
<li class="selected" id="ca-view"><span><a href="/wiki/Flyweight_pattern">Read</a></span></li>
<li id="ca-edit"><span><a accesskey="e" href="/w/index.php?title=Flyweight_pattern&amp;action=edit" title="Edit this page [e]">Edit</a></span></li>
<li class="collapsible" id="ca-history"><span><a accesskey="h" href="/w/index.php?title=Flyweight_pattern&amp;action=history" title="Past revisions of this page [h]">View history</a></span></li>
</ul>
</div>
<div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>
<div class="menu">
<ul>
</ul>
</div>
</div>
<div id="p-search" role="search">
<h3>
<label for="searchInput">Search</label>
</h3>
<form action="/w/index.php" id="searchform">
<div id="simpleSearch">
<input accesskey="f" id="searchInput" name="search" placeholder="Search" title="Search Wikipedia [f]" type="search"/><input name="title" type="hidden" value="Special:Search"/><input class="searchButton mw-fallbackSearchButton" id="mw-searchButton" name="fulltext" title="Search Wikipedia for this text" type="submit" value="Search"/><input class="searchButton" id="searchButton" name="go" title="Go to a page with this exact name if it exists" type="submit" value="Go"/> </div>
</form>
</div>
</div>
</div>
<div id="mw-panel">
<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page" title="Visit the main page"></a></div>
<div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
<h3 id="p-navigation-label">Navigation</h3>
<div class="body">
<ul>
<li id="n-mainpage-description"><a accesskey="z" href="/wiki/Main_Page" title="Visit the main page [z]">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a accesskey="x" href="/wiki/Special:Random" title="Load a random article [x]">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-interaction-label" class="portal" id="p-interaction" role="navigation">
<h3 id="p-interaction-label">Interaction</h3>
<div class="body">
<ul>
<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a accesskey="r" href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
<h3 id="p-tb-label">Tools</h3>
<div class="body">
<ul>
<li id="t-whatlinkshere"><a accesskey="j" href="/wiki/Special:WhatLinksHere/Flyweight_pattern" title="List of all English Wikipedia pages containing links to this page [j]">What links here</a></li><li id="t-recentchangeslinked"><a accesskey="k" href="/wiki/Special:RecentChangesLinked/Flyweight_pattern" title="Recent changes in pages linked from this page [k]">Related changes</a></li><li id="t-upload"><a accesskey="u" href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]">Upload file</a></li><li id="t-specialpages"><a accesskey="q" href="/wiki/Special:SpecialPages" title="A list of all special pages [q]">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Flyweight_pattern&amp;oldid=731585554" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Flyweight_pattern&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a accesskey="g" href="https://www.wikidata.org/wiki/Q1060964" title="Link to connected data repository item [g]">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Flyweight_pattern&amp;id=731585554" title="Information on how to cite this page">Cite this page</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
<h3 id="p-coll-print_export-label">Print/export</h3>
<div class="body">
<ul>
<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Flyweight+pattern">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Flyweight+pattern&amp;returnto=Flyweight+pattern&amp;oldid=731585554&amp;writer=rdf2latex">Download as PDF</a></li><li id="t-print"><a accesskey="p" href="/w/index.php?title=Flyweight_pattern&amp;printable=yes" title="Printable version of this page [p]">Printable version</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-wikibase-otherprojects-label" class="portal" id="p-wikibase-otherprojects" role="navigation">
<h3 id="p-wikibase-otherprojects-label">In other projects</h3>
<div class="body">
<ul>
<li class="wb-otherproject-link wb-otherproject-commons"><a href="https://commons.wikimedia.org/wiki/Category:Flyweight_pattern" hreflang="en">Wikimedia Commons</a></li><li class="wb-otherproject-link wb-otherproject-wikibooks"><a href="https://en.wikibooks.org/wiki/Computer_Science_Design_Patterns/Flyweight" hreflang="en">Wikibooks</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
<h3 id="p-lang-label">Languages</h3>
<div class="body">
<ul>
<li class="interlanguage-link interwiki-ar"><a href="https://ar.wikipedia.org/wiki/%D9%86%D9%85%D9%88%D8%B0%D8%AC_%D8%A7%D9%84%D8%AA%D8%B5%D9%85%D9%8A%D9%85_%D9%88%D8%B2%D9%86_%D8%A7%D9%84%D8%B0%D8%A8%D8%A7%D8%A8%D8%A9" hreflang="ar" lang="ar" title="نموذج التصميم وزن الذبابة – Arabic">العربية</a></li><li class="interlanguage-link interwiki-bg"><a href="https://bg.wikipedia.org/wiki/%D0%9C%D0%B8%D0%BD%D0%B8%D0%BE%D0%B1%D0%B5%D0%BA%D1%82_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD)" hreflang="bg" lang="bg" title="Миниобект (шаблон) – Bulgarian">Български</a></li><li class="interlanguage-link interwiki-cs"><a href="https://cs.wikipedia.org/wiki/Flyweight" hreflang="cs" lang="cs" title="Flyweight – Czech">Čeština</a></li><li class="interlanguage-link interwiki-de"><a href="https://de.wikipedia.org/wiki/Fliegengewicht_(Entwurfsmuster)" hreflang="de" lang="de" title="Fliegengewicht (Entwurfsmuster) – German">Deutsch</a></li><li class="interlanguage-link interwiki-es"><a href="https://es.wikipedia.org/wiki/Flyweight_(patr%C3%B3n_de_dise%C3%B1o)" hreflang="es" lang="es" title="Flyweight (patrón de diseño) – Spanish">Español</a></li><li class="interlanguage-link interwiki-fa"><a href="https://fa.wikipedia.org/wiki/%D8%B7%D8%B1%D8%A7%D8%AD%DB%8C_%D9%85%DA%AF%D8%B3_%D9%88%D8%B2%D9%86" hreflang="fa" lang="fa" title="طراحی مگس وزن – Persian">فارسی</a></li><li class="interlanguage-link interwiki-fr"><a href="https://fr.wikipedia.org/wiki/Poids-mouche_(patron_de_conception)" hreflang="fr" lang="fr" title="Poids-mouche (patron de conception) – French">Français</a></li><li class="interlanguage-link interwiki-gl"><a href="https://gl.wikipedia.org/wiki/Obxecto_Lixeiro" hreflang="gl" lang="gl" title="Obxecto Lixeiro – Galician">Galego</a></li><li class="interlanguage-link interwiki-ko"><a href="https://ko.wikipedia.org/wiki/%ED%94%8C%EB%9D%BC%EC%9D%B4%EC%9B%A8%EC%9D%B4%ED%8A%B8_%ED%8C%A8%ED%84%B4" hreflang="ko" lang="ko" title="플라이웨이트 패턴 – Korean">한국어</a></li><li class="interlanguage-link interwiki-hy"><a href="https://hy.wikipedia.org/wiki/%D5%80%D5%A1%D6%80%D5%B4%D5%A1%D6%80%D5%A5%D6%81%D5%B6%D5%B8%D5%B2_(%D5%B6%D5%A1%D5%AD%D5%A1%D5%A3%D5%AE%D5%B4%D5%A1%D5%B6_%D5%B1%D6%87%D5%A1%D5%B6%D5%B4%D5%B8%D6%82%D5%B7)" hreflang="hy" lang="hy" title="Հարմարեցնող (նախագծման ձևանմուշ) – Armenian">Հայերեն</a></li><li class="interlanguage-link interwiki-it"><a href="https://it.wikipedia.org/wiki/Flyweight_pattern" hreflang="it" lang="it" title="Flyweight pattern – Italian">Italiano</a></li><li class="interlanguage-link interwiki-hu"><a href="https://hu.wikipedia.org/wiki/Pehelys%C3%BAly%C3%BA_programtervez%C3%A9si_minta" hreflang="hu" lang="hu" title="Pehelysúlyú programtervezési minta – Hungarian">Magyar</a></li><li class="interlanguage-link interwiki-ja"><a href="https://ja.wikipedia.org/wiki/Flyweight_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3" hreflang="ja" lang="ja" title="Flyweight パターン – Japanese">日本語</a></li><li class="interlanguage-link interwiki-pl"><a href="https://pl.wikipedia.org/wiki/Py%C5%82ek_(wzorzec_projektowy)" hreflang="pl" lang="pl" title="Pyłek (wzorzec projektowy) – Polish">Polski</a></li><li class="interlanguage-link interwiki-pt"><a href="https://pt.wikipedia.org/wiki/Flyweight" hreflang="pt" lang="pt" title="Flyweight – Portuguese">Português</a></li><li class="interlanguage-link interwiki-ru"><a href="https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%B8%D1%81%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D0%BB%D0%B5%D0%BD%D0%B5%D1%86_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)" hreflang="ru" lang="ru" title="Приспособленец (шаблон проектирования) – Russian">Русский</a></li><li class="interlanguage-link interwiki-uk"><a href="https://uk.wikipedia.org/wiki/%D0%9B%D0%B5%D0%B3%D0%BA%D0%BE%D0%B2%D0%B0%D0%B3%D0%BE%D0%B2%D0%B8%D0%BA_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F)" hreflang="uk" lang="uk" title="Легковаговик (шаблон проектування) – Ukrainian">Українська</a></li><li class="interlanguage-link interwiki-vi"><a href="https://vi.wikipedia.org/wiki/Flyweight_pattern" hreflang="vi" lang="vi" title="Flyweight pattern – Vietnamese">Tiếng Việt</a></li><li class="interlanguage-link interwiki-zh"><a href="https://zh.wikipedia.org/wiki/%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F" hreflang="zh" lang="zh" title="享元模式 – Chinese">中文</a></li><li class="uls-p-lang-dummy"><a href="#"></a></li> </ul>
<div class="after-portlet after-portlet-lang"><span class="wb-langlinks-edit wb-langlinks-link"><a class="wbc-editpage" href="https://www.wikidata.org/wiki/Q1060964#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></span></div> </div>
</div>
</div>
</div>
<div id="footer" role="contentinfo">
<ul id="footer-info">
<li id="footer-info-lastmod"> This page was last modified on 26 July 2016, at 08:29.</li>
<li id="footer-info-copyright">Text is available under the <a href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License" rel="license">Creative Commons Attribution-ShareAlike License</a><a href="//creativecommons.org/licenses/by-sa/3.0/" rel="license" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
</ul>
<ul id="footer-places">
<li id="footer-places-privacy"><a class="extiw" href="https://wikimediafoundation.org/wiki/Privacy_policy" title="wmf:Privacy policy">Privacy policy</a></li>
<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
<li id="footer-places-mobileview"><a class="noprint stopMobileRedirectToggle" href="//en.m.wikipedia.org/w/index.php?title=Flyweight_pattern&amp;mobileaction=toggle_view_mobile">Mobile view</a></li>
</ul>
<ul class="noprint" id="footer-icons">
<li id="footer-copyrightico">
<a href="https://wikimediafoundation.org/"><img alt="Wikimedia Foundation" height="31" src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88"/></a> </li>
<li id="footer-poweredbyico">
<a href="//www.mediawiki.org/"><img alt="Powered by MediaWiki" height="31" src="/static/images/poweredby_mediawiki_88x31.png" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88"/></a> </li>
</ul>
<div style="clear:both"></div>
</div>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.loader.load(["ext.cite.a11y","mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.gadget.featured-articles-links","mmv.bootstrap.autostart","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.centralNotice.geoIP","ext.centralNotice.startUp"]);});</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set( {
    "wgPageParseReport": {
        "limitreport": {
            "cputime": "0.171",
            "walltime": "0.511",
            "ppvisitednodes": {
                "value": 825,
                "limit": 1000000
            },
            "ppgeneratednodes": {
                "value": 0,
                "limit": 1500000
            },
            "postexpandincludesize": {
                "value": 37577,
                "limit": 2097152
            },
            "templateargumentsize": {
                "value": 1034,
                "limit": 2097152
            },
            "expansiondepth": {
                "value": 8,
                "limit": 40
            },
            "expensivefunctioncount": {
                "value": 1,
                "limit": 500
            },
            "entityaccesscount": {
                "value": 0,
                "limit": 400
            },
            "timingprofile": [
                "100.00%  457.825      1 -total",
                " 13.22%   60.521      1 Template:Reflist",
                " 11.99%   54.897      1 Template:More_footnotes",
                "  7.80%   35.718      1 Template:Ambox",
                "  7.78%   35.633      1 Template:Cite_book",
                "  6.98%   31.968      1 Template:Design_Patterns_Patterns",
                "  6.95%   31.803      2 Template:Navbox",
                "  3.48%   15.914      1 Template:Navbox_subgroup",
                "  2.42%   11.067      2 Template:Cite_conference",
                "  0.36%    1.654      1 Template:Main_other"
            ]
        },
        "scribunto": {
            "limitreport-timeusage": {
                "value": "0.058",
                "limit": "10.000"
            },
            "limitreport-memusage": {
                "value": 2431637,
                "limit": 52428800
            }
        },
        "cachereport": {
            "origin": "mw1181",
            "timestamp": "20161001055041",
            "ttl": 2592000,
            "transientcontent": false
        }
    }
} );});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":71,"wgHostname":"mw1239"});});</script>
</body>
</html>

