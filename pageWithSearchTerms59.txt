The following page is located at the url: http://en.wikipedia.org/wiki/Command_pattern
<!DOCTYPE html>

<html class="client-nojs" dir="ltr" lang="en">
<head>
<meta charset="utf-8"/>
<title>Command pattern - Wikipedia, the free encyclopedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Command_pattern","wgTitle":"Command pattern","wgCurRevisionId":734896026,"wgRevisionId":734896026,"wgArticleId":164858,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles lacking in-text citations from December 2012","All articles lacking in-text citations","Commons category with page title same as on Wikidata","Software design patterns","Articles with example Java code","Articles with example C Sharp code"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Command_pattern","wgRelevantArticleId":164858,"wgRequestId":"V-FzfgpAAD4AAIs9Er8AAADN","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":false},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgWikibaseItemId":"Q386776","wgCentralAuthMobileDomain":false,"wgVisualEditorToolbarScrollOffset":0,"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user.cssprefs":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.pygments":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.tmh.thumbnail.styles":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.options",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","ext.centralauth.centralautologin","mmv.head","ext.visualEditor.desktopArticleTarget.init","ext.uls.interface","ext.quicksurveys.init","mw.MediaWikiPlayer.loader","mw.PopUpMediaTransform","skins.vector.js"]);});</script>
<link href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cextra-toolbar-buttons%2Cfeatured-articles-links%2CrefToolbar%2Cswitcher%2Cteahouse%2Cwatchlist-notice%7Cext.pygments%2CwikimediaBadges%7Cext.tmh.thumbnail.styles%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector" rel="stylesheet"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta content="" name="ResourceLoaderDynamicStyles"/>
<link href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector" rel="stylesheet"/>
<meta content="MediaWiki 1.28.0-wmf.20" name="generator"/>
<meta content="origin-when-cross-origin" name="referrer"/>
<link href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Command_pattern" rel="alternate"/>
<link href="/w/index.php?title=Command_pattern&amp;action=edit" rel="alternate" title="Edit this page" type="application/x-wiki"/>
<link href="/w/index.php?title=Command_pattern&amp;action=edit" rel="edit" title="Edit this page"/>
<link href="/static/apple-touch/wikipedia.png" rel="apple-touch-icon"/>
<link href="/static/favicon/wikipedia.ico" rel="shortcut icon"/>
<link href="/w/opensearch_desc.php" rel="search" title="Wikipedia (en)" type="application/opensearchdescription+xml"/>
<link href="//en.wikipedia.org/w/api.php?action=rsd" rel="EditURI" type="application/rsd+xml"/>
<link href="//creativecommons.org/licenses/by-sa/3.0/" rel="copyright"/>
<link href="https://en.wikipedia.org/wiki/Command_pattern" rel="canonical"/>
<link href="//login.wikimedia.org" rel="dns-prefetch"/>
<link href="//meta.wikimedia.org" rel="dns-prefetch"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Command_pattern rootpage-Command_pattern skin-vector action-view feature-page-action-bar-v2"> <div class="noprint" id="mw-page-base"></div>
<div class="noprint" id="mw-head-base"></div>
<div class="mw-body" id="content" role="main">
<a id="top"></a>
<div id="siteNotice"><!-- CentralNotice --></div>
<div class="mw-indicators">
</div>
<h1 class="firstHeading" id="firstHeading" lang="en">Command pattern</h1>
<div class="mw-body-content" id="bodyContent">
<div id="siteSub">From Wikipedia, the free encyclopedia</div>
<div id="contentSub"></div>
<div class="mw-jump" id="jump-to-nav">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
</div>
<div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="en"><table class="metadata plainlinks ambox ambox-style ambox-No_footnotes" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px"><img alt="" data-file-height="48" data-file-width="48" height="40" src="//upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/40px-Text_document_with_red_question_mark.svg.png" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/60px-Text_document_with_red_question_mark.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/80px-Text_document_with_red_question_mark.svg.png 2x" width="40"/></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This article includes a <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">list of references</a>, related reading or <a href="/wiki/Wikipedia:External_links" title="Wikipedia:External links">external links</a>, <b>but its sources remain unclear because it lacks <a href="/wiki/Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">inline citations</a></b>. <span class="hide-when-compact">Please help to <a href="/wiki/Wikipedia:WikiProject_Fact_and_Reference_Check" title="Wikipedia:WikiProject Fact and Reference Check">improve</a> this article by <a href="/wiki/Wikipedia:When_to_cite" title="Wikipedia:When to cite">introducing</a> more precise citations.</span> <small><i>(December 2012)</i></small> <small class="hide-when-compact"><i>(<a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this template message</a>)</i></small></span></td>
</tr>
</table>
<p>In <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a>, the <b>command pattern</b> is a <a class="mw-redirect" href="/wiki/Behavioral_Pattern" title="Behavioral Pattern">behavioral</a> <a class="mw-redirect" href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">design pattern</a> in which an object is used to <a class="mw-redirect" href="/wiki/Information_Hiding" title="Information Hiding">encapsulate</a> all information needed to perform an action or trigger an event at a later time. This information includes the method name, the object that owns the method and values for the method parameters.</p>
<p>Four terms always associated with the command pattern are <i>command</i>, <i>receiver</i>, <i>invoker</i> and <i>client</i>. A <i>command</i> object knows about <i>receiver</i> and invokes a method of the receiver. Values for parameters of the receiver method are stored in the command. The <i>receiver</i> then does the work. An <i>invoker</i> object knows how to execute a command, and optionally does bookkeeping about the command execution. The invoker does not know anything about a concrete command, it knows only about command interface. Both an invoker object and several command objects are held by a <i>client</i> object. The client decides which commands to execute at which points. To execute a command, it passes the command object to the invoker object.</p>
<p>Using command objects makes it easier to construct general components that need to delegate, sequence or execute method calls at a time of their choosing without the need to know the class of the method or the method parameters. Using an invoker object allows bookkeeping about command executions to be conveniently performed, as well as implementing different modes for commands, which are managed by the invoker object, without the need for the client to be aware of the existence of bookkeeping or modes.</p>
<p></p>
<div class="toc" id="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Uses"><span class="tocnumber">1</span> <span class="toctext">Uses</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Terminology"><span class="tocnumber">2</span> <span class="toctext">Terminology</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Example"><span class="tocnumber">3</span> <span class="toctext">Example</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="#C.23"><span class="tocnumber">3.1</span> <span class="toctext">C#</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Java"><span class="tocnumber">3.2</span> <span class="toctext">Java</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="#Java_8"><span class="tocnumber">3.3</span> <span class="toctext">Java 8</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="#Python"><span class="tocnumber">3.4</span> <span class="toctext">Python</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Ruby"><span class="tocnumber">3.5</span> <span class="toctext">Ruby</span></a></li>
<li class="toclevel-2 tocsection-9"><a href="#Scala"><span class="tocnumber">3.6</span> <span class="toctext">Scala</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="#JavaScript"><span class="tocnumber">3.7</span> <span class="toctext">JavaScript</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#Coffeescript"><span class="tocnumber">3.8</span> <span class="toctext">Coffeescript</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#External_links"><span class="tocnumber">6</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Uses">Uses</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=1" title="Edit section: Uses">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Command objects are useful for implementing</p>
<dl>
<dt>GUI buttons and menu items </dt>
<dd>In <a href="/wiki/Swing_(Java)" title="Swing (Java)">Swing</a> and <a class="mw-redirect" href="/wiki/Borland_Delphi" title="Borland Delphi">Borland Delphi</a> programming, an <code><a class="external text" href="//docs.oracle.com/javase/8/docs/api/javax/swing/Action.html" rel="nofollow">Action</a></code> is a command object. In addition to the ability to perform the desired command, an <code>Action</code> may have an associated icon, keyboard shortcut, tooltip text, and so on. A toolbar button or menu item component may be completely initialized using only the <code>Action</code> object.</dd>
<dt><a href="/wiki/Macro_(computer_science)" title="Macro (computer science)">Macro</a> recording </dt>
<dd>If all user actions are represented by command objects, a program can record a sequence of actions simply by keeping a list of the command objects as they are executed. It can then "play back" the same actions by executing the same command objects again in sequence. If the program embeds a scripting engine, each command object can implement a <tt>toScript()</tt> method, and user actions can then be easily recorded as scripts.</dd>
<dt><a class="mw-redirect" href="/wiki/Code_Mobility" title="Code Mobility">Mobile Code</a> </dt>
<dd>Using languages such as Java where code can be streamed/slurped from one location to another via URLClassloaders and Codebases the commands can enable new behavior to be delivered to remote locations (EJB Command, Master Worker)</dd>
<dt>Multi-level <a href="/wiki/Undo" title="Undo">undo</a> </dt>
<dd>If all user actions in a program are implemented as command objects, the program can keep a stack of the most recently executed commands. When the user wants to undo a command, the program simply pops the most recent command object and executes its <tt>undo()</tt> method.</dd>
<dt>Networking </dt>
<dd>It is possible to send whole command objects across the network to be executed on the other machines, for example player actions in computer games.</dd>
<dt>Parallel Processing </dt>
<dd>Where the commands are written as tasks to a shared resource and executed by many threads in parallel (possibly on remote machines -this variant is often referred to as the Master/Worker pattern)</dd>
<dt><a href="/wiki/Progress_bar" title="Progress bar">Progress bars</a> </dt>
<dd>Suppose a program has a sequence of commands that it executes in order. If each command object has a <tt>getEstimatedDuration()</tt> method, the program can easily estimate the total duration. It can show a progress bar that meaningfully reflects how close the program is to completing all the tasks.</dd>
<dt><a href="/wiki/Thread_pool" title="Thread pool">Thread pools</a> </dt>
<dd>A typical, general-purpose thread pool class might have a public <code>addTask()</code> method that adds a work item to an internal queue of tasks waiting to be done. It maintains a pool of threads that execute commands from the queue. The items in the queue are command objects. Typically these objects implement a common interface such as <code>java.lang.Runnable</code> that allows the thread pool to execute the command even though the thread pool class itself was written without any knowledge of the specific tasks for which it would be used.</dd>
<dt><a href="/wiki/Database_transaction" title="Database transaction">Transactional</a> behavior </dt>
<dd>Similar to undo, a database engine or software installer may keep a list of operations that have been or will be performed. Should one of them fail, all others can be reversed or discarded (usually called <i>rollback</i>). For example, if two database tables that refer to each other must be updated, and the second update fails, the transaction can be rolled back, so that the first table does not now contain an invalid reference.</dd>
<dt><a href="/wiki/Wizard_(software)" title="Wizard (software)">Wizards</a> </dt>
<dd>Often a wizard presents several pages of configuration for a single action that happens only when the user clicks the "Finish" button on the last page. In these cases, a natural way to separate user interface code from application code is to implement the wizard using a command object. The command object is created when the wizard is first displayed. Each wizard page stores its GUI changes in the command object, so the object is populated as the user progresses. "Finish" simply triggers a call to <tt>execute()</tt>. This way, the command class will work.</dd>
</dl>
<h2><span class="mw-headline" id="Terminology">Terminology</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=2" title="Edit section: Terminology">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The terminology used to describe command pattern implementations is not consistent and can therefore be confusing. This is the result of <a href="/wiki/Ambiguity" title="Ambiguity">ambiguity</a>, the use of <a class="mw-redirect" href="/wiki/Synonyms" title="Synonyms">synonyms</a>, and implementations that may obscure the original pattern by going well beyond it.</p>
<ol>
<li>Ambiguity.
<ol>
<li>The term <b>command</b> is ambiguous. For example, <i>move up, move up</i> may refer to a single (move up) command that should be executed twice, or it may refer to two commands, each of which happens to do the same thing (move up). If the former command is added twice to an undo stack, both items on the stack refer to the same command instance. This may be appropriate when a command can always be undone the same way (e.g. move down). Both the <a class="mw-redirect" href="/wiki/Gang_of_Four_(software)" title="Gang of Four (software)">Gang of Four</a> and the <a href="/wiki/Command_pattern#Java" title="Command pattern">Java example below</a> use this interpretation of the term <i>command</i>. On the other hand, if the latter commands are added to an undo stack, the stack refers to two separate objects. This may be appropriate when each object on the stack must contain information that allows the command to be undone. For example, to undo a <i>delete selection</i> command, the object may contain a copy of the deleted text so that it can be re-inserted, if the <i>delete selection</i> command must be undone. Note that using a separate object for each invocation of a command is also an example of the <a class="mw-redirect" href="/wiki/Chain_of_responsibility_pattern" title="Chain of responsibility pattern">chain of responsibility pattern</a>.</li>
<li>The term <b>execute</b> is also ambiguous. It may refer to running the code identified by the command object's <i>execute</i> method. However, in Microsoft's <a href="/wiki/Windows_Presentation_Foundation" title="Windows Presentation Foundation">Windows Presentation Foundation</a> a command is considered to have been executed when the command's <i>execute</i> method has been invoked, but that does not necessarily mean that the application code has run. That occurs only after some further event processing.</li>
</ol>
</li>
<li>Synonyms and <a class="mw-redirect" href="/wiki/Homonyms" title="Homonyms">homonyms</a>.
<ol>
<li><b>Client, Source, Invoker</b>: the button, toolbar button, or menu item clicked, the shortcut key pressed by the user.</li>
<li><b>Command Object, Routed Command Object, Action Object</b>: a singleton object (e.g. there is only one CopyCommand object), which knows about shortcut keys, button images, command text, etc. related to the command. A source/invoker object calls the Command/Action object's execute/performAction method. The Command/Action object notifies the appropriate source/invoker objects when the availability of a command/action has changed. This allows buttons and menu items to become inactive (grayed out) when a command/action cannot be executed/performed.</li>
<li><b>Receiver, Target Object</b>: the object that is about to be copied, pasted, moved, etc. The receiver object owns the method that is called by the command's <i>execute</i> method. The receiver is typically also the target object. For example, if the receiver object is a <i>cursor</i> and the method is called <i>moveUp</i>, then one would expect that the cursor is the target of the moveUp action. On the other hand, if the code is defined by the command object itself, the target object will be a different object entirely.</li>
<li><b>Command Object, routed event args, event object</b>: the object that is passed from the source to the Command/Action object, to the Target object to the code that does the work. Each button click or shortcut key results in a new command/event object. Some implementations add more information to the command/event object as it is being passed from one object (e.g. CopyCommand) to another (e.g. document section). Other implementations put command/event objects in other event objects (like a box inside a bigger box) as they move along the line, to avoid naming conflicts. (See also <a class="mw-redirect" href="/wiki/Chain_of_responsibility_pattern" title="Chain of responsibility pattern">chain of responsibility pattern</a>).</li>
<li><b>Handler, ExecutedRoutedEventHandler, method, function</b>: the actual code that does the copying, pasting, moving, etc. In some implementations the handler code is part of the command/action object. In other implementations the code is part of the Receiver/Target Object, and in yet other implementations the handler code is kept separate from the other objects.</li>
<li><b>Command Manager, Undo Manager, Scheduler, Queue, Dispatcher, Invoker</b>: an object that puts command/event objects on an undo stack or redo stack, or that holds on to command/event objects until other objects are ready to act on them, or that routes the command/event objects to the appropriate receiver/target object or handler code.</li>
</ol>
</li>
<li>Implementations that go well beyond the original command pattern.
<ol>
<li>Microsoft's <a class="external text" href="http://msdn.microsoft.com/en-us/library/ms752308.aspx" rel="nofollow">Windows Presentation Foundation</a> (WPF), introduces routed commands, which combine the command pattern with event processing. As a result, the command object no longer contains a reference to the target object nor a reference to the application code. Instead, invoking the command object's <i>execute</i> command results in a so-called <i>Executed Routed Event</i> which during the event's tunneling or bubbling may encounter a so-called <i>binding</i> object that identifies the target and the application code, which is executed at that point.</li>
</ol>
</li>
</ol>
<h2><span class="mw-headline" id="Example">Example</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=3" title="Edit section: Example">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Consider a "simple" switch. In this example we configure the Switch with two commands: to turn the light on and to turn the light off.</p>
<p>A benefit of this particular implementation of the command pattern is that the switch can be used with any device, not just a light - the Switch in the following example turns a light on and off, but the Switch's constructor is able to accept any subclasses of Command for its two parameters. For example, you could configure the Switch to start an engine.</p>
<h3><span class="mw-headline" id="C.23">C#</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=4" title="Edit section: C#">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The following code is an implementation of Command pattern in C#.</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">namespace</span> <span class="nn">CommandPattern</span>
<span class="p">{</span>
    <span class="k">using</span> <span class="nn">System</span><span class="p">;</span> 
    <span class="k">public</span> <span class="k">interface</span> <span class="n">ICommand</span>
    <span class="p">{</span>
        <span class="k">void</span> <span class="nf">Execute</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="cm">/* The Invoker class */</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">Switch</span>
    <span class="p">{</span>
        <span class="n">ICommand</span> <span class="n">_closedCommand</span><span class="p">;</span>
        <span class="n">ICommand</span> <span class="n">_openedCommand</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">Switch</span><span class="p">(</span><span class="n">ICommand</span> <span class="n">closedCommand</span><span class="p">,</span> <span class="n">ICommand</span> <span class="n">openedCommand</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">_closedCommand</span> <span class="p">=</span> <span class="n">closedCommand</span><span class="p">;</span>
            <span class="k">this</span><span class="p">.</span><span class="n">_openedCommand</span> <span class="p">=</span> <span class="n">openedCommand</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">//close the circuit/power on</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">Close</span><span class="p">()</span>
        <span class="p">{</span>
           <span class="k">this</span><span class="p">.</span><span class="n">_closedCommand</span><span class="p">.</span><span class="n">Execute</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="c1">//open the circuit/power off</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">Open</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">_openedCommand</span><span class="p">.</span><span class="n">Execute</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
    
    <span class="cm">/* An interface that defines actions that the receiver can perform */</span>
    <span class="k">public</span> <span class="k">interface</span> <span class="n">ISwitchable</span>
    <span class="p">{</span>
        <span class="k">void</span> <span class="nf">PowerOn</span><span class="p">();</span>
        <span class="k">void</span> <span class="nf">PowerOff</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="cm">/* The Receiver class */</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">Light</span> <span class="p">:</span> <span class="n">ISwitchable</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">PowerOn</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">"The light is on"</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">PowerOff</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">"The light is off"</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="cm">/* The Command for turning on the device - ConcreteCommand #1 */</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">CloseSwitchCommand</span><span class="p">:</span> <span class="n">ICommand</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="n">ISwitchable</span> <span class="n">_switchable</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">CloseSwitchCommand</span><span class="p">(</span><span class="n">ISwitchable</span> <span class="n">switchable</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">_switchable</span> <span class="p">=</span> <span class="n">switchable</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">Execute</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">_switchable</span><span class="p">.</span><span class="n">PowerOn</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="cm">/* The Command for turning off the device - ConcreteCommand #2 */</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">OpenSwitchCommand</span> <span class="p">:</span> <span class="n">ICommand</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="n">ISwitchable</span> <span class="n">_switchable</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">OpenSwitchCommand</span><span class="p">(</span><span class="n">ISwitchable</span> <span class="n">switchable</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">_switchable</span> <span class="p">=</span> <span class="n">switchable</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">Execute</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">_switchable</span><span class="p">.</span><span class="n">PowerOff</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="cm">/* The test class or client */</span>
    <span class="k">internal</span> <span class="k">class</span> <span class="nc">Program</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">string</span> <span class="n">arg</span> <span class="p">=</span> <span class="n">args</span><span class="p">.</span><span class="n">Length</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">?</span> <span class="n">args</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">ToUpper</span><span class="p">()</span> <span class="p">:</span> <span class="k">null</span><span class="p">;</span>

            <span class="n">ISwitchable</span> <span class="n">lamp</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Light</span><span class="p">();</span>

            <span class="c1">//Pass reference to the lamp instance to each command</span>
            <span class="n">ICommand</span> <span class="n">switchClose</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CloseSwitchCommand</span><span class="p">(</span><span class="n">lamp</span><span class="p">);</span>
            <span class="n">ICommand</span> <span class="n">switchOpen</span> <span class="p">=</span> <span class="k">new</span> <span class="n">OpenSwitchCommand</span><span class="p">(</span><span class="n">lamp</span><span class="p">);</span>

            <span class="c1">//Pass reference to instances of the Command objects to the switch</span>
            <span class="n">Switch</span> <span class="n">@switch</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Switch</span><span class="p">(</span><span class="n">switchClose</span><span class="p">,</span> <span class="n">switchOpen</span><span class="p">);</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">arg</span> <span class="p">==</span> <span class="s">"ON"</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="c1">// Switch (the Invoker) will invoke Execute() (the Command) on the command object - _closedCommand.Execute();</span>
                <span class="n">@switch</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">arg</span> <span class="p">==</span> <span class="s">"OFF"</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="c1">//Switch (the Invoker) will invoke the Execute() (the Command) on the command object - _openedCommand.Execute();</span>
                <span class="n">@switch</span><span class="p">.</span><span class="n">Open</span><span class="p">();</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">"Argument \"ON\" or \"OFF\" is required."</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
<h3><span class="mw-headline" id="Java">Java</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=5" title="Edit section: Java">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>

<span class="cm">/** The Command interface */</span>
<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Command</span> <span class="o">{</span>
   <span class="kt">void</span> <span class="nf">execute</span><span class="o">();</span>
<span class="o">}</span>

<span class="cm">/** The Invoker class */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Switch</span> <span class="o">{</span>
   <span class="kd">private</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Command</span><span class="o">&gt;</span> <span class="n">history</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Command</span><span class="o">&gt;();</span>

   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">storeAndExecute</span><span class="o">(</span><span class="n">Command</span> <span class="n">cmd</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">history</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">cmd</span><span class="o">);</span> <span class="c1">// optional </span>
      <span class="n">cmd</span><span class="o">.</span><span class="na">execute</span><span class="o">();</span>
   <span class="o">}</span>
<span class="o">}</span>

<span class="cm">/** The Receiver class */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Light</span> <span class="o">{</span>

   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">turnOn</span><span class="o">()</span> <span class="o">{</span>
      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The light is on"</span><span class="o">);</span>
   <span class="o">}</span>

   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">turnOff</span><span class="o">()</span> <span class="o">{</span>
      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The light is off"</span><span class="o">);</span>
   <span class="o">}</span>
<span class="o">}</span>

<span class="cm">/** The Command for turning on the light - ConcreteCommand #1 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FlipUpCommand</span> <span class="kd">implements</span> <span class="n">Command</span> <span class="o">{</span>
   <span class="kd">private</span> <span class="n">Light</span> <span class="n">theLight</span><span class="o">;</span>

   <span class="kd">public</span> <span class="nf">FlipUpCommand</span><span class="o">(</span><span class="n">Light</span> <span class="n">light</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">theLight</span> <span class="o">=</span> <span class="n">light</span><span class="o">;</span>
   <span class="o">}</span>

   <span class="nd">@Override</span>    <span class="c1">// Command</span>
   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">()</span> <span class="o">{</span>
      <span class="n">theLight</span><span class="o">.</span><span class="na">turnOn</span><span class="o">();</span>
   <span class="o">}</span>
<span class="o">}</span>

<span class="cm">/** The Command for turning off the light - ConcreteCommand #2 */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">FlipDownCommand</span> <span class="kd">implements</span> <span class="n">Command</span> <span class="o">{</span>
   <span class="kd">private</span> <span class="n">Light</span> <span class="n">theLight</span><span class="o">;</span>

   <span class="kd">public</span> <span class="nf">FlipDownCommand</span><span class="o">(</span><span class="n">Light</span> <span class="n">light</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">theLight</span> <span class="o">=</span> <span class="n">light</span><span class="o">;</span>
   <span class="o">}</span>

   <span class="nd">@Override</span>    <span class="c1">// Command</span>
   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">()</span> <span class="o">{</span>
      <span class="n">theLight</span><span class="o">.</span><span class="na">turnOff</span><span class="o">();</span>
   <span class="o">}</span>
<span class="o">}</span>

<span class="cm">/* The test class or client */</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">PressSwitch</span> <span class="o">{</span>
   <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
      <span class="c1">// Check number of arguments</span>
      <span class="k">if</span> <span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">length</span> <span class="o">!=</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
         <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Argument \"ON\" or \"OFF\" is required."</span><span class="o">);</span>
         <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(-</span><span class="mi">1</span><span class="o">);</span>
      <span class="o">}</span>

      <span class="n">Light</span> <span class="n">lamp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Light</span><span class="o">();</span>
      <span class="n">Command</span> <span class="n">switchUp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FlipUpCommand</span><span class="o">(</span><span class="n">lamp</span><span class="o">);</span>
      <span class="n">Command</span> <span class="n">switchDown</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FlipDownCommand</span><span class="o">(</span><span class="n">lamp</span><span class="o">);</span>

      <span class="n">Switch</span> <span class="n">mySwitch</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Switch</span><span class="o">();</span>

      <span class="k">switch</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span> <span class="o">{</span>
         <span class="k">case</span> <span class="s">"ON"</span><span class="o">:</span>
            <span class="n">mySwitch</span><span class="o">.</span><span class="na">storeAndExecute</span><span class="o">(</span><span class="n">switchUp</span><span class="o">);</span>
            <span class="k">break</span><span class="o">;</span>
         <span class="k">case</span> <span class="s">"OFF"</span><span class="o">:</span>
            <span class="n">mySwitch</span><span class="o">.</span><span class="na">storeAndExecute</span><span class="o">(</span><span class="n">switchDown</span><span class="o">);</span>
            <span class="k">break</span><span class="o">;</span>
         <span class="k">default</span><span class="o">:</span>
            <span class="n">System</span><span class="o">.</span><span class="na">err</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Argument \"ON\" or \"OFF\" is required."</span><span class="o">);</span>
            <span class="n">System</span><span class="o">.</span><span class="na">exit</span><span class="o">(-</span><span class="mi">1</span><span class="o">);</span>
      <span class="o">}</span>
   <span class="o">}</span>
<span class="o">}</span>
</pre></div>
<h3><span class="mw-headline" id="Java_8">Java 8</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=6" title="Edit section: Java 8">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Using a functional interface.</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="cm">/**</span>
<span class="cm"> * The Command functional interface.&lt;br/&gt;</span>
<span class="cm"> */</span>
<span class="nd">@FunctionalInterface</span>
<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Command</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">apply</span><span class="o">();</span>
<span class="o">}</span>

<span class="cm">/**</span>
<span class="cm"> * The CommandFactory class.&lt;br/&gt;</span>
<span class="cm"> */</span>
<span class="kn">import</span> <span class="nn">java.util.HashMap</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.Collectors</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">CommandFactory</span> <span class="o">{</span>
	<span class="kd">private</span> <span class="kd">final</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Command</span><span class="o">&gt;</span>	<span class="n">commands</span><span class="o">;</span>
	
	<span class="kd">private</span> <span class="nf">CommandFactory</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">commands</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">addCommand</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="n">Command</span> <span class="n">command</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">commands</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">name</span><span class="o">,</span> <span class="n">command</span><span class="o">);</span>
	<span class="o">}</span>
	
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">executeCommand</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
		<span class="k">if</span> <span class="o">(</span><span class="n">commands</span><span class="o">.</span><span class="na">containsKey</span><span class="o">(</span><span class="n">name</span><span class="o">))</span> <span class="o">{</span>
			<span class="n">commands</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">name</span><span class="o">).</span><span class="na">apply</span><span class="o">();</span>
		<span class="o">}</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">listCommands</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Enabled commands: "</span> <span class="o">+</span> <span class="n">commands</span><span class="o">.</span><span class="na">keySet</span><span class="o">().</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">", "</span><span class="o">)));</span>
	<span class="o">}</span>
	
	<span class="cm">/* Factory pattern */</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="n">CommandFactory</span> <span class="nf">init</span><span class="o">()</span> <span class="o">{</span>
		<span class="n">CommandFactory</span> <span class="n">cf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CommandFactory</span><span class="o">();</span>

		<span class="c1">// commands are added here using lambdas. It is also possible to dynamically add commands without editing the code.</span>
		<span class="n">cf</span><span class="o">.</span><span class="na">addCommand</span><span class="o">(</span><span class="s">"Light on"</span><span class="o">,</span> <span class="o">()</span> <span class="o">-&gt;</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Light turned on"</span><span class="o">));</span>
		<span class="n">cf</span><span class="o">.</span><span class="na">addCommand</span><span class="o">(</span><span class="s">"Light off"</span><span class="o">,</span> <span class="o">()</span> <span class="o">-&gt;</span> <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Light turned off"</span><span class="o">));</span>

		<span class="k">return</span> <span class="n">cf</span><span class="o">;</span>
	<span class="o">}</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">final</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="n">CommandFactory</span> <span class="n">cf</span> <span class="o">=</span> <span class="n">CommandFactory</span><span class="o">.</span><span class="na">init</span><span class="o">();</span>
		<span class="n">cf</span><span class="o">.</span><span class="na">executeCommand</span><span class="o">(</span><span class="s">"Light on"</span><span class="o">);</span>
		<span class="n">cf</span><span class="o">.</span><span class="na">listCommands</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
<h3><span class="mw-headline" id="Python">Python</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=7" title="Edit section: Python">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The following code is an implementation of Command pattern in <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>.</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">class</span> <span class="nc">Switch</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="sd">"""The INVOKER class"""</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">_history</span> <span class="o">=</span> <span class="p">()</span>

    <span class="nd">@property</span>
    <span class="k">def</span> <span class="nf">history</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_history</span>

    <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">command</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">_history</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">_history</span> <span class="o">+</span> <span class="p">(</span><span class="n">command</span><span class="p">,)</span>
        <span class="n">command</span><span class="o">.</span><span class="n">execute</span><span class="p">()</span>

<span class="k">class</span> <span class="nc">Command</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="sd">"""The COMMAND interface"""</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">obj</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">_obj</span> <span class="o">=</span> <span class="n">obj</span>

    <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">raise</span> <span class="ne">NotImplementedError</span>

<span class="k">class</span> <span class="nc">TurnOnCommand</span><span class="p">(</span><span class="n">Command</span><span class="p">):</span>
    <span class="sd">"""The COMMAND for turning on the light"""</span>
    <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">_obj</span><span class="o">.</span><span class="n">turn_on</span><span class="p">()</span>

<span class="k">class</span> <span class="nc">TurnOffCommand</span><span class="p">(</span><span class="n">Command</span><span class="p">):</span>
    <span class="sd">"""The COMMAND for turning off the light"""</span>
    <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">_obj</span><span class="o">.</span><span class="n">turn_off</span><span class="p">()</span>

<span class="k">class</span> <span class="nc">Light</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="sd">"""The RECEIVER class"""</span>
    <span class="k">def</span> <span class="nf">turn_on</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">"The light is on"</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">turn_off</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">"The light is off"</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">LightSwitchClient</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="sd">"""The CLIENT class"""</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">_lamp</span> <span class="o">=</span> <span class="n">Light</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">_switch</span> <span class="o">=</span> <span class="n">Switch</span><span class="p">()</span>

    <span class="nd">@property</span>
    <span class="k">def</span> <span class="nf">switch</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">_switch</span>

    <span class="k">def</span> <span class="nf">press</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">cmd</span><span class="p">):</span>
        <span class="n">cmd</span> <span class="o">=</span> <span class="n">cmd</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">upper</span><span class="p">()</span>
        <span class="k">if</span> <span class="n">cmd</span> <span class="o">==</span> <span class="s2">"ON"</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">_switch</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">TurnOnCommand</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_lamp</span><span class="p">))</span>
        <span class="k">elif</span> <span class="n">cmd</span> <span class="o">==</span> <span class="s2">"OFF"</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">_switch</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="n">TurnOffCommand</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">_lamp</span><span class="p">))</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s2">"Argument 'ON' or 'OFF' is required."</span><span class="p">)</span>

<span class="c1"># Execute if this file is run as a script and not imported as a module</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s2">"__main__"</span><span class="p">:</span>
    <span class="n">light_switch</span> <span class="o">=</span> <span class="n">LightSwitchClient</span><span class="p">()</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"Switch ON test."</span><span class="p">)</span>
    <span class="n">light_switch</span><span class="o">.</span><span class="n">press</span><span class="p">(</span><span class="s2">"ON"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"Switch OFF test."</span><span class="p">)</span>
    <span class="n">light_switch</span><span class="o">.</span><span class="n">press</span><span class="p">(</span><span class="s2">"OFF"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="s2">"Invalid Command test."</span><span class="p">)</span>
    <span class="n">light_switch</span><span class="o">.</span><span class="n">press</span><span class="p">(</span><span class="s2">"****"</span><span class="p">)</span>

    <span class="k">print</span><span class="p">(</span><span class="s2">"Command history:"</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">light_switch</span><span class="o">.</span><span class="n">switch</span><span class="o">.</span><span class="n">history</span><span class="p">)</span>
</pre></div>
<h3><span class="mw-headline" id="Ruby">Ruby</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=8" title="Edit section: Ruby">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c1"># Invoker</span>
<span class="k">class</span> <span class="nc">Switch</span>
  <span class="kp">attr_reader</span> <span class="ss">:history</span>

  <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
    <span class="vi">@history</span> <span class="o">||=</span> <span class="o">[]</span>
    <span class="vi">@history</span> <span class="o">&lt;&lt;</span> <span class="n">cmd</span><span class="o">.</span><span class="n">execute</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># Command Interface</span>
<span class="k">class</span> <span class="nc">Command</span>
  <span class="kp">attr_reader</span> <span class="ss">:obj</span>

  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
    <span class="vi">@obj</span> <span class="o">=</span> <span class="n">obj</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">execute</span>
    <span class="k">raise</span> <span class="no">NotImplementedError</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># Command for turning on</span>
<span class="k">class</span> <span class="nc">TurnOnCommand</span> <span class="o">&lt;</span> <span class="no">Command</span>
  <span class="k">def</span> <span class="nf">execute</span>
    <span class="n">obj</span><span class="o">.</span><span class="n">turn_on</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># Command for turning off</span>
<span class="k">class</span> <span class="nc">TurnOffCommand</span> <span class="o">&lt;</span> <span class="no">Command</span>
  <span class="k">def</span> <span class="nf">execute</span>
    <span class="n">obj</span><span class="o">.</span><span class="n">turn_off</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># Receiver</span>
<span class="k">class</span> <span class="nc">Light</span>
  <span class="k">def</span> <span class="nf">turn_on</span>
    <span class="s1">'the light is on'</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">turn_off</span>
    <span class="s1">'the light is off'</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># Client</span>
<span class="k">class</span> <span class="nc">LightSwitchClient</span>
  <span class="kp">attr_reader</span> <span class="ss">:switch</span>

  <span class="k">def</span> <span class="nf">initialize</span>
    <span class="vi">@lamp</span> <span class="o">=</span> <span class="no">Light</span><span class="o">.</span><span class="n">new</span>
    <span class="vi">@switch</span> <span class="o">=</span> <span class="no">Switch</span><span class="o">.</span><span class="n">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">switch_for</span><span class="p">(</span><span class="n">cmd</span><span class="p">)</span>
    <span class="k">case</span> <span class="n">cmd</span>
    <span class="k">when</span> <span class="s1">'on'</span>  <span class="k">then</span> <span class="vi">@switch</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="no">TurnOnCommand</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@lamp</span><span class="p">))</span>
    <span class="k">when</span> <span class="s1">'off'</span> <span class="k">then</span> <span class="vi">@switch</span><span class="o">.</span><span class="n">execute</span><span class="p">(</span><span class="no">TurnOffCommand</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="vi">@lamp</span><span class="p">))</span>
    <span class="k">else</span> <span class="nb">puts</span> <span class="s1">'Sorry, I so sorry'</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="n">client</span> <span class="o">=</span> <span class="no">LightSwitchClient</span><span class="o">.</span><span class="n">new</span>
<span class="n">client</span><span class="o">.</span><span class="n">switch_for</span><span class="p">(</span><span class="s1">'on'</span><span class="p">)</span>
<span class="n">client</span><span class="o">.</span><span class="n">switch_for</span><span class="p">(</span><span class="s1">'off'</span><span class="p">)</span>
<span class="n">client</span><span class="o">.</span><span class="n">switch</span><span class="o">.</span><span class="n">history</span> <span class="c1">#=&gt; ['the light is on', 'the light is off']</span>
</pre></div>
<h3><span class="mw-headline" id="Scala">Scala</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=9" title="Edit section: Scala">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="cm">/* The Command interface */</span>
<span class="k">trait</span> <span class="nc">Command</span> <span class="o">{</span>
   <span class="k">def</span> <span class="n">execute</span><span class="o">()</span>
<span class="o">}</span>
 
<span class="cm">/* The Invoker class */</span>
<span class="k">class</span> <span class="nc">Switch</span> <span class="o">{</span>
   <span class="k">private</span> <span class="k">var</span> <span class="n">history</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">Command</span><span class="o">]</span> <span class="k">=</span> <span class="nc">Nil</span>
 
   <span class="k">def</span> <span class="n">storeAndExecute</span><span class="o">(</span><span class="n">cmd</span><span class="k">:</span> <span class="kt">Command</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">cmd</span><span class="o">.</span><span class="n">execute</span><span class="o">()</span>
      <span class="k">this</span><span class="o">.</span><span class="n">history</span> <span class="o">:+=</span> <span class="n">cmd</span>
   <span class="o">}</span>
<span class="o">}</span>
 
<span class="cm">/* The Receiver class */</span>
<span class="k">class</span> <span class="nc">Light</span> <span class="o">{</span>
   <span class="k">def</span> <span class="n">turnOn</span><span class="o">()</span> <span class="k">=</span> <span class="n">println</span><span class="o">(</span><span class="s">"The light is on"</span><span class="o">)</span>
   <span class="k">def</span> <span class="n">turnOff</span><span class="o">()</span> <span class="k">=</span> <span class="n">println</span><span class="o">(</span><span class="s">"The light is off"</span><span class="o">)</span>
<span class="o">}</span>
 
<span class="cm">/* The Command for turning on the light - ConcreteCommand #1 */</span>
<span class="k">class</span> <span class="nc">FlipUpCommand</span><span class="o">(</span><span class="n">theLight</span><span class="k">:</span> <span class="kt">Light</span><span class="o">)</span> <span class="k">extends</span> <span class="nc">Command</span> <span class="o">{</span>
   <span class="k">def</span> <span class="n">execute</span><span class="o">()</span> <span class="k">=</span> <span class="n">theLight</span><span class="o">.</span><span class="n">turnOn</span><span class="o">()</span>
<span class="o">}</span>
 
<span class="cm">/* The Command for turning off the light - ConcreteCommand #2 */</span>
<span class="k">class</span> <span class="nc">FlipDownCommand</span><span class="o">(</span><span class="n">theLight</span><span class="k">:</span> <span class="kt">Light</span><span class="o">)</span> <span class="k">extends</span> <span class="nc">Command</span> <span class="o">{</span>
   <span class="k">def</span> <span class="n">execute</span><span class="o">()</span> <span class="k">=</span> <span class="n">theLight</span><span class="o">.</span><span class="n">turnOff</span><span class="o">()</span>
<span class="o">}</span>
 
<span class="cm">/* The test class or client */</span>
<span class="k">object</span> <span class="nc">PressSwitch</span> <span class="o">{</span>
   <span class="k">def</span> <span class="n">main</span><span class="o">(</span><span class="n">args</span><span class="k">:</span> <span class="kt">Array</span><span class="o">[</span><span class="kt">String</span><span class="o">])</span> <span class="o">{</span>
      <span class="k">val</span> <span class="n">lamp</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">Light</span><span class="o">()</span>
      <span class="k">val</span> <span class="n">switchUp</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">FlipUpCommand</span><span class="o">(</span><span class="n">lamp</span><span class="o">)</span>
      <span class="k">val</span> <span class="n">switchDown</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">FlipDownCommand</span><span class="o">(</span><span class="n">lamp</span><span class="o">)</span>
 
      <span class="k">val</span> <span class="n">s</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">Switch</span><span class="o">()</span>
 
      <span class="k">try</span> <span class="o">{</span>
         <span class="n">args</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="n">toUpperCase</span> <span class="k">match</span> <span class="o">{</span>
            <span class="k">case</span> <span class="s">"ON"</span> <span class="k">=&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">storeAndExecute</span><span class="o">(</span><span class="n">switchUp</span><span class="o">)</span>
            <span class="k">case</span> <span class="s">"OFF"</span> <span class="k">=&gt;</span> <span class="n">s</span><span class="o">.</span><span class="n">storeAndExecute</span><span class="o">(</span><span class="n">switchDown</span><span class="o">)</span>
            <span class="k">case</span> <span class="k">_</span> <span class="k">=&gt;</span> <span class="n">println</span><span class="o">(</span><span class="s">"Argument \"ON\" or \"OFF\" is required."</span><span class="o">)</span>
         <span class="o">}</span>
      <span class="o">}</span> <span class="k">catch</span> <span class="o">{</span>
         <span class="k">case</span> <span class="n">e</span><span class="k">:</span> <span class="kt">Exception</span> <span class="o">=&gt;</span> <span class="n">println</span><span class="o">(</span><span class="s">"Arguments required."</span><span class="o">)</span>
      <span class="o">}</span>
   <span class="o">}</span>
<span class="o">}</span>
</pre></div>
<h3><span class="mw-headline" id="JavaScript">JavaScript</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=10" title="Edit section: JavaScript">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The following code is an implementation of Command pattern in JavaScript.</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="cm">/* The Invoker function */</span>
<span class="s2">"use strict"</span><span class="p">;</span>

<span class="kr">class</span> <span class="nx">Switch</span> <span class="p">{</span>
  <span class="nx">constructor</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">_commands</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="p">}</span>

  <span class="nx">storeAndExecute</span><span class="p">(</span><span class="nx">command</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">_commands</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">command</span><span class="p">);</span>
    <span class="nx">command</span><span class="p">.</span><span class="nx">execute</span><span class="p">();</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kr">class</span> <span class="nx">Light</span> <span class="p">{</span>
  <span class="nx">turnOn</span><span class="p">()</span> <span class="p">{</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'turn on'</span><span class="p">)</span> <span class="p">}</span>
  <span class="nx">turnOff</span><span class="p">()</span> <span class="p">{</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'turn off'</span><span class="p">)</span> <span class="p">}</span>
<span class="p">}</span>

<span class="kr">class</span> <span class="nx">FlipDownCommand</span> <span class="p">{</span>
  <span class="nx">constructor</span><span class="p">(</span><span class="nx">light</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">_light</span> <span class="o">=</span> <span class="nx">light</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="nx">execute</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">_light</span><span class="p">.</span><span class="nx">turnOff</span><span class="p">();</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kr">class</span> <span class="nx">FlipUpCommand</span> <span class="p">{</span>
  <span class="nx">constructor</span><span class="p">(</span><span class="nx">light</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">_light</span> <span class="o">=</span> <span class="nx">light</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="nx">execute</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">_light</span><span class="p">.</span><span class="nx">turnOn</span><span class="p">();</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kd">var</span> <span class="nx">light</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Light</span><span class="p">();</span>
<span class="kd">var</span> <span class="nx">switchUp</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FlipUpCommand</span><span class="p">(</span><span class="nx">light</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">switchDown</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FlipDownCommand</span><span class="p">(</span><span class="nx">light</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Switch</span><span class="p">();</span>

<span class="nx">s</span><span class="p">.</span><span class="nx">storeAndExecute</span><span class="p">(</span><span class="nx">switchUp</span><span class="p">);</span>
<span class="nx">s</span><span class="p">.</span><span class="nx">storeAndExecute</span><span class="p">(</span><span class="nx">switchDown</span><span class="p">);</span>
</pre></div>
<h3><span class="mw-headline" id="Coffeescript">Coffeescript</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=11" title="Edit section: Coffeescript">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The following code is an implementation of Command pattern in Coffeescript</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="err">#</span> <span class="nx">The</span> <span class="nx">Invoker</span> <span class="kd">function</span>
<span class="kr">class</span> <span class="nx">Switch</span>
   <span class="nx">_commands</span> <span class="o">=</span> <span class="p">[]</span>
   <span class="nx">storeAndExecute</span><span class="o">:</span> <span class="p">(</span><span class="nx">command</span><span class="p">)</span> <span class="o">-&gt;</span>
     <span class="nx">_commands</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">command</span><span class="p">)</span>
     <span class="nx">command</span><span class="p">.</span><span class="nx">execute</span><span class="p">()</span>

<span class="err">#</span>  <span class="nx">The</span> <span class="nx">Receiver</span> <span class="kd">function</span>
<span class="kr">class</span> <span class="nx">Light</span>
  <span class="nx">turnOn</span><span class="o">:</span> <span class="o">-&gt;</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="p">(</span><span class="s1">'turn on'</span><span class="p">)</span>
  <span class="nx">turnOff</span><span class="o">:</span> <span class="o">-&gt;</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="p">(</span><span class="s1">'turn off'</span><span class="p">)</span>

<span class="err">#</span> <span class="nx">The</span> <span class="nx">Command</span> <span class="k">for</span> <span class="nx">turning</span> <span class="nx">on</span> <span class="nx">the</span> <span class="nx">light</span> <span class="o">-</span> <span class="nx">ConcreteCommand</span> <span class="err">#</span><span class="mi">1</span> 
<span class="kr">class</span> <span class="nx">FlipUpCommand</span>
 <span class="nx">constructor</span><span class="o">:</span> <span class="p">(</span><span class="err">@</span><span class="nx">light</span><span class="p">)</span> <span class="o">-&gt;</span>

 <span class="nx">execute</span><span class="o">:</span> <span class="o">-&gt;</span>
   <span class="err">@</span><span class="nx">light</span><span class="p">.</span><span class="nx">turnOn</span><span class="p">()</span>

<span class="err">#</span> <span class="nx">The</span> <span class="nx">Command</span> <span class="k">for</span> <span class="nx">turning</span> <span class="nx">off</span> <span class="nx">the</span> <span class="nx">light</span> <span class="o">-</span> <span class="nx">ConcreteCommand</span> <span class="err">#</span><span class="mi">2</span>
<span class="kr">class</span> <span class="nx">FlipDownCommand</span>
 <span class="nx">constructor</span><span class="o">:</span> <span class="p">(</span><span class="err">@</span><span class="nx">light</span><span class="p">)</span> <span class="o">-&gt;</span>

 <span class="nx">execute</span><span class="o">:</span> <span class="o">-&gt;</span>
   <span class="err">@</span><span class="nx">light</span><span class="p">.</span><span class="nx">turnOff</span><span class="p">()</span>

<span class="nx">light</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Light</span><span class="p">()</span>
<span class="nx">switchUp</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FlipUpCommand</span><span class="p">(</span><span class="nx">light</span><span class="p">)</span>
<span class="nx">switchDown</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">FlipDownCommand</span><span class="p">(</span><span class="nx">light</span><span class="p">)</span>
<span class="nx">s</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Switch</span><span class="p">()</span>

<span class="nx">s</span><span class="p">.</span><span class="nx">storeAndExecute</span><span class="p">(</span><span class="nx">switchUp</span><span class="p">)</span>
<span class="nx">s</span><span class="p">.</span><span class="nx">storeAndExecute</span><span class="p">(</span><span class="nx">switchDown</span><span class="p">)</span>
</pre></div>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=12" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="/wiki/Software_design_pattern" title="Software design pattern">Software design pattern</a></li>
<li><a class="mw-redirect" href="/wiki/Batch_queue" title="Batch queue">Batch queue</a></li>
<li><a class="mw-redirect" href="/wiki/Closure_(computer_science)" title="Closure (computer science)">Closure</a></li>
<li><a href="/wiki/Command_queue" title="Command queue">Command queue</a></li>
<li><a href="/wiki/Function_object" title="Function object">Function object</a></li>
<li><a href="/wiki/Job_scheduler" title="Job scheduler">Job scheduler</a></li>
<li><a class="mw-redirect" href="/wiki/Model-view-controller" title="Model-view-controller">Model-view-controller</a></li>
<li><a href="/wiki/Priority_queue" title="Priority queue">Priority queue</a></li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=13" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li>Freeman, E; Sierra, K; Bates, B (2004). Head First Design Patterns. O'Reilly.</li>
<li><a class="mw-redirect" href="/wiki/Gang_of_Four_(software)" title="Gang of Four (software)">GoF - Design Patterns</a></li>
</ul>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Command_pattern&amp;action=edit&amp;section=14" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table class="mbox-small plainlinks sistersitebox" role="presentation" style="border:1px solid #aaa;background-color:#f9f9f9">
<tr>
<td class="mbox-image"><a class="image" href="/wiki/File:Commons-logo.svg"><img alt="" class="noviewer" data-file-height="1376" data-file-width="1024" height="40" src="//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/30px-Commons-logo.svg.png" srcset="//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/45px-Commons-logo.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/59px-Commons-logo.svg.png 2x" width="30"/></a></td>
<td class="mbox-text plainlist">Wikimedia Commons has media related to <i><b><a class="extiw" href="https://commons.wikimedia.org/wiki/Category:Command_pattern" title="commons:Category:Command pattern">Command pattern</a></b></i>.</td>
</tr>
</table>
<table class="mbox-small plainlinks sistersitebox" role="presentation" style="border:1px solid #aaa;background-color:#f9f9f9">
<tr>
<td class="mbox-image"><a class="image" href="/wiki/File:Wikibooks-logo-en-noslogan.svg"><img alt="" class="noviewer" data-file-height="400" data-file-width="400" height="40" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/60px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/80px-Wikibooks-logo-en-noslogan.svg.png 2x" width="40"/></a></td>
<td class="mbox-text plainlist">The Wikibook <i><a class="extiw" href="//en.wikibooks.org/wiki/Computer_Science_Design_Patterns" title="wikibooks:Computer Science Design Patterns">Computer Science Design Patterns</a></i> has a page on the topic of: <i><b><a class="extiw" href="//en.wikibooks.org/wiki/Computer_Science_Design_Patterns/Command" title="wikibooks:Computer Science Design Patterns/Command">Command implementations in various languages</a></b></i></td>
</tr>
</table>
<ul>
<li><a class="external free" href="http://c2.com/cgi/wiki?CommandPattern" rel="nofollow">http://c2.com/cgi/wiki?CommandPattern</a></li>
<li><a class="external free" href="http://www.javaworld.com/javaworld/javatips/jw-javatip68.html" rel="nofollow">http://www.javaworld.com/javaworld/javatips/jw-javatip68.html</a></li>
</ul>
<div aria-labelledby="Software_design_patterns" class="navbox" role="navigation" style="padding:3px">
<table class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
<tr>
<th class="navbox-title" colspan="2" scope="col">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="/wiki/Template:Design_Patterns_patterns" title="Template:Design Patterns patterns"><abbr style=";;background:none transparent;border:none;" title="View this template">v</abbr></a></li>
<li class="nv-talk"><a href="/wiki/Template_talk:Design_Patterns_patterns" title="Template talk:Design Patterns patterns"><abbr style=";;background:none transparent;border:none;" title="Discuss this template">t</abbr></a></li>
<li class="nv-edit"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Template:Design_Patterns_patterns&amp;action=edit"><abbr style=";;background:none transparent;border:none;" title="Edit this template">e</abbr></a></li>
</ul>
</div>
<div id="Software_design_patterns" style="font-size:114%"><a href="/wiki/Software_design_pattern" title="Software design pattern">Software design patterns</a></div>
</th>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row"><a href="/wiki/Design_Patterns" title="Design Patterns">Gang of Four<br/>
patterns</a></th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em"></div>
<table class="nowraplinks navbox-subgroup" style="border-spacing:0">
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;">
<div style="padding:0em 0.75em;"><a href="/wiki/Creational_pattern" title="Creational pattern">Creational</a></div>
</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Abstract_factory_pattern" title="Abstract factory pattern">Abstract factory</a></li>
<li><a href="/wiki/Builder_pattern" title="Builder pattern">Builder</a></li>
<li><a href="/wiki/Factory_method_pattern" title="Factory method pattern">Factory method</a></li>
<li><a href="/wiki/Prototype_pattern" title="Prototype pattern">Prototype</a></li>
<li><a href="/wiki/Singleton_pattern" title="Singleton pattern">Singleton</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;">
<div style="padding:0em 0.75em;"><a href="/wiki/Structural_pattern" title="Structural pattern">Structural</a></div>
</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Adapter_pattern" title="Adapter pattern">Adapter</a></li>
<li><a href="/wiki/Bridge_pattern" title="Bridge pattern">Bridge</a></li>
<li><a href="/wiki/Composite_pattern" title="Composite pattern">Composite</a></li>
<li><a href="/wiki/Decorator_pattern" title="Decorator pattern">Decorator</a></li>
<li><a href="/wiki/Facade_pattern" title="Facade pattern">Facade</a></li>
<li><a href="/wiki/Flyweight_pattern" title="Flyweight pattern">Flyweight</a></li>
<li><a href="/wiki/Proxy_pattern" title="Proxy pattern">Proxy</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;">
<div style="padding:0em 0.75em;"><a href="/wiki/Behavioral_pattern" title="Behavioral pattern">Behavioral</a></div>
</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Chain-of-responsibility_pattern" title="Chain-of-responsibility pattern">Chain of responsibility</a></li>
<li><strong class="selflink">Command</strong></li>
<li><a href="/wiki/Interpreter_pattern" title="Interpreter pattern">Interpreter</a></li>
<li><a href="/wiki/Iterator_pattern" title="Iterator pattern">Iterator</a></li>
<li><a href="/wiki/Mediator_pattern" title="Mediator pattern">Mediator</a></li>
<li><a href="/wiki/Memento_pattern" title="Memento pattern">Memento</a></li>
<li><a href="/wiki/Observer_pattern" title="Observer pattern">Observer</a></li>
<li><a href="/wiki/State_pattern" title="State pattern">State</a></li>
<li><a href="/wiki/Strategy_pattern" title="Strategy pattern">Strategy</a></li>
<li><a href="/wiki/Template_method_pattern" title="Template method pattern">Template method</a></li>
<li><a href="/wiki/Visitor_pattern" title="Visitor pattern">Visitor</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row"><a href="/wiki/Concurrency_pattern" title="Concurrency pattern">Concurrency<br/>
patterns</a></th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Active_object" title="Active object">Active object</a></li>
<li><a href="/wiki/Balking_pattern" title="Balking pattern">Balking</a></li>
<li><a href="/wiki/Binding_properties_pattern" title="Binding properties pattern">Binding properties</a></li>
<li><a href="/wiki/Double-checked_locking" title="Double-checked locking">Double-checked locking</a></li>
<li><a href="/wiki/Asynchronous_method_invocation" title="Asynchronous method invocation">Event-based asynchronous</a></li>
<li><a href="/wiki/Guarded_suspension" title="Guarded suspension">Guarded suspension</a></li>
<li><a href="/wiki/Join-pattern" title="Join-pattern">Join</a></li>
<li><a class="mw-redirect" href="/wiki/Lock_pattern" title="Lock pattern">Lock</a></li>
<li><a href="/wiki/Monitor_(synchronization)" title="Monitor (synchronization)">Monitor</a></li>
<li><a href="/wiki/Proactor_pattern" title="Proactor pattern">Proactor</a></li>
<li><a href="/wiki/Reactor_pattern" title="Reactor pattern">Reactor</a></li>
<li><a href="/wiki/Readers%E2%80%93writer_lock" title="Readers–writer lock">Read write lock</a></li>
<li><a class="mw-redirect" href="/wiki/Scheduler_pattern" title="Scheduler pattern">Scheduler</a></li>
<li><a class="mw-redirect" href="/wiki/Thread_pool_pattern" title="Thread pool pattern">Thread pool</a></li>
<li><a href="/wiki/Thread-local_storage" title="Thread-local storage">Thread-local storage</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row"><a href="/wiki/Architectural_pattern" title="Architectural pattern">Architectural<br/>
patterns</a></th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Front_controller" title="Front controller">Front controller</a></li>
<li><a href="/wiki/Interceptor_pattern" title="Interceptor pattern">Interceptor</a></li>
<li><a href="/wiki/Model%E2%80%93view%E2%80%93controller" title="Model–view–controller">MVC</a></li>
<li><a href="/wiki/Multitier_architecture" title="Multitier architecture"><i>n</i>-tier</a></li>
<li><a href="/wiki/Specification_pattern" title="Specification pattern">Specification</a></li>
<li><a href="/wiki/Publish%E2%80%93subscribe_pattern" title="Publish–subscribe pattern">Publish–subscribe</a></li>
<li><a href="/wiki/Naked_objects" title="Naked objects">Naked objects</a></li>
<li><a href="/wiki/Service_locator_pattern" title="Service locator pattern">Service locator</a></li>
<li><a href="/wiki/Active_record_pattern" title="Active record pattern">Active record</a></li>
<li><a href="/wiki/Identity_map_pattern" title="Identity map pattern">Identity map</a></li>
<li><a href="/wiki/Data_access_object" title="Data access object">Data access object</a></li>
<li><a href="/wiki/Data_transfer_object" title="Data transfer object">Data transfer object</a></li>
<li><a class="new" href="/w/index.php?title=Action%E2%80%93Domain%E2%80%93Responder&amp;action=edit&amp;redlink=1" title="Action–Domain–Responder (page does not exist)">ADR</a></li>
<li><a href="/wiki/Inversion_of_control" title="Inversion of control">Inversion of control</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Other<br/>
patterns</th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a class="mw-redirect" href="/wiki/Blackboard_design_pattern" title="Blackboard design pattern">Blackboard</a></li>
<li><a href="/wiki/Business_delegate_pattern" title="Business delegate pattern">Business delegate</a></li>
<li><a href="/wiki/Composite_entity_pattern" title="Composite entity pattern">Composite entity</a></li>
<li><a href="/wiki/Dependency_injection" title="Dependency injection">Dependency injection</a></li>
<li><a href="/wiki/Intercepting_filter_pattern" title="Intercepting filter pattern">Intercepting filter</a></li>
<li><a href="/wiki/Lazy_loading" title="Lazy loading">Lazy loading</a></li>
<li><a href="/wiki/Mock_object" title="Mock object">Mock object</a></li>
<li><a class="mw-redirect" href="/wiki/Null_object_pattern" title="Null object pattern">Null object</a></li>
<li><a href="/wiki/Object_pool_pattern" title="Object pool pattern">Object pool</a></li>
<li><a href="/wiki/Servant_(design_pattern)" title="Servant (design pattern)">Servant</a></li>
<li><a href="/wiki/Twin_pattern" title="Twin pattern">Twin</a></li>
<li><a href="/wiki/Type_Tunnel_pattern" title="Type Tunnel pattern">Type tunnel</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Books</th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><i><a href="/wiki/Design_Patterns" title="Design Patterns">Design Patterns</a></i></li>
<li><i><a href="/wiki/Enterprise_Integration_Patterns" title="Enterprise Integration Patterns">Enterprise Integration Patterns</a></i></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">People</th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Christopher_Alexander" title="Christopher Alexander">Christopher Alexander</a></li>
<li><a href="/wiki/Erich_Gamma" title="Erich Gamma">Erich Gamma</a></li>
<li><a href="/wiki/Ralph_Johnson_(computer_scientist)" title="Ralph Johnson (computer scientist)">Ralph Johnson</a></li>
<li><a href="/wiki/John_Vlissides" title="John Vlissides">John Vlissides</a></li>
<li><a href="/wiki/Grady_Booch" title="Grady Booch">Grady Booch</a></li>
<li><a href="/wiki/Kent_Beck" title="Kent Beck">Kent Beck</a></li>
<li><a href="/wiki/Ward_Cunningham" title="Ward Cunningham">Ward Cunningham</a></li>
<li><a href="/wiki/Martin_Fowler" title="Martin Fowler">Martin Fowler</a></li>
<li><a href="/wiki/Robert_Cecil_Martin" title="Robert Cecil Martin">Robert Martin</a></li>
<li><a href="/wiki/Jim_Coplien" title="Jim Coplien">Jim Coplien</a></li>
<li><a href="/wiki/Douglas_C._Schmidt" title="Douglas C. Schmidt">Douglas Schmidt</a></li>
<li><a href="/wiki/Linda_Rising" title="Linda Rising">Linda Rising</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Communities</th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/The_Hillside_Group" title="The Hillside Group">The Hillside Group</a></li>
<li><a href="/wiki/Portland_Pattern_Repository" title="Portland Pattern Repository">The Portland Pattern Repository</a></li>
</ul>
</div>
</td>
</tr>
</table>
</div>
<!-- Saved in parser cache with key enwiki:pcache:idhash:164858-0!*!0!!en!4!* and timestamp 20160913215724 and revision id 734896026
 -->
<noscript><img alt="" height="1" src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" style="border: none; position: absolute;" title="" width="1"/></noscript></div> <div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Command_pattern&amp;oldid=734896026">https://en.wikipedia.org/w/index.php?title=Command_pattern&amp;oldid=734896026</a>"					</div>
<div class="catlinks" data-mw="interface" id="catlinks"><div class="mw-normal-catlinks" id="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Software_design_patterns" title="Category:Software design patterns">Software design patterns</a></li></ul></div><div class="mw-hidden-catlinks mw-hidden-cats-hidden" id="mw-hidden-catlinks">Hidden categories: <ul><li><a href="/wiki/Category:Articles_lacking_in-text_citations_from_December_2012" title="Category:Articles lacking in-text citations from December 2012">Articles lacking in-text citations from December 2012</a></li><li><a href="/wiki/Category:All_articles_lacking_in-text_citations" title="Category:All articles lacking in-text citations">All articles lacking in-text citations</a></li><li><a href="/wiki/Category:Commons_category_with_page_title_same_as_on_Wikidata" title="Category:Commons category with page title same as on Wikidata">Commons category with page title same as on Wikidata</a></li><li><a href="/wiki/Category:Articles_with_example_Java_code" title="Category:Articles with example Java code">Articles with example Java code</a></li><li><a href="/wiki/Category:Articles_with_example_C_Sharp_code" title="Category:Articles with example C Sharp code">Articles with example C Sharp code</a></li></ul></div></div> <div class="visualClear"></div>
</div>
</div>
<div id="mw-navigation">
<h2>Navigation menu</h2>
<div id="mw-head">
<div aria-labelledby="p-personal-label" class="" id="p-personal" role="navigation">
<h3 id="p-personal-label">Personal tools</h3>
<ul>
<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a accesskey="n" href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]">Talk</a></li><li id="pt-anoncontribs"><a accesskey="y" href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Command+pattern" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a accesskey="o" href="/w/index.php?title=Special:UserLogin&amp;returnto=Command+pattern" title="You're encouraged to log in; however, it's not mandatory. [o]">Log in</a></li> </ul>
</div>
<div id="left-navigation">
<div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
<h3 id="p-namespaces-label">Namespaces</h3>
<ul>
<li class="selected" id="ca-nstab-main"><span><a accesskey="c" href="/wiki/Command_pattern" title="View the content page [c]">Article</a></span></li>
<li id="ca-talk"><span><a accesskey="t" href="/wiki/Talk:Command_pattern" rel="discussion" title="Discussion about the content page [t]">Talk</a></span></li>
</ul>
</div>
<div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
<h3 id="p-variants-label">
<span>Variants</span><a href="#"></a>
</h3>
<div class="menu">
<ul>
</ul>
</div>
</div>
</div>
<div id="right-navigation">
<div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
<h3 id="p-views-label">Views</h3>
<ul>
<li class="selected" id="ca-view"><span><a href="/wiki/Command_pattern">Read</a></span></li>
<li id="ca-edit"><span><a accesskey="e" href="/w/index.php?title=Command_pattern&amp;action=edit" title="Edit this page [e]">Edit</a></span></li>
<li class="collapsible" id="ca-history"><span><a accesskey="h" href="/w/index.php?title=Command_pattern&amp;action=history" title="Past revisions of this page [h]">View history</a></span></li>
</ul>
</div>
<div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>
<div class="menu">
<ul>
</ul>
</div>
</div>
<div id="p-search" role="search">
<h3>
<label for="searchInput">Search</label>
</h3>
<form action="/w/index.php" id="searchform">
<div id="simpleSearch">
<input accesskey="f" id="searchInput" name="search" placeholder="Search" title="Search Wikipedia [f]" type="search"/><input name="title" type="hidden" value="Special:Search"/><input class="searchButton mw-fallbackSearchButton" id="mw-searchButton" name="fulltext" title="Search Wikipedia for this text" type="submit" value="Search"/><input class="searchButton" id="searchButton" name="go" title="Go to a page with this exact name if it exists" type="submit" value="Go"/> </div>
</form>
</div>
</div>
</div>
<div id="mw-panel">
<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page" title="Visit the main page"></a></div>
<div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
<h3 id="p-navigation-label">Navigation</h3>
<div class="body">
<ul>
<li id="n-mainpage-description"><a accesskey="z" href="/wiki/Main_Page" title="Visit the main page [z]">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a accesskey="x" href="/wiki/Special:Random" title="Load a random article [x]">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-interaction-label" class="portal" id="p-interaction" role="navigation">
<h3 id="p-interaction-label">Interaction</h3>
<div class="body">
<ul>
<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a accesskey="r" href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
<h3 id="p-tb-label">Tools</h3>
<div class="body">
<ul>
<li id="t-whatlinkshere"><a accesskey="j" href="/wiki/Special:WhatLinksHere/Command_pattern" title="List of all English Wikipedia pages containing links to this page [j]">What links here</a></li><li id="t-recentchangeslinked"><a accesskey="k" href="/wiki/Special:RecentChangesLinked/Command_pattern" title="Recent changes in pages linked from this page [k]">Related changes</a></li><li id="t-upload"><a accesskey="u" href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]">Upload file</a></li><li id="t-specialpages"><a accesskey="q" href="/wiki/Special:SpecialPages" title="A list of all special pages [q]">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Command_pattern&amp;oldid=734896026" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Command_pattern&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a accesskey="g" href="https://www.wikidata.org/wiki/Q386776" title="Link to connected data repository item [g]">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Command_pattern&amp;id=734896026" title="Information on how to cite this page">Cite this page</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
<h3 id="p-coll-print_export-label">Print/export</h3>
<div class="body">
<ul>
<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Command+pattern">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Command+pattern&amp;returnto=Command+pattern&amp;oldid=734896026&amp;writer=rdf2latex">Download as PDF</a></li><li id="t-print"><a accesskey="p" href="/w/index.php?title=Command_pattern&amp;printable=yes" title="Printable version of this page [p]">Printable version</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-wikibase-otherprojects-label" class="portal" id="p-wikibase-otherprojects" role="navigation">
<h3 id="p-wikibase-otherprojects-label">In other projects</h3>
<div class="body">
<ul>
<li class="wb-otherproject-link wb-otherproject-commons"><a href="https://commons.wikimedia.org/wiki/Category:Command_pattern" hreflang="en">Wikimedia Commons</a></li><li class="wb-otherproject-link wb-otherproject-wikibooks"><a href="https://en.wikibooks.org/wiki/Computer_Science_Design_Patterns/Command" hreflang="en">Wikibooks</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
<h3 id="p-lang-label">Languages</h3>
<div class="body">
<ul>
<li class="interlanguage-link interwiki-bg"><a href="https://bg.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D0%B0_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD)" hreflang="bg" lang="bg" title="Команда (шаблон) – Bulgarian">Български</a></li><li class="interlanguage-link interwiki-de"><a href="https://de.wikipedia.org/wiki/Kommando_(Entwurfsmuster)" hreflang="de" lang="de" title="Kommando (Entwurfsmuster) – German">Deutsch</a></li><li class="interlanguage-link interwiki-es"><a href="https://es.wikipedia.org/wiki/Command_(patr%C3%B3n_de_dise%C3%B1o)" hreflang="es" lang="es" title="Command (patrón de diseño) – Spanish">Español</a></li><li class="interlanguage-link interwiki-fr"><a href="https://fr.wikipedia.org/wiki/Commande_(patron_de_conception)" hreflang="fr" lang="fr" title="Commande (patron de conception) – French">Français</a></li><li class="interlanguage-link interwiki-gl"><a href="https://gl.wikipedia.org/wiki/Comando_(patr%C3%B3n_de_dese%C3%B1o)" hreflang="gl" lang="gl" title="Comando (patrón de deseño) – Galician">Galego</a></li><li class="interlanguage-link interwiki-ko"><a href="https://ko.wikipedia.org/wiki/%EC%BB%A4%EB%A7%A8%EB%93%9C_%ED%8C%A8%ED%84%B4" hreflang="ko" lang="ko" title="커맨드 패턴 – Korean">한국어</a></li><li class="interlanguage-link interwiki-hy"><a href="https://hy.wikipedia.org/wiki/%D5%80%D6%80%D5%A1%D5%B4%D5%A1%D5%B6_(%D5%B6%D5%A1%D5%AD%D5%A1%D5%A3%D5%AE%D5%B4%D5%A1%D5%B6_%D5%B1%D6%87%D5%A1%D5%B6%D5%B4%D5%B8%D6%82%D5%B7)" hreflang="hy" lang="hy" title="Հրաման (նախագծման ձևանմուշ) – Armenian">Հայերեն</a></li><li class="interlanguage-link interwiki-it"><a href="https://it.wikipedia.org/wiki/Command_pattern" hreflang="it" lang="it" title="Command pattern – Italian">Italiano</a></li><li class="interlanguage-link interwiki-he"><a href="https://he.wikipedia.org/wiki/%D7%AA%D7%91%D7%A0%D7%99%D7%AA_Command" hreflang="he" lang="he" title="תבנית Command – Hebrew">עברית</a></li><li class="interlanguage-link interwiki-hu"><a href="https://hu.wikipedia.org/wiki/Parancs_programtervez%C3%A9si_minta" hreflang="hu" lang="hu" title="Parancs programtervezési minta – Hungarian">Magyar</a></li><li class="interlanguage-link interwiki-nl"><a href="https://nl.wikipedia.org/wiki/Commandopatroon" hreflang="nl" lang="nl" title="Commandopatroon – Dutch">Nederlands</a></li><li class="interlanguage-link interwiki-ja"><a href="https://ja.wikipedia.org/wiki/Command_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3" hreflang="ja" lang="ja" title="Command パターン – Japanese">日本語</a></li><li class="interlanguage-link interwiki-pl"><a href="https://pl.wikipedia.org/wiki/Polecenie_(wzorzec_projektowy)" hreflang="pl" lang="pl" title="Polecenie (wzorzec projektowy) – Polish">Polski</a></li><li class="interlanguage-link interwiki-pt"><a href="https://pt.wikipedia.org/wiki/Command" hreflang="pt" lang="pt" title="Command – Portuguese">Português</a></li><li class="interlanguage-link interwiki-ru"><a href="https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D0%B0_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)" hreflang="ru" lang="ru" title="Команда (шаблон проектирования) – Russian">Русский</a></li><li class="interlanguage-link interwiki-sv"><a href="https://sv.wikipedia.org/wiki/Kommando_(designm%C3%B6nster)" hreflang="sv" lang="sv" title="Kommando (designmönster) – Swedish">Svenska</a></li><li class="interlanguage-link interwiki-uk"><a href="https://uk.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D0%B0_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F)" hreflang="uk" lang="uk" title="Команда (шаблон проектування) – Ukrainian">Українська</a></li><li class="interlanguage-link interwiki-zh"><a href="https://zh.wikipedia.org/wiki/%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F" hreflang="zh" lang="zh" title="命令模式 – Chinese">中文</a></li><li class="uls-p-lang-dummy"><a href="#"></a></li> </ul>
<div class="after-portlet after-portlet-lang"><span class="wb-langlinks-edit wb-langlinks-link"><a class="wbc-editpage" href="https://www.wikidata.org/wiki/Q386776#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></span></div> </div>
</div>
</div>
</div>
<div id="footer" role="contentinfo">
<ul id="footer-info">
<li id="footer-info-lastmod"> This page was last modified on 17 August 2016, at 11:07.</li>
<li id="footer-info-copyright">Text is available under the <a href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License" rel="license">Creative Commons Attribution-ShareAlike License</a><a href="//creativecommons.org/licenses/by-sa/3.0/" rel="license" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
</ul>
<ul id="footer-places">
<li id="footer-places-privacy"><a class="extiw" href="https://wikimediafoundation.org/wiki/Privacy_policy" title="wmf:Privacy policy">Privacy policy</a></li>
<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
<li id="footer-places-mobileview"><a class="noprint stopMobileRedirectToggle" href="//en.m.wikipedia.org/w/index.php?title=Command_pattern&amp;mobileaction=toggle_view_mobile">Mobile view</a></li>
</ul>
<ul class="noprint" id="footer-icons">
<li id="footer-copyrightico">
<a href="https://wikimediafoundation.org/"><img alt="Wikimedia Foundation" height="31" src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88"/></a> </li>
<li id="footer-poweredbyico">
<a href="//www.mediawiki.org/"><img alt="Powered by MediaWiki" height="31" src="/static/images/poweredby_mediawiki_88x31.png" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88"/></a> </li>
</ul>
<div style="clear:both"></div>
</div>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.loader.load(["mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.gadget.featured-articles-links","mmv.bootstrap.autostart","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.centralNotice.geoIP","ext.centralNotice.startUp"]);});</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set( {
    "wgPageParseReport": {
        "limitreport": {
            "cputime": "0.155",
            "walltime": "0.206",
            "ppvisitednodes": {
                "value": 926,
                "limit": 1000000
            },
            "ppgeneratednodes": {
                "value": 0,
                "limit": 1500000
            },
            "postexpandincludesize": {
                "value": 36844,
                "limit": 2097152
            },
            "templateargumentsize": {
                "value": 1832,
                "limit": 2097152
            },
            "expansiondepth": {
                "value": 11,
                "limit": 40
            },
            "expensivefunctioncount": {
                "value": 1,
                "limit": 500
            },
            "entityaccesscount": {
                "value": 1,
                "limit": 400
            },
            "timingprofile": [
                "100.00%  130.413      1 -total",
                " 38.73%   50.510      1 Template:No_footnotes",
                " 27.85%   36.324      1 Template:Design_Patterns_Patterns",
                " 25.56%   33.338      2 Template:Navbox",
                " 24.40%   31.815      1 Template:Ambox",
                " 21.09%   27.508      1 Template:Commons_category",
                " 19.25%   25.103      2 Template:Sister_project",
                " 17.01%   22.181      2 Template:Side_box",
                " 16.97%   22.126      1 Template:Commons",
                " 13.15%   17.150      1 Template:Navbox_subgroup"
            ]
        },
        "scribunto": {
            "limitreport-timeusage": {
                "value": "0.029",
                "limit": "10.000"
            },
            "limitreport-memusage": {
                "value": 1319600,
                "limit": 52428800
            }
        },
        "cachereport": {
            "origin": "mw1213",
            "timestamp": "20160913215724",
            "ttl": 2592000,
            "transientcontent": false
        }
    }
} );});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":152,"wgHostname":"mw1267"});});</script>
</body>
</html>

