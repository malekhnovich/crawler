The following page is located at the url: http://en.wikipedia.org/wiki/Object-oriented_programming
<!DOCTYPE html>

<html class="client-nojs" dir="ltr" lang="en">
<head>
<meta charset="utf-8"/>
<title>Object-oriented programming - Wikipedia, the free encyclopedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Object-oriented_programming","wgTitle":"Object-oriented programming","wgCurRevisionId":742170496,"wgRevisionId":742170496,"wgArticleId":27471338,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["All articles with failed verification","Articles with failed verification from June 2016","All articles with unsourced statements","Articles with unsourced statements from June 2016","Articles with unsourced statements from February 2010","Articles needing additional references from August 2009","All articles needing additional references","Articles containing potentially dated statements from 2006","All articles containing potentially dated statements","Pages containing cite templates with deprecated parameters","Articles with DMOZ links","Use dmy dates from September 2010","Wikipedia articles with LCCN identifiers","Wikipedia articles with GND identifiers","Wikipedia articles with BNF identifiers","Object-oriented programming","Programming paradigms","Norwegian inventions"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Object-oriented_programming","wgRelevantArticleId":27471338,"wgRequestId":"V-B7uwpAMFgAAKQzrL4AAAAQ","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":false},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgWikibaseItemId":"Q79872","wgCentralAuthMobileDomain":false,"wgVisualEditorToolbarScrollOffset":0,"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user.cssprefs":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.cite.styles":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.tmh.thumbnail.styles":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.options",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","ext.centralauth.centralautologin","mmv.head","ext.visualEditor.desktopArticleTarget.init","ext.uls.interface","ext.quicksurveys.init","mw.MediaWikiPlayer.loader","mw.PopUpMediaTransform","skins.vector.js"]);});</script>
<link href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.cite.styles%7Cext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cextra-toolbar-buttons%2Cfeatured-articles-links%2CrefToolbar%2Cswitcher%2Cteahouse%2Cwatchlist-notice%7Cext.tmh.thumbnail.styles%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cext.wikimediaBadges%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector" rel="stylesheet"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta content="" name="ResourceLoaderDynamicStyles"/>
<link href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector" rel="stylesheet"/>
<meta content="MediaWiki 1.28.0-wmf.20" name="generator"/>
<meta content="origin-when-cross-origin" name="referrer"/>
<link href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Object-oriented_programming" rel="alternate"/>
<link href="/w/index.php?title=Object-oriented_programming&amp;action=edit" rel="alternate" title="Edit this page" type="application/x-wiki"/>
<link href="/w/index.php?title=Object-oriented_programming&amp;action=edit" rel="edit" title="Edit this page"/>
<link href="/static/apple-touch/wikipedia.png" rel="apple-touch-icon"/>
<link href="/static/favicon/wikipedia.ico" rel="shortcut icon"/>
<link href="/w/opensearch_desc.php" rel="search" title="Wikipedia (en)" type="application/opensearchdescription+xml"/>
<link href="//en.wikipedia.org/w/api.php?action=rsd" rel="EditURI" type="application/rsd+xml"/>
<link href="//creativecommons.org/licenses/by-sa/3.0/" rel="copyright"/>
<link href="https://en.wikipedia.org/wiki/Object-oriented_programming" rel="canonical"/>
<link href="//login.wikimedia.org" rel="dns-prefetch"/>
<link href="//meta.wikimedia.org" rel="dns-prefetch"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Object-oriented_programming rootpage-Object-oriented_programming skin-vector action-view feature-page-action-bar-v2"> <div class="noprint" id="mw-page-base"></div>
<div class="noprint" id="mw-head-base"></div>
<div class="mw-body" id="content" role="main">
<a id="top"></a>
<div id="siteNotice"><!-- CentralNotice --></div>
<div class="mw-indicators">
</div>
<h1 class="firstHeading" id="firstHeading" lang="en">Object-oriented programming</h1>
<div class="mw-body-content" id="bodyContent">
<div id="siteSub">From Wikipedia, the free encyclopedia</div>
<div id="contentSub"></div>
<div class="mw-jump" id="jump-to-nav">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
</div>
<div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="en"><div class="hatnote" role="note">"Object-oriented" redirects here. For other meanings of object-oriented, see <a class="mw-redirect mw-disambig" href="/wiki/Object-orientation_(disambiguation)" title="Object-orientation (disambiguation)">Object-orientation</a>.</div>
<div class="hatnote" role="note">"Object-oriented programming language" redirects here. For a list of object-oriented programming languages, see <a href="/wiki/List_of_object-oriented_programming_languages" title="List of object-oriented programming languages">List of object-oriented programming languages</a>.</div>
<table class="vertical-navbox nowraplinks" style="float:right;clear:right;width:22.0em;margin:0 0 1.0em 1.0em;background:#f9f9f9;border:1px solid #aaa;padding:0.2em;border-spacing:0.4em 0;text-align:center;line-height:1.4em;font-size:88%">
<tr>
<th style="padding:0.2em 0.4em 0.2em;font-size:145%;line-height:1.2em"><a href="/wiki/Programming_paradigm" title="Programming paradigm">Programming paradigms</a></th>
</tr>
<tr>
<td style="padding:0 0.1em 0.4em;text-align: left">
<ul>
<li><a href="/wiki/Action_language" title="Action language">Action</a></li>
<li><a href="/wiki/Agent-oriented_programming" title="Agent-oriented programming">Agent-oriented</a></li>
<li><a href="/wiki/Array_programming" title="Array programming">Array-oriented</a></li>
<li><a href="/wiki/Automata-based_programming" title="Automata-based programming">Automata-based</a></li>
<li><a href="/wiki/Concurrent_computing" title="Concurrent computing">Concurrent computing</a>
<ul>
<li><a href="/wiki/Relativistic_programming" title="Relativistic programming">Relativistic programming</a></li>
</ul>
</li>
<li><a href="/wiki/Data-driven_programming" title="Data-driven programming">Data-driven</a></li>
<li><a href="/wiki/Declarative_programming" title="Declarative programming">Declarative</a> (contrast: <a href="/wiki/Imperative_programming" title="Imperative programming">Imperative</a>)
<ul>
<li><a href="/wiki/Constraint_programming" title="Constraint programming">Constraint</a>
<ul>
<li><a href="/wiki/Constraint_logic_programming" title="Constraint logic programming">Constraint logic</a>
<ul>
<li><a href="/wiki/Concurrent_constraint_logic_programming" title="Concurrent constraint logic programming">Concurrent constraint logic</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="/wiki/Dataflow_programming" title="Dataflow programming">Dataflow</a>
<ul>
<li><a href="/wiki/Flow-based_programming" title="Flow-based programming">Flow-based</a></li>
<li>Cell-oriented (<a href="/wiki/Spreadsheet" title="Spreadsheet">spreadsheets</a>)</li>
<li><a href="/wiki/Reactive_programming" title="Reactive programming">Reactive</a></li>
</ul>
</li>
<li><a href="/wiki/Functional_programming" title="Functional programming">Functional</a>
<ul>
<li><a href="/wiki/Functional_logic_programming" title="Functional logic programming">Functional logic</a></li>
<li><a href="/wiki/Purely_functional_programming" title="Purely functional programming">Purely functional</a></li>
</ul>
</li>
<li><a href="/wiki/Logic_programming" title="Logic programming">Logic</a>
<ul>
<li><a href="/wiki/Abductive_logic_programming" title="Abductive logic programming">Abductive logic</a></li>
<li><a href="/wiki/Answer_set_programming" title="Answer set programming">Answer set</a></li>
<li><a href="/wiki/Concurrent_logic_programming" title="Concurrent logic programming">Concurrent logic</a></li>
<li><a href="/wiki/Functional_logic_programming" title="Functional logic programming">Functional logic</a></li>
<li><a href="/wiki/Inductive_logic_programming" title="Inductive logic programming">Inductive logic</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="/wiki/Dynamic_programming_language" title="Dynamic programming language">Dynamic</a></li>
<li><a href="/wiki/End-user_development" title="End-user development">End-user programming</a></li>
<li><a href="/wiki/Event-driven_programming" title="Event-driven programming">Event-driven</a>
<ul>
<li><a href="/wiki/Service-oriented_architecture" title="Service-oriented architecture">Service-oriented</a></li>
<li><a href="/wiki/Time-driven_programming" title="Time-driven programming">Time-driven</a></li>
</ul>
</li>
<li><a href="/wiki/Expression-oriented_programming_language" title="Expression-oriented programming language">Expression-oriented</a></li>
<li><a href="/wiki/Feature-oriented_programming" title="Feature-oriented programming">Feature-oriented</a></li>
<li><a href="/wiki/Function-level_programming" title="Function-level programming">Function-level</a> (contrast: <a href="/wiki/Value-level_programming" title="Value-level programming">Value-level</a>)</li>
<li><a href="/wiki/Generic_programming" title="Generic programming">Generic</a></li>
<li><a href="/wiki/Imperative_programming" title="Imperative programming">Imperative</a> (contrast: <a href="/wiki/Declarative_programming" title="Declarative programming">Declarative</a>)
<ul>
<li><a href="/wiki/Literate_programming" title="Literate programming">Literate</a></li>
<li><a href="/wiki/Procedural_programming" title="Procedural programming">Procedural</a></li>
</ul>
</li>
<li><a href="/wiki/Inductive_programming" title="Inductive programming">Inductive programming</a></li>
<li><a href="/wiki/Language-oriented_programming" title="Language-oriented programming">Language-oriented</a>
<ul>
<li><a href="/wiki/Natural_language_programming" title="Natural language programming">Natural language programming</a></li>
<li><a href="/wiki/Service-oriented_modeling#Discipline-specific_modeling" title="Service-oriented modeling">Discipline-specific</a></li>
<li><a href="/wiki/Domain-specific_language" title="Domain-specific language">Domain-specific</a></li>
<li><a href="/wiki/Grammar-oriented_programming" title="Grammar-oriented programming">Grammar-oriented</a>
<ul>
<li><a href="/wiki/Dialect_(computing)" title="Dialect (computing)">Dialecting</a></li>
</ul>
</li>
<li><a href="/wiki/Intentional_programming" title="Intentional programming">Intentional</a></li>
</ul>
</li>
<li><a href="/wiki/Metaprogramming" title="Metaprogramming">Metaprogramming</a>
<ul>
<li><a href="/wiki/Automatic_programming" title="Automatic programming">Automatic</a></li>
<li><a href="/wiki/Reflection_(computer_programming)" title="Reflection (computer programming)">Reflective</a>
<ul>
<li><a href="/wiki/Attribute-oriented_programming" title="Attribute-oriented programming">Attribute-oriented</a></li>
</ul>
</li>
<li><a href="/wiki/Homoiconicity" title="Homoiconicity">Homoiconic</a></li>
<li><a href="/wiki/Template_metaprogramming" title="Template metaprogramming">Template</a>
<ul>
<li><a href="/wiki/Policy-based_design" title="Policy-based design">Policy-based</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="/wiki/Non-structured_programming" title="Non-structured programming">Non-structured</a> (contrast: <a href="/wiki/Structured_programming" title="Structured programming">Structured</a>)
<ul>
<li><a href="/wiki/Array_programming" title="Array programming">Array</a></li>
</ul>
</li>
<li><a href="/wiki/Nondeterministic_programming" title="Nondeterministic programming">Nondeterministic</a></li>
<li><a href="/wiki/Parallel_computing" title="Parallel computing">Parallel computing</a>
<ul>
<li><a href="/wiki/Process-oriented_programming" title="Process-oriented programming">Process-oriented</a></li>
</ul>
</li>
<li><a href="/wiki/Tacit_programming" title="Tacit programming">Point-free style</a>
<ul>
<li><a href="/wiki/Concatenative_programming_language" title="Concatenative programming language">Concatenative</a></li>
</ul>
</li>
<li><a href="/wiki/Semantic-oriented_programming" title="Semantic-oriented programming">Semantic</a></li>
<li><a href="/wiki/Structured_programming" title="Structured programming">Structured</a> (contrast: <a href="/wiki/Non-structured_programming" title="Non-structured programming">Non-structured</a>)
<ul>
<li><a href="/wiki/Block_(programming)" title="Block (programming)">Block-structured</a></li>
<li><a href="/wiki/Modular_programming" title="Modular programming">Modular</a> (contrast: <a href="/wiki/Monolithic_application" title="Monolithic application">Monolithic</a>)</li>
<li><strong class="selflink">Object-oriented</strong>
<ul>
<li><a href="/wiki/Actor_model" title="Actor model">Actor-based</a></li>
<li><a href="/wiki/Class-based_programming" title="Class-based programming">Class-based</a></li>
<li><a href="/wiki/Concurrent_object-oriented_programming" title="Concurrent object-oriented programming">Concurrent</a></li>
<li><a href="/wiki/Prototype-based_programming" title="Prototype-based programming">Prototype-based</a></li>
<li>By <a href="/wiki/Separation_of_concerns" title="Separation of concerns">separation of concerns</a>:
<ul>
<li><a href="/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">Aspect-oriented</a></li>
<li><a href="/wiki/Role-oriented_programming" title="Role-oriented programming">Role-oriented</a></li>
<li><a href="/wiki/Subject-oriented_programming" title="Subject-oriented programming">Subject-oriented</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="/wiki/Recursion_(computer_science)" title="Recursion (computer science)">Recursive</a></li>
</ul>
</li>
<li><a href="/wiki/Value-level_programming" title="Value-level programming">Value-level</a> (contrast: <a href="/wiki/Function-level_programming" title="Function-level programming">Function-level</a>)</li>
<li><a href="/wiki/Probabilistic_programming_language" title="Probabilistic programming language">Probabilistic</a></li>
<li><a href="/wiki/Concept_programming" title="Concept programming">Concept</a></li>
</ul>
</td>
</tr>
<tr>
<td style="text-align:right;font-size:115%">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="/wiki/Template:Programming_paradigms" title="Template:Programming paradigms"><abbr title="View this template">v</abbr></a></li>
<li class="nv-talk"><a href="/wiki/Template_talk:Programming_paradigms" title="Template talk:Programming paradigms"><abbr title="Discuss this template">t</abbr></a></li>
<li class="nv-edit"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Template:Programming_paradigms&amp;action=edit"><abbr title="Edit this template">e</abbr></a></li>
</ul>
</div>
</td>
</tr>
</table>
<p><b>Object-oriented programming</b> (<b>OOP</b>) is a <a href="/wiki/Programming_paradigm" title="Programming paradigm">programming paradigm</a> based on the concept of "<a href="/wiki/Object_(computer_science)" title="Object (computer science)">objects</a>", which may contain <a href="/wiki/Data" title="Data">data</a>, in the form of <a href="/wiki/Field_(computer_science)" title="Field (computer science)">fields</a>, often known as <i>attributes;</i> and code, in the form of procedures, often known as <i><a class="mw-redirect" href="/wiki/Method_(computer_science)" title="Method (computer science)">methods</a>.</i> A feature of objects is that an object's procedures can access and often modify the data fields of the object with which they are associated (objects have a notion of "<a href="/wiki/This_(computer_programming)" title="This (computer programming)">this</a>" or "self"). In OOP, computer programs are designed by making them out of objects that interact with one another.<sup class="reference" id="cite_ref-1"><a href="#cite_note-1">[1]</a></sup><sup class="reference" id="cite_ref-2"><a href="#cite_note-2">[2]</a></sup> There is significant diversity of OOP languages, but the most popular ones are <a href="/wiki/Class-based_programming" title="Class-based programming">class-based</a>, meaning that objects are <a href="/wiki/Instance_(computer_science)" title="Instance (computer science)">instances</a> of <a class="mw-redirect" href="/wiki/Class_(computer_science)" title="Class (computer science)">classes</a>, which typically also determine their <a href="/wiki/Data_type" title="Data type">type</a>.</p>
<p>Many of the most widely used programming languages are <a class="mw-redirect" href="/wiki/Multi-paradigm_programming_language" title="Multi-paradigm programming language">multi-paradigm programming languages</a> that support object-oriented programming to a greater or lesser degree, typically in combination with <a href="/wiki/Imperative_programming" title="Imperative programming">imperative</a>, <a href="/wiki/Procedural_programming" title="Procedural programming">procedural programming</a>. Significant object-oriented languages include <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/C%2B%2B" title="C++">C++</a>, <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>, <a href="/wiki/PHP" title="PHP">PHP</a>, <a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a>, <a href="/wiki/Perl" title="Perl">Perl</a>, <a href="/wiki/Delphi_(programming_language)" title="Delphi (programming language)">Delphi</a>, <a href="/wiki/Objective-C" title="Objective-C">Objective-C</a>, <a href="/wiki/Swift_(programming_language)" title="Swift (programming language)">Swift</a>, <a href="/wiki/Lisp_(programming_language)" title="Lisp (programming language)">Common Lisp</a>, and <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a>.</p>
<p></p>
<div class="toc" id="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Features"><span class="tocnumber">1</span> <span class="toctext">Features</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Shared_with_non-OOP_predecessor_languages"><span class="tocnumber">1.1</span> <span class="toctext">Shared with non-OOP predecessor languages</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="#Objects_and_classes"><span class="tocnumber">1.2</span> <span class="toctext">Objects and classes</span></a></li>
<li class="toclevel-2 tocsection-4"><a href="#Dynamic_dispatch.2Fmessage_passing"><span class="tocnumber">1.3</span> <span class="toctext">Dynamic dispatch/message passing</span></a></li>
<li class="toclevel-2 tocsection-5"><a href="#Encapsulation"><span class="tocnumber">1.4</span> <span class="toctext">Encapsulation</span></a></li>
<li class="toclevel-2 tocsection-6"><a href="#Composition.2C_inheritance.2C_and_delegation"><span class="tocnumber">1.5</span> <span class="toctext">Composition, inheritance, and delegation</span></a></li>
<li class="toclevel-2 tocsection-7"><a href="#Polymorphism"><span class="tocnumber">1.6</span> <span class="toctext">Polymorphism</span></a></li>
<li class="toclevel-2 tocsection-8"><a href="#Open_recursion"><span class="tocnumber">1.7</span> <span class="toctext">Open recursion</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-9"><a href="#History"><span class="tocnumber">2</span> <span class="toctext">History</span></a></li>
<li class="toclevel-1 tocsection-10"><a href="#OOP_languages"><span class="tocnumber">3</span> <span class="toctext">OOP languages</span></a>
<ul>
<li class="toclevel-2 tocsection-11"><a href="#OOP_in_dynamic_languages"><span class="tocnumber">3.1</span> <span class="toctext">OOP in dynamic languages</span></a></li>
<li class="toclevel-2 tocsection-12"><a href="#OOP_in_a_network_protocol"><span class="tocnumber">3.2</span> <span class="toctext">OOP in a network protocol</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-13"><a href="#Design_patterns"><span class="tocnumber">4</span> <span class="toctext">Design patterns</span></a>
<ul>
<li class="toclevel-2 tocsection-14"><a href="#Inheritance_and_behavioral_subtyping"><span class="tocnumber">4.1</span> <span class="toctext">Inheritance and behavioral subtyping</span></a></li>
<li class="toclevel-2 tocsection-15"><a href="#Gang_of_Four_design_patterns"><span class="tocnumber">4.2</span> <span class="toctext">Gang of Four design patterns</span></a></li>
<li class="toclevel-2 tocsection-16"><a href="#Object-orientation_and_databases"><span class="tocnumber">4.3</span> <span class="toctext">Object-orientation and databases</span></a></li>
<li class="toclevel-2 tocsection-17"><a href="#Real-world_modeling_and_relationships"><span class="tocnumber">4.4</span> <span class="toctext">Real-world modeling and relationships</span></a></li>
<li class="toclevel-2 tocsection-18"><a href="#OOP_and_control_flow"><span class="tocnumber">4.5</span> <span class="toctext">OOP and control flow</span></a></li>
<li class="toclevel-2 tocsection-19"><a href="#Responsibility-_vs._data-driven_design"><span class="tocnumber">4.6</span> <span class="toctext">Responsibility- vs. data-driven design</span></a></li>
<li class="toclevel-2 tocsection-20"><a href="#SOLID_and_GRASP_guidelines"><span class="tocnumber">4.7</span> <span class="toctext">SOLID and GRASP guidelines</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-21"><a href="#Criticism"><span class="tocnumber">5</span> <span class="toctext">Criticism</span></a></li>
<li class="toclevel-1 tocsection-22"><a href="#Formal_semantics"><span class="tocnumber">6</span> <span class="toctext">Formal semantics</span></a></li>
<li class="toclevel-1 tocsection-23"><a href="#See_also"><span class="tocnumber">7</span> <span class="toctext">See also</span></a>
<ul>
<li class="toclevel-2 tocsection-24"><a href="#Systems"><span class="tocnumber">7.1</span> <span class="toctext">Systems</span></a></li>
<li class="toclevel-2 tocsection-25"><a href="#Modeling_languages"><span class="tocnumber">7.2</span> <span class="toctext">Modeling languages</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-26"><a href="#References"><span class="tocnumber">8</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-27"><a href="#Further_reading"><span class="tocnumber">9</span> <span class="toctext">Further reading</span></a></li>
<li class="toclevel-1 tocsection-28"><a href="#External_links"><span class="tocnumber">10</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Features">Features</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=1" title="Edit section: Features">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Object-oriented Programming uses objects, but not all of the associated techniques and structures are supported directly in languages that claim to support OOP. The features listed below are, however, common among languages considered strongly class- and object-oriented (or <a class="mw-redirect" href="/wiki/Multi-paradigm" title="Multi-paradigm">multi-paradigm</a> with OOP support), with notable exceptions mentioned.<sup class="reference" id="cite_ref-ArmstrongQuarks_3-0"><a href="#cite_note-ArmstrongQuarks-3">[3]</a></sup><sup class="reference" id="cite_ref-4"><a href="#cite_note-4">[4]</a></sup><sup class="reference" id="cite_ref-5"><a href="#cite_note-5">[5]</a></sup><sup class="reference" id="cite_ref-pierce_6-0"><a href="#cite_note-pierce-6">[6]</a></sup></p>
<div class="hatnote" role="note">See also: <a href="/wiki/Comparison_of_programming_languages_(object-oriented_programming)" title="Comparison of programming languages (object-oriented programming)">Comparison of programming languages (object-oriented programming)</a> and <a class="mw-redirect" href="/wiki/List_of_object-oriented_programming_terms" title="List of object-oriented programming terms">List of object-oriented programming terms</a></div>
<h3><span class="mw-headline" id="Shared_with_non-OOP_predecessor_languages">Shared with non-OOP predecessor languages</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=2" title="Edit section: Shared with non-OOP predecessor languages">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Object-oriented programming languages typically share low-level features with high-level <a href="/wiki/Procedural_programming" title="Procedural programming">procedural programming</a> languages (which were invented first). The fundamental tools that can be used to construct a program include:</p>
<ul>
<li><a href="/wiki/Variable_(computer_science)" title="Variable (computer science)">Variables</a> that can store information formatted in a small number of built-in <a href="/wiki/Data_type" title="Data type">data types</a> like <a href="/wiki/Integer_(computer_science)" title="Integer (computer science)">integers</a> and alphanumeric <a href="/wiki/Character_(computing)" title="Character (computing)">characters</a>. This may include <a class="mw-redirect" href="/wiki/Data_structures" title="Data structures">data structures</a> like <a href="/wiki/String_(computer_science)" title="String (computer science)">strings</a>, <a href="/wiki/List_(abstract_data_type)" title="List (abstract data type)">lists</a>, and <a href="/wiki/Hash_table" title="Hash table">hash tables</a> that are either built-in or result from combining variables using <a href="/wiki/Pointer_(computer_programming)" title="Pointer (computer programming)">memory pointers</a></li>
<li>Procedures – also known as functions, methods, routines, or <a href="/wiki/Subroutine" title="Subroutine">subroutines</a> – that take input, generate output, and manipulate data. Modern languages include <a href="/wiki/Structured_programming" title="Structured programming">structured programming</a> constructs like <a class="mw-redirect" href="/wiki/Loop_(computing)" title="Loop (computing)">loops</a> and <a href="/wiki/Conditional_(computer_programming)" title="Conditional (computer programming)">conditionals</a>.</li>
</ul>
<p><a href="/wiki/Modular_programming" title="Modular programming">Modular programming</a> support provides the ability to group procedures into files and modules for organizational purposes. Modules are <a href="/wiki/Namespace" title="Namespace">namespaced</a> so code in one module will not be accidentally confused with the same procedure or variable name in another file or module.</p>
<h3><span class="mw-headline" id="Objects_and_classes">Objects and classes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=3" title="Edit section: Objects and classes">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Languages that support object-oriented programming typically use <a href="/wiki/Inheritance_(object-oriented_programming)" title="Inheritance (object-oriented programming)">inheritance</a> for code reuse and extensibility in the form of either <a href="/wiki/Class-based_programming" title="Class-based programming">classes</a> or <a href="/wiki/Prototype-based_programming" title="Prototype-based programming">prototypes</a>. Those that use classes support two main concepts:</p>
<ul>
<li><a class="mw-redirect" href="/wiki/Class_(computer_science)" title="Class (computer science)">Classes</a> – the definitions for the data format and available procedures for a given type or class of object; may also contain data and procedures (known as class methods) themselves, i.e. classes contains the data members and member functions</li>
<li><a href="/wiki/Object_(computer_science)" title="Object (computer science)">Objects</a> – instances of classes</li>
</ul>
<p>Objects sometimes correspond to things found in the real world. For example, a graphics program may have objects such as "circle", "square", "menu". An online shopping system might have objects such as "shopping cart", "customer", and "product".<sup class="reference" id="cite_ref-7"><a href="#cite_note-7">[7]</a></sup> Sometimes objects represent more abstract entities, like an object that represents an open file, or an object that provides the service of translating measurements from U.S. customary to metric.</p>
<p>Each object is said to be an <a href="/wiki/Instance_(computer_science)" title="Instance (computer science)">instance</a> of a particular class (for example, an object with its name field set to "Mary" might be an instance of class Employee). Procedures in object-oriented programming are known as <a class="mw-redirect" href="/wiki/Method_(computer_science)" title="Method (computer science)">methods</a>; variables are also known as <a href="/wiki/Field_(computer_science)" title="Field (computer science)">fields</a>, members, attributes, or properties. This leads to the following terms:</p>
<ul>
<li><a href="/wiki/Class_variable" title="Class variable">Class variables</a> – belong to the <i>class as a whole</i>; there is only one copy of each one</li>
<li><a href="/wiki/Instance_variable" title="Instance variable">Instance variables</a> or attributes – data that belongs to individual <i>objects</i>; every object has its own copy of each one</li>
<li><a href="/wiki/Member_variable" title="Member variable">Member variables</a> – refers to both the class and instance variables that are defined by a particular class</li>
<li>Class methods – belong to the <i>class as a whole</i> and have access only to class variables and inputs from the procedure call</li>
<li>Instance methods – belong to <i>individual objects</i>, and have access to instance variables for the specific object they are called on, inputs, and class variables</li>
</ul>
<p>Objects are accessed somewhat like variables with complex internal structure, and in many languages are effectively <a href="/wiki/Pointer_(computer_programming)" title="Pointer (computer programming)">pointers</a>, serving as actual references to a single instance of said object in memory within a heap or stack. They provide a layer of <a class="mw-redirect" href="/wiki/Abstraction_(computer_science)" title="Abstraction (computer science)">abstraction</a> which can be used to separate internal from external code. External code can use an object by calling a specific instance method with a certain set of input parameters, read an instance variable, or write to an instance variable. Objects are created by calling a special type of method in the class known as a <a href="/wiki/Constructor_(object-oriented_programming)" title="Constructor (object-oriented programming)">constructor</a>. A program may create many instances of the same class as it runs, which operate independently. This is an easy way for the same procedures to be used on different sets of data.</p>
<p>Object-oriented programming that uses classes is sometimes called <a href="/wiki/Class-based_programming" title="Class-based programming">class-based programming</a>, while <a href="/wiki/Prototype-based_programming" title="Prototype-based programming">prototype-based programming</a> does not typically use classes. As a result, a significantly different yet analogous terminology is used to define the concepts of <i>object</i> and <i>instance</i>.</p>
<p>In some languages classes and objects can be composed using other concepts like <a href="/wiki/Trait_(computer_programming)" title="Trait (computer programming)">traits</a> and <a href="/wiki/Mixin" title="Mixin">mixins</a>.</p>
<h3><span class="mw-headline" id="Dynamic_dispatch.2Fmessage_passing">Dynamic dispatch/message passing</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=4" title="Edit section: Dynamic dispatch/message passing">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>It is the responsibility of the object, not any external code, to select the procedural code to execute in response to a method call, typically by looking up the method at run time in a table associated with the object. This feature is known as <a href="/wiki/Dynamic_dispatch" title="Dynamic dispatch">dynamic dispatch</a>, and distinguishes an object from an <a href="/wiki/Abstract_data_type" title="Abstract data type">abstract data type</a> (or module), which has a fixed (static) implementation of the operations for all instances. If there are multiple methods that might be run for a given name, it is known as <a href="/wiki/Multiple_dispatch" title="Multiple dispatch">multiple dispatch</a>.</p>
<p>A method call is also known as <i>message passing</i>. It is conceptualized as a message (the name of the method and its input parameters) being passed to the object for dispatch.</p>
<h3><span class="mw-headline" id="Encapsulation">Encapsulation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=5" title="Edit section: Encapsulation">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>If a class does not allow calling code from accessing internal object data and forces access through methods only, this is a strong form of abstraction or information hiding known as <a class="mw-redirect" href="/wiki/Encapsulation_(object-oriented_programming)" title="Encapsulation (object-oriented programming)">encapsulation</a>. Some languages (Java, for example) let classes enforce access restrictions explicitly, for example denoting internal data with the <code>private</code> keyword and designating methods intended for use by code outside the class with the <code>public</code> keyword. Methods may also be designed public, private, or intermediate levels such as <code>protected</code> (which allows access from the same class and its subclasses, but not objects of a different class). In other languages (like Python) this is enforced only by convention (for example, <code>private</code> methods may have names that start with an <a href="/wiki/Underscore" title="Underscore">underscore</a>). Encapsulation prevents external code from being concerned with the internal workings of an object. This facilitates <a href="/wiki/Code_refactoring" title="Code refactoring">code refactoring</a>, for example allowing the author of the class to change how objects of that class represent their data internally without changing any external code (as long as "public" method calls work the same way). It also encourages programmers to put all the code that is concerned with a certain set of data in the same class, which organizes it for easy comprehension by other programmers. Encapsulation is a technique that encourages <a href="/wiki/Coupling_(computer_programming)" title="Coupling (computer programming)">decoupling</a>.</p>
<h3><span class="mw-headline" id="Composition.2C_inheritance.2C_and_delegation">Composition, inheritance, and delegation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=6" title="Edit section: Composition, inheritance, and delegation">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Objects can contain other objects in their instance variables; this is known as <a href="/wiki/Object_composition" title="Object composition">object composition</a>. For example, an object in the Employee class might contain (point to) an object in the Address class, in addition to its own instance variables like "first_name" and "position". Object composition is used to represent "has-a" relationships: every employee has an address, so every Employee object has a place to store an Address object.</p>
<p>Languages that support classes almost always support <a href="/wiki/Inheritance_(object-oriented_programming)" title="Inheritance (object-oriented programming)">inheritance</a>. This allows classes to be arranged in a hierarchy that represents "is-a-type-of" relationships. For example, class Employee might inherit from class Person. All the data and methods available to the parent class also appear in the child class with the same names. For example, class Person might define variables "first_name" and "last_name" with method "make_full_name()". These will also be available in class Employee, which might add the variables "position" and "salary". This technique allows easy re-use of the same procedures and data definitions, in addition to potentially mirroring real-world relationships in an intuitive way. Rather than utilizing database tables and programming subroutines, the developer utilizes objects the user may be more familiar with: objects from their application domain.<sup class="reference" id="cite_ref-8"><a href="#cite_note-8">[8]</a></sup></p>
<p>Subclasses can override the methods defined by superclasses. <a href="/wiki/Multiple_inheritance" title="Multiple inheritance">Multiple inheritance</a> is allowed in some languages, though this can make resolving overrides complicated. Some languages have special support for <a href="/wiki/Mixin" title="Mixin">mixins</a>, though in any language with multiple inheritance, a mixin is simply a class that does not represent an is-a-type-of relationship. Mixins are typically used to add the same methods to multiple classes. For example, class UnicodeConversionMixin might provide a method unicode_to_ascii() when included in class FileReader and class WebPageScraper, which don't share a common parent.</p>
<p><a class="mw-redirect" href="/wiki/Abstract_class" title="Abstract class">Abstract classes</a> cannot be instantiated into objects; they exist only for the purpose of inheritance into other "concrete" classes which can be instantiated. In Java, the <code><a href="/wiki/Final_(Java)" title="Final (Java)">final</a></code> keyword can be used to prevent a class from being subclassed.</p>
<p>The doctrine of <a href="/wiki/Composition_over_inheritance" title="Composition over inheritance">composition over inheritance</a> advocates implementing has-a relationships using composition instead of inheritance. For example, instead of inheriting from class Person, class Employee could give each Employee object an internal Person object, which it then has the opportunity to hide from external code even if class Person has many public attributes or methods. Some languages, like <a href="/wiki/Go_(programming_language)" title="Go (programming language)">Go</a> do not support inheritance at all.</p>
<p>The "<a href="/wiki/Open/closed_principle" title="Open/closed principle">open/closed principle</a>" advocates that classes and functions "should be open for extension, but closed for modification".</p>
<p><a class="mw-redirect" href="/wiki/Delegation_(programming)" title="Delegation (programming)">Delegation</a> is another language feature that can be used as an alternative to inheritance.</p>
<h3><span class="mw-headline" id="Polymorphism">Polymorphism</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=7" title="Edit section: Polymorphism">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><a href="/wiki/Subtyping" title="Subtyping">Subtyping</a>, a form of <a href="/wiki/Polymorphism_(computer_science)" title="Polymorphism (computer science)">polymorphism</a>, is when calling code can be agnostic as to whether an object belongs to a parent class or one of its descendants. For example, a function might call "make_full_name()" on an object, which will work whether the object is of class Person or class Employee. This is another type of abstraction which simplifies code external to the class hierarchy and enables strong <a href="/wiki/Separation_of_concerns" title="Separation of concerns">separation of concerns</a>.</p>
<h3><span class="mw-headline" id="Open_recursion">Open recursion</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=8" title="Edit section: Open recursion">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In languages that support <a class="mw-redirect" href="/wiki/Open_recursion" title="Open recursion">open recursion</a>, object methods can call other methods on the same object (including themselves), typically using a special variable or keyword called <code>this</code> or <code>self</code>. This variable is <i><a href="/wiki/Name_binding" title="Name binding">late-bound</a></i>; it allows a method defined in one class to invoke another method that is defined later, in some subclass thereof.</p>
<h2><span class="mw-headline" id="History">History</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=9" title="Edit section: History">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Terminology invoking "objects" and "oriented" in the modern sense of object-oriented programming made its first appearance at <a class="mw-redirect" href="/wiki/MIT" title="MIT">MIT</a> in the late 1950s and early 1960s. In the environment of the <a href="/wiki/Artificial_intelligence" title="Artificial intelligence">artificial intelligence</a> group, as early as 1960, "object" could refer to identified items (<a class="mw-redirect" href="/wiki/LISP" title="LISP">LISP</a> atoms) with properties (attributes);<sup class="reference" id="cite_ref-9"><a href="#cite_note-9">[9]</a></sup><sup class="reference" id="cite_ref-10"><a href="#cite_note-10">[10]</a></sup> <a href="/wiki/Alan_Kay" title="Alan Kay">Alan Kay</a> was later to cite a detailed understanding of LISP internals as a strong influence on his thinking in 1966.<sup class="reference" id="cite_ref-alanKayOnOO_11-0"><a href="#cite_note-alanKayOnOO-11">[11]</a></sup> Another early MIT example was <a href="/wiki/Sketchpad" title="Sketchpad">Sketchpad</a> created by <a href="/wiki/Ivan_Sutherland" title="Ivan Sutherland">Ivan Sutherland</a> in 1960–61; in the glossary of the 1963 technical report based on his dissertation about Sketchpad, Sutherland defined notions of "object" and "instance" (with the class concept covered by "master" or "definition"), albeit specialized to graphical interaction.<sup class="reference" id="cite_ref-12"><a href="#cite_note-12">[12]</a></sup> Also, an MIT <a href="/wiki/ALGOL" title="ALGOL">ALGOL</a> version, AED-0, established a direct link between data structures ("plexes", in that dialect) and procedures, prefiguring what were later termed "messages", "methods", and "member functions".<sup class="reference" id="cite_ref-simuladev_13-0"><a href="#cite_note-simuladev-13">[13]</a></sup><sup class="reference" id="cite_ref-14"><a href="#cite_note-14">[14]</a></sup></p>
<p>The formal programming concept of objects was introduced in the mid-1960s with <a href="/wiki/Simula" title="Simula">Simula</a> 67, a major revision of Simula I, a programming language designed for <a href="/wiki/Discrete_event_simulation" title="Discrete event simulation">discrete event simulation</a>, created by <a href="/wiki/Ole-Johan_Dahl" title="Ole-Johan Dahl">Ole-Johan Dahl</a> and <a href="/wiki/Kristen_Nygaard" title="Kristen Nygaard">Kristen Nygaard</a> of the <a href="/wiki/Norwegian_Computing_Center" title="Norwegian Computing Center">Norwegian Computing Center</a> in <a href="/wiki/Oslo" title="Oslo">Oslo</a>.<sup class="reference" id="cite_ref-15"><a href="#cite_note-15">[15]</a></sup><sup class="noprint Inline-Template" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability"><span title="The material near this tag failed verification of its source citation(s). (June 2016)">not in citation given</span></a></i>]</sup><sup class="noprint Inline-Template Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (June 2016)">citation needed</span></a></i>]</sup> <sup class="reference" id="cite_ref-16"><a href="#cite_note-16">[16]</a></sup><sup class="noprint Inline-Template" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability"><span title="The material near this tag failed verification of its source citation(s). (June 2016)">not in citation given</span></a></i>]</sup><sup class="noprint Inline-Template Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (June 2016)">citation needed</span></a></i>]</sup> <sup class="reference" id="cite_ref-17"><a href="#cite_note-17">[17]</a></sup> <sup class="reference" id="cite_ref-18"><a href="#cite_note-18">[18]</a></sup> <sup class="reference" id="cite_ref-19"><a href="#cite_note-19">[19]</a></sup></p>
<p>Simula 67 was influenced by <a href="/wiki/SIMSCRIPT" title="SIMSCRIPT">SIMSCRIPT</a> and <a href="/wiki/Tony_Hoare" title="Tony Hoare">C.A.R. "Tony" Hoare's</a> proposed "record classes".<sup class="reference" id="cite_ref-simuladev_13-1"><a href="#cite_note-simuladev-13">[13]</a></sup><sup class="reference" id="cite_ref-20"><a href="#cite_note-20">[20]</a></sup> Simula introduced the notion of classes and instances or objects (as well as subclasses, virtual procedures, coroutines, and discrete event simulation) as part of an explicit programming paradigm. The language also used automatic <a href="/wiki/Garbage_collection_(computer_science)" title="Garbage collection (computer science)">garbage collection</a> that had been invented earlier for the <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a> language <a href="/wiki/Lisp_(programming_language)" title="Lisp (programming language)">Lisp</a>. Simula was used for physical modeling, such as models to study and improve the movement of ships and their content through cargo ports. The ideas of Simula 67 influenced many later languages, including Smalltalk, derivatives of LISP (<a class="mw-redirect" href="/wiki/CLOS" title="CLOS">CLOS</a>), <a href="/wiki/Object_Pascal" title="Object Pascal">Object Pascal</a>, and <a href="/wiki/C%2B%2B" title="C++">C++</a>.</p>
<p>The <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a> language, which was developed at <a class="mw-redirect" href="/wiki/Xerox_PARC" title="Xerox PARC">Xerox PARC</a> (by <a href="/wiki/Alan_Kay" title="Alan Kay">Alan Kay</a> and others) in the 1970s, introduced the term <i>object-oriented programming</i> to represent the pervasive use of objects and messages as the basis for computation. Smalltalk creators were influenced by the ideas introduced in Simula 67, but Smalltalk was designed to be a fully dynamic system in which classes could be created and modified dynamically rather than statically as in Simula 67.<sup class="reference" id="cite_ref-st_21-0"><a href="#cite_note-st-21">[21]</a></sup> Smalltalk and with it OOP were introduced to a wider audience by the August 1981 issue of <i><a href="/wiki/Byte_(magazine)" title="Byte (magazine)">Byte Magazine</a></i>.</p>
<p>In the 1970s, Kay's Smalltalk work had influenced the <a href="/wiki/Lisp_(programming_language)#Language_innovations" title="Lisp (programming language)">Lisp community</a> to incorporate <a href="/wiki/Lisp_(programming_language)#Object_systems" title="Lisp (programming language)">object-based techniques</a> that were introduced to developers via the <a href="/wiki/Lisp_machine" title="Lisp machine">Lisp machine</a>. Experimentation with various extensions to Lisp (such as LOOPS and <a href="/wiki/Flavors_(programming_language)" title="Flavors (programming language)">Flavors</a> introducing <a href="/wiki/Multiple_inheritance" title="Multiple inheritance">multiple inheritance</a> and <a class="mw-redirect" href="/wiki/Mixins" title="Mixins">mixins</a>) eventually led to the <a href="/wiki/Common_Lisp_Object_System" title="Common Lisp Object System">Common Lisp Object System</a>, which integrates functional programming and object-oriented programming and allows extension via a <a class="mw-redirect" href="/wiki/Meta-object_protocol" title="Meta-object protocol">Meta-object protocol</a>. In the 1980s, there were a few attempts to design processor architectures that included hardware support for objects in memory but these were not successful. Examples include the <a href="/wiki/Intel_iAPX_432" title="Intel iAPX 432">Intel iAPX 432</a> and the <a href="/wiki/Linn_Products" title="Linn Products">Linn Smart</a> <a href="/wiki/Rekursiv" title="Rekursiv">Rekursiv</a>.</p>
<p>In 1985, <a href="/wiki/Bertrand_Meyer" title="Bertrand Meyer">Bertrand Meyer</a> produced the first design of the <a href="/wiki/Eiffel_(programming_language)" title="Eiffel (programming language)">Eiffel language</a>. Focused on software quality, Eiffel is among the purely object-oriented languages, but differs in the sense that the language itself is not only a programming language, but a notation supporting the entire software lifecycle. Meyer described the Eiffel software development method, based on a small number of key ideas from software engineering and computer science, in <a href="/wiki/Object-Oriented_Software_Construction" title="Object-Oriented Software Construction">Object-Oriented Software Construction</a>. Essential to the quality focus of Eiffel is Meyer's reliability mechanism, <a class="mw-redirect" href="/wiki/Design_by_Contract" title="Design by Contract">Design by Contract</a>, which is an integral part of both the method and language.</p>
<p>Object-oriented programming developed as the dominant programming methodology in the early and mid 1990s when programming languages supporting the techniques became widely available. These included Visual <a href="/wiki/FoxPro" title="FoxPro">FoxPro</a> 3.0,<sup class="reference" id="cite_ref-22"><a href="#cite_note-22">[22]</a></sup><sup class="reference" id="cite_ref-23"><a href="#cite_note-23">[23]</a></sup><sup class="reference" id="cite_ref-24"><a href="#cite_note-24">[24]</a></sup> <a href="/wiki/C%2B%2B" title="C++">C++</a>,<sup class="reference" id="cite_ref-25"><a href="#cite_note-25">[25]</a></sup> and <a class="mw-redirect" href="/wiki/Embarcadero_Delphi" title="Embarcadero Delphi">Delphi</a><sup class="noprint Inline-Template Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (February 2010)">citation needed</span></a></i>]</sup>. Its dominance was further enhanced by the rising popularity of <a href="/wiki/Graphical_user_interface" title="Graphical user interface">graphical user interfaces</a>, which rely heavily upon object-oriented programming techniques. An example of a closely related dynamic GUI library and OOP language can be found in the <a class="mw-redirect" href="/wiki/Cocoa_(software)" title="Cocoa (software)">Cocoa</a> frameworks on <a class="mw-redirect" href="/wiki/Mac_OS_X" title="Mac OS X">Mac OS X</a>, written in <a href="/wiki/Objective-C" title="Objective-C">Objective-C</a>, an object-oriented, dynamic messaging extension to C based on Smalltalk. OOP toolkits also enhanced the popularity of <a href="/wiki/Event-driven_programming" title="Event-driven programming">event-driven programming</a> (although this concept is not limited to OOP).</p>
<p>At <a class="mw-redirect" href="/wiki/ETH_Z%C3%BCrich" title="ETH Zürich">ETH Zürich</a>, <a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a> and his colleagues had also been investigating such topics as <a class="mw-redirect" href="/wiki/Data_abstraction" title="Data abstraction">data abstraction</a> and <a class="mw-redirect" href="/wiki/Modularity_(programming)" title="Modularity (programming)">modular programming</a> (although this had been in common use in the 1960s or earlier). <a href="/wiki/Modula-2" title="Modula-2">Modula-2</a> (1978) included both, and their succeeding design, <a href="/wiki/Oberon_(programming_language)" title="Oberon (programming language)">Oberon</a>, included a distinctive approach to object orientation, classes, and such.</p>
<p>Object-oriented features have been added to many previously existing languages, including <a href="/wiki/Ada_(programming_language)" title="Ada (programming language)">Ada</a>, <a href="/wiki/BASIC" title="BASIC">BASIC</a>, <a href="/wiki/Fortran" title="Fortran">Fortran</a>, <a href="/wiki/Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a>, and <a href="/wiki/COBOL" title="COBOL">COBOL</a>. Adding these features to languages that were not initially designed for them often led to problems with compatibility and maintainability of code.</p>
<p>More recently, a number of languages have emerged that are primarily object-oriented, but that are also compatible with procedural methodology. Two such languages are <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a> and <a class="mw-redirect" href="/wiki/Ruby_programming_language" title="Ruby programming language">Ruby</a>. Probably the most commercially important recent object-oriented languages are <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, developed by <a href="/wiki/Sun_Microsystems" title="Sun Microsystems">Sun Microsystems</a>, as well as <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> and <a class="mw-redirect" href="/wiki/Visual_Basic.NET" title="Visual Basic.NET">Visual Basic.NET</a> (VB.NET), both designed for Microsoft's <a href="/wiki/.NET_Framework" title=".NET Framework">.NET</a> platform. Each of these two frameworks shows, in its own way, the benefit of using OOP by creating an abstraction from implementation. VB.NET and C# support cross-language inheritance, allowing classes defined in one language to subclass classes defined in the other language.</p>
<h2><span class="mw-headline" id="OOP_languages">OOP languages</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=10" title="Edit section: OOP languages">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table class="metadata plainlinks ambox ambox-content ambox-Unreferenced" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px"><a class="image" href="/wiki/File:Question_book-new.svg"><img alt="" data-file-height="399" data-file-width="512" height="39" src="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" width="50"/></a></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This section <b>does not <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">cite</a> any <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">sources</a></b>. <span class="hide-when-compact">Please help improve this section by <a href="/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1" title="Help:Introduction to referencing with Wiki Markup/1">adding citations to reliable sources</a>. Unsourced material may be challenged and <a href="/wiki/Wikipedia:Verifiability#Burden_of_evidence" title="Wikipedia:Verifiability">removed</a>.</span> <small><i>(August 2009)</i></small> <small class="hide-when-compact"><i>(<a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this template message</a>)</i></small></span></td>
</tr>
</table>
<div class="hatnote" role="note">See also: <a href="/wiki/List_of_object-oriented_programming_languages" title="List of object-oriented programming languages">List of object-oriented programming languages</a></div>
<p><a href="/wiki/Simula" title="Simula">Simula</a> (1967) is generally accepted as being the first language with the primary features of an object-oriented language. It was created for making <a href="/wiki/Computer_simulation" title="Computer simulation">simulation programs</a>, in which what came to be called objects were the most important information representation. <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a> (1972 to 1980) is an early example, and the one with which much of the theory of object-oriented programming was developed. Concerning the degree of object orientation, the following distinctions can be made:</p>
<ul>
<li>Languages called "pure" OO languages, because everything in them is treated consistently as an object, from primitives such as characters and punctuation, all the way up to whole classes, prototypes, blocks, modules, etc. They were designed specifically to facilitate, even enforce, OO methods. Examples: <a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a>, <a href="/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a>, <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a>, <a href="/wiki/Eiffel_(programming_language)" title="Eiffel (programming language)">Eiffel</a>, <a href="/wiki/Emerald_(programming_language)" title="Emerald (programming language)">Emerald</a>,<sup class="reference" id="cite_ref-26"><a href="#cite_note-26">[26]</a></sup> <a href="/wiki/JADE_(programming_language)" title="JADE (programming language)">JADE</a>, <a href="/wiki/Self_(programming_language)" title="Self (programming language)">Self</a>.</li>
<li>Languages designed mainly for OO programming, but with some procedural elements. Examples: <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a>, <a href="/wiki/C%2B%2B" title="C++">C++</a>, <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a>, <a href="/wiki/Object_Pascal" title="Object Pascal">Delphi/Object Pascal</a>, <a class="mw-redirect" href="/wiki/VB.NET" title="VB.NET">VB.NET</a>.</li>
<li>Languages that are historically <a href="/wiki/Procedural_programming" title="Procedural programming">procedural languages</a>, but have been extended with some OO features. Examples: <a href="/wiki/PHP" title="PHP">PHP</a>, <a href="/wiki/Perl" title="Perl">Perl</a>, <a href="/wiki/Visual_Basic" title="Visual Basic">Visual Basic</a> (derived from BASIC), <a href="/wiki/MATLAB" title="MATLAB">MATLAB</a>, <a class="mw-redirect" href="/wiki/COBOL_2002" title="COBOL 2002">COBOL 2002</a>, <a class="mw-redirect" href="/wiki/Fortran_2003" title="Fortran 2003">Fortran 2003</a>, <a href="/wiki/ABAP" title="ABAP">ABAP</a>, <a href="/wiki/Ada_(programming_language)" title="Ada (programming language)">Ada 95</a>, <a href="/wiki/Pascal_(programming_language)" title="Pascal (programming language)">Pascal</a>.</li>
<li>Languages with most of the features of objects (classes, methods, inheritance), but in a distinctly original form. Examples: <a href="/wiki/Oberon_(programming_language)" title="Oberon (programming language)">Oberon</a> (Oberon-1 or Oberon-2).</li>
<li>Languages with <a href="/wiki/Abstract_data_type" title="Abstract data type">abstract data type</a> support which may be used to resemble OO programming, but without all features of object-orientation. This includes <a class="mw-redirect" href="/wiki/Object-based" title="Object-based">object-<i>based</i></a> and <a href="/wiki/Prototype-based_programming" title="Prototype-based programming">prototype-based</a> languages. Examples: <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>, <a href="/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua</a>, <a href="/wiki/Modula-2" title="Modula-2">Modula-2</a>, <a href="/wiki/CLU_(programming_language)" title="CLU (programming language)">CLU</a>.</li>
<li>Chameleon languages that support multiple paradigms, including OO. <a href="/wiki/Tcl" title="Tcl">Tcl</a> stands out among these for TclOO, a hybrid object system that supports both <a href="/wiki/Prototype-based_programming" title="Prototype-based programming">prototype-based programming</a> and class-based OO.</li>
</ul>
<h3><span class="mw-headline" id="OOP_in_dynamic_languages">OOP in dynamic languages</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=11" title="Edit section: OOP in dynamic languages">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>In recent years, object-oriented programming has become especially popular in <a href="/wiki/Dynamic_programming_language" title="Dynamic programming language">dynamic programming languages</a>. <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>, <a class="mw-redirect" href="/wiki/Windows_PowerShell" title="Windows PowerShell">PowerShell</a>, <a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a> and <a href="/wiki/Groovy_(programming_language)" title="Groovy (programming language)">Groovy</a> are dynamic languages built on OOP principles, while <a href="/wiki/Perl" title="Perl">Perl</a> and <a href="/wiki/PHP" title="PHP">PHP</a> have been adding object-oriented features since Perl 5 and PHP 4, and <a class="mw-redirect" href="/wiki/ColdFusion" title="ColdFusion">ColdFusion</a> since version 6.</p>
<p>The <a href="/wiki/Document_Object_Model" title="Document Object Model">Document Object Model</a> of <a href="/wiki/HTML" title="HTML">HTML</a>, <a href="/wiki/XHTML" title="XHTML">XHTML</a>, and <a href="/wiki/XML" title="XML">XML</a> documents on the Internet has bindings to the popular <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>/<a href="/wiki/ECMAScript" title="ECMAScript">ECMAScript</a> language. JavaScript is perhaps the best known <a href="/wiki/Prototype-based_programming" title="Prototype-based programming">prototype-based programming</a> language, which employs cloning from prototypes rather than inheriting from a class (contrast to <a href="/wiki/Class-based_programming" title="Class-based programming">class-based programming</a>). Before <a href="/wiki/ECMAScript" title="ECMAScript">ECMAScript</a> 6, only a prototype-based object model was supported. Another scripting language that takes this approach is <a href="/wiki/Lua_(programming_language)" title="Lua (programming language)">Lua</a>.</p>
<h3><span class="mw-headline" id="OOP_in_a_network_protocol">OOP in a network protocol</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=12" title="Edit section: OOP in a network protocol">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>The messages that flow between computers to request services in a client-server environment can be designed as the linearizations of objects defined by class objects known to both the client and the server. For example, a simple linearized object would consist of a length field, a code point identifying the class, and a data value. A more complex example would be a command consisting of the length and code point of the command and values consisting of linearized objects representing the command's parameters. Each such command must be directed by the server to an object whose class (or superclass) recognizes the command and is able to provide the requested service. Clients and servers are best modeled as complex object-oriented structures. <a href="/wiki/Distributed_Data_Management_Architecture" title="Distributed Data Management Architecture">Distributed Data Management Architecture</a> (DDM) took this approach and used class objects to define objects at four levels of a formal hierarchy:</p>
<ul>
<li>Fields defining the data values that form messages, such as their length, codepoint and data values.</li>
<li>Objects and collections of objects similar to what would be found in a <a href="/wiki/Smalltalk" title="Smalltalk">Smalltalk</a> program for messages and parameters.</li>
<li>Managers similar to <a href="/wiki/AS/400_object" title="AS/400 object">AS/400 objects</a>, such as a directory to files and files consisting of metadata and records. Managers conceptually provide memory and processing resources for their contained objects.</li>
<li>A client or server consisting of all the managers necessary to implement a full processing environment, supporting such aspects as directory services, security and concurrency control.</li>
</ul>
<p>The initial version of DDM defined distributed file services. It was later extended to be the foundation of <a href="/wiki/DRDA" title="DRDA">Distributed Relational Database Architecture</a> (DRDA).</p>
<h2><span class="mw-headline" id="Design_patterns">Design patterns</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=13" title="Edit section: Design patterns">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>Challenges of object-oriented design are addressed by several methodologies. Most common is known as the <a class="mw-redirect" href="/wiki/Design_Patterns_(book)" title="Design Patterns (book)">design patterns codified by Gamma <i>et al.</i></a>. More broadly, the term "<a class="mw-redirect" href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">design patterns</a>" can be used to refer to any general, repeatable solution to a commonly occurring problem in software design. Some of these commonly occurring problems have implications and solutions particular to object-oriented development.</p>
<h3><span class="mw-headline" id="Inheritance_and_behavioral_subtyping">Inheritance and behavioral subtyping</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=14" title="Edit section: Inheritance and behavioral subtyping">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="hatnote" role="note">See also: <a href="/wiki/Object-oriented_design" title="Object-oriented design">Object-oriented design</a></div>
<p>It is intuitive to assume that inheritance creates a <a class="mw-redirect" href="/wiki/Program_semantics" title="Program semantics">semantic</a> "<a class="mw-redirect" href="/wiki/Is_a" title="Is a">is a</a>" relationship, and thus to infer that objects instantiated from subclasses can always be <i>safely</i> used instead of those instantiated from the superclass. This intuition is unfortunately false in most OOP languages, in particular in all those that allow <a class="mw-redirect" href="/wiki/Mutable" title="Mutable">mutable</a> objects. <a class="mw-redirect" href="/wiki/Subtype_polymorphism" title="Subtype polymorphism">Subtype polymorphism</a> as enforced by the <a class="mw-redirect" href="/wiki/Type_checker" title="Type checker">type checker</a> in OOP languages (with mutable objects) cannot guarantee <a class="mw-redirect" href="/wiki/Behavioral_subtyping" title="Behavioral subtyping">behavioral subtyping</a> in any context. Behavioral subtyping is undecidable in general, so it cannot be implemented by a program (compiler). Class or object hierarchies must be carefully designed, considering possible incorrect uses that cannot be detected syntactically. This issue is known as the <a href="/wiki/Liskov_substitution_principle" title="Liskov substitution principle">Liskov substitution principle</a>.</p>
<h3><span class="mw-headline" id="Gang_of_Four_design_patterns">Gang of Four design patterns</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=15" title="Edit section: Gang of Four design patterns">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="hatnote" role="note">Main article: <a class="mw-redirect" href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">Design pattern (computer science)</a></div>
<p><i><a class="mw-redirect" href="/wiki/Design_Patterns_(book)" title="Design Patterns (book)">Design Patterns: Elements of Reusable Object-Oriented Software</a></i> is an influential book published in 1995 by <a href="/wiki/Erich_Gamma" title="Erich Gamma">Erich Gamma</a>, <a class="mw-redirect" href="/wiki/Richard_Helm" title="Richard Helm">Richard Helm</a>, <a href="/wiki/Ralph_Johnson_(computer_scientist)" title="Ralph Johnson (computer scientist)">Ralph Johnson</a>, and <a href="/wiki/John_Vlissides" title="John Vlissides">John Vlissides</a>, often referred to humorously as the "Gang of Four". Along with exploring the capabilities and pitfalls of object-oriented programming, it describes 23 common programming problems and patterns for solving them. As of April 2007, the book was in its 36th printing.</p>
<p>The book describes the following patterns:</p>
<ul>
<li><i><a href="/wiki/Creational_pattern" title="Creational pattern">Creational patterns</a></i> (5): <a href="/wiki/Factory_method_pattern" title="Factory method pattern">Factory method pattern</a>, <a href="/wiki/Abstract_factory_pattern" title="Abstract factory pattern">Abstract factory pattern</a>, <a href="/wiki/Singleton_pattern" title="Singleton pattern">Singleton pattern</a>, <a href="/wiki/Builder_pattern" title="Builder pattern">Builder pattern</a>, <a href="/wiki/Prototype_pattern" title="Prototype pattern">Prototype pattern</a></li>
<li><i><a href="/wiki/Structural_pattern" title="Structural pattern">Structural patterns</a></i> (7): <a href="/wiki/Adapter_pattern" title="Adapter pattern">Adapter pattern</a>, <a href="/wiki/Bridge_pattern" title="Bridge pattern">Bridge pattern</a>, <a href="/wiki/Composite_pattern" title="Composite pattern">Composite pattern</a>, <a href="/wiki/Decorator_pattern" title="Decorator pattern">Decorator pattern</a>, <a href="/wiki/Facade_pattern" title="Facade pattern">Facade pattern</a>, <a href="/wiki/Flyweight_pattern" title="Flyweight pattern">Flyweight pattern</a>, <a href="/wiki/Proxy_pattern" title="Proxy pattern">Proxy pattern</a></li>
<li><i><a href="/wiki/Behavioral_pattern" title="Behavioral pattern">Behavioral patterns</a></i> (11): <a href="/wiki/Chain-of-responsibility_pattern" title="Chain-of-responsibility pattern">Chain-of-responsibility pattern</a>, <a href="/wiki/Command_pattern" title="Command pattern">Command pattern</a>, <a href="/wiki/Interpreter_pattern" title="Interpreter pattern">Interpreter pattern</a>, <a href="/wiki/Iterator_pattern" title="Iterator pattern">Iterator pattern</a>, <a href="/wiki/Mediator_pattern" title="Mediator pattern">Mediator pattern</a>, <a href="/wiki/Memento_pattern" title="Memento pattern">Memento pattern</a>, <a href="/wiki/Observer_pattern" title="Observer pattern">Observer pattern</a>, <a href="/wiki/State_pattern" title="State pattern">State pattern</a>, <a href="/wiki/Strategy_pattern" title="Strategy pattern">Strategy pattern</a>, <a href="/wiki/Template_method_pattern" title="Template method pattern">Template method pattern</a>, <a href="/wiki/Visitor_pattern" title="Visitor pattern">Visitor pattern</a></li>
</ul>
<h3><span class="mw-headline" id="Object-orientation_and_databases">Object-orientation and databases</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=16" title="Edit section: Object-orientation and databases">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="hatnote" role="note">Main articles: <a href="/wiki/Object-relational_impedance_mismatch" title="Object-relational impedance mismatch">Object-relational impedance mismatch</a>, <a href="/wiki/Object-relational_mapping" title="Object-relational mapping">Object-relational mapping</a>, and <a href="/wiki/Object_database" title="Object database">Object database</a></div>
<p>Both object-oriented programming and <a class="mw-redirect" href="/wiki/Relational_database_management_systems" title="Relational database management systems">relational database management systems</a> (RDBMSs) are extremely common in software today<sup class="plainlinks noprint asof-tag update" style="display:none;"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit">[update]</a></sup>. Since <a href="/wiki/Relational_database" title="Relational database">relational databases</a> don't store objects directly (though some RDBMSs have object-oriented features to approximate this), there is a general need to bridge the two worlds. The problem of bridging object-oriented programming accesses and data patterns with relational databases is known as <a href="/wiki/Object-relational_impedance_mismatch" title="Object-relational impedance mismatch">object-relational impedance mismatch</a>. There are a number of approaches to cope with this problem, but no general solution without downsides.<sup class="reference" id="cite_ref-RDMDBobjectmis_27-0"><a href="#cite_note-RDMDBobjectmis-27">[27]</a></sup> One of the most common approaches is <a href="/wiki/Object-relational_mapping" title="Object-relational mapping">object-relational mapping</a>, as found in <a href="/wiki/Integrated_development_environment" title="Integrated development environment">IDE</a> languages such as <a href="/wiki/Visual_FoxPro" title="Visual FoxPro">Visual FoxPro</a> and libraries such as <a href="/wiki/Java_Data_Objects" title="Java Data Objects">Java Data Objects</a> and <a href="/wiki/Ruby_on_Rails" title="Ruby on Rails">Ruby on Rails</a>' ActiveRecord.</p>
<p>There are also <a href="/wiki/Object_database" title="Object database">object databases</a> that can be used to replace RDBMSs, but these have not been as technically and commercially successful as RDBMSs.</p>
<h3><span class="mw-headline" id="Real-world_modeling_and_relationships">Real-world modeling and relationships</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=17" title="Edit section: Real-world modeling and relationships">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>OOP can be used to associate real-world objects and processes with digital counterparts. However, not everyone agrees that OOP facilitates direct real-world mapping (see <a href="/wiki/Object-oriented_programming#Criticism" title="Object-oriented programming">Criticism</a> section) or that real-world mapping is even a worthy goal; <a href="/wiki/Bertrand_Meyer" title="Bertrand Meyer">Bertrand Meyer</a> argues in <i><a href="/wiki/Object-Oriented_Software_Construction" title="Object-Oriented Software Construction">Object-Oriented Software Construction</a></i><sup class="reference" id="cite_ref-Meyer230_28-0"><a href="#cite_note-Meyer230-28">[28]</a></sup> that a program is not a model of the world but a model of some part of the world; "Reality is a cousin twice removed". At the same time, some principal limitations of OOP had been noted.<sup class="reference" id="cite_ref-29"><a href="#cite_note-29">[29]</a></sup> For example, the <a href="/wiki/Circle-ellipse_problem" title="Circle-ellipse problem">circle-ellipse problem</a> is difficult to handle using OOP's concept of <a href="/wiki/Inheritance_(object-oriented_programming)" title="Inheritance (object-oriented programming)">inheritance</a>.</p>
<p>However, <a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a> (who popularized the adage now known as <a href="/wiki/Wirth%27s_law" title="Wirth's law">Wirth's law</a>: "Software is getting slower more rapidly than hardware becomes faster") said of OOP in his paper, "Good Ideas through the Looking Glass", "This paradigm closely reflects the structure of systems 'in the real world', and it is therefore well suited to model complex systems with complex behaviours"<sup class="reference" id="cite_ref-30"><a href="#cite_note-30">[30]</a></sup> (contrast <a href="/wiki/KISS_principle" title="KISS principle">KISS principle</a>).</p>
<p><a href="/wiki/Steve_Yegge" title="Steve Yegge">Steve Yegge</a> and others noted that natural languages lack the OOP approach of strictly prioritizing <i>things</i> (objects/<a href="/wiki/Noun" title="Noun">nouns</a>) before <i>actions</i> (methods/<a href="/wiki/Verb" title="Verb">verbs</a>).<sup class="reference" id="cite_ref-executioniKoN_31-0"><a href="#cite_note-executioniKoN-31">[31]</a></sup> This problem may cause OOP to suffer more convoluted solutions than procedural programming.<sup class="reference" id="cite_ref-executioniKoN2_32-0"><a href="#cite_note-executioniKoN2-32">[32]</a></sup></p>
<h3><span class="mw-headline" id="OOP_and_control_flow">OOP and control flow</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=18" title="Edit section: OOP and control flow">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>OOP was developed to increase the <a href="/wiki/Code_reuse" title="Code reuse">reusability</a> and <a href="/wiki/Software_maintenance" title="Software maintenance">maintainability</a> of source code.<sup class="reference" id="cite_ref-realisticcodereuse_33-0"><a href="#cite_note-realisticcodereuse-33">[33]</a></sup> Transparent representation of the <a href="/wiki/Control_flow" title="Control flow">control flow</a> had no priority and was meant to be handled by a compiler. With the increasing relevance of parallel hardware and <a class="mw-redirect" href="/wiki/Thread_(computer_science)" title="Thread (computer science)">multithreaded coding</a>, developing transparent control flow becomes more important, something hard to achieve with OOP.<sup class="reference" id="cite_ref-flaws_34-0"><a href="#cite_note-flaws-34">[34]</a></sup><sup class="reference" id="cite_ref-multithreadingisaverb_35-0"><a href="#cite_note-multithreadingisaverb-35">[35]</a></sup><sup class="reference" id="cite_ref-multicore_36-0"><a href="#cite_note-multicore-36">[36]</a></sup><sup class="reference" id="cite_ref-37"><a href="#cite_note-37">[37]</a></sup></p>
<h3><span class="mw-headline" id="Responsibility-_vs._data-driven_design">Responsibility- vs. data-driven design</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=19" title="Edit section: Responsibility- vs. data-driven design">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><a href="/wiki/Responsibility-driven_design" title="Responsibility-driven design">Responsibility-driven design</a> defines classes in terms of a contract, that is, a class should be defined around a responsibility and the information that it shares. This is contrasted by Wirfs-Brock and Wilkerson with <a class="mw-redirect" href="/wiki/Data-driven_design" title="Data-driven design">data-driven design</a>, where classes are defined around the data-structures that must be held. The authors hold that responsibility-driven design is preferable.</p>
<h3><span class="mw-headline" id="SOLID_and_GRASP_guidelines">SOLID and GRASP guidelines</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=20" title="Edit section: SOLID and GRASP guidelines">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p><a href="/wiki/SOLID_(object-oriented_design)" title="SOLID (object-oriented design)">SOLID</a> is a mnemonic invented by Michael Feathers that stands for and advocates five programming practices:</p>
<ul>
<li><a href="/wiki/Single_responsibility_principle" title="Single responsibility principle">Single responsibility principle</a></li>
<li><a href="/wiki/Open/closed_principle" title="Open/closed principle">Open/closed principle</a></li>
<li><a href="/wiki/Liskov_substitution_principle" title="Liskov substitution principle">Liskov substitution principle</a></li>
<li><a href="/wiki/Interface_segregation_principle" title="Interface segregation principle">Interface segregation principle</a></li>
<li><a href="/wiki/Dependency_inversion_principle" title="Dependency inversion principle">Dependency inversion principle</a></li>
</ul>
<p><a href="/wiki/GRASP_(object-oriented_design)" title="GRASP (object-oriented design)">GRASP</a> (General Responsibility Assignment Software Patterns) is another set of guidelines advocated by <a href="/wiki/Craig_Larman" title="Craig Larman">Craig Larman</a>.</p>
<h2><span class="mw-headline" id="Criticism">Criticism</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=21" title="Edit section: Criticism">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<p>The OOP paradigm has been criticised for a number of reasons, including not meeting its stated goals of reusability and modularity,<sup class="reference" id="cite_ref-badprop_38-0"><a href="#cite_note-badprop-38">[38]</a></sup><sup class="reference" id="cite_ref-armstrongjoe_39-0"><a href="#cite_note-armstrongjoe-39">[39]</a></sup> and for overemphasizing one aspect of software design and modeling (data/objects) at the expense of other important aspects (computation/algorithms).<sup class="reference" id="cite_ref-stepanov_40-0"><a href="#cite_note-stepanov-40">[40]</a></sup><sup class="reference" id="cite_ref-hickey_41-0"><a href="#cite_note-hickey-41">[41]</a></sup></p>
<p><a href="/wiki/Luca_Cardelli" title="Luca Cardelli">Luca Cardelli</a> has claimed that OOP code is "intrinsically less efficient" than procedural code, that OOP can take longer to compile, and that OOP languages have "extremely poor modularity properties with respect to class extension and modification", and tend to be extremely complex.<sup class="reference" id="cite_ref-badprop_38-1"><a href="#cite_note-badprop-38">[38]</a></sup> The latter point is reiterated by <a class="mw-redirect" href="/wiki/Joe_Armstrong_(programming)" title="Joe Armstrong (programming)">Joe Armstrong</a>, the principal inventor of <a href="/wiki/Erlang_(programming_language)" title="Erlang (programming language)">Erlang</a>, who is quoted as saying:<sup class="reference" id="cite_ref-armstrongjoe_39-1"><a href="#cite_note-armstrongjoe-39">[39]</a></sup></p>
<blockquote class="templatequote">
<p>The problem with object-oriented languages is they've got all this implicit environment that they carry around with them. You wanted a banana but what you got was a gorilla holding the banana and the entire jungle.</p>
</blockquote>
<p>A study by Potok et al. has shown no significant difference in productivity between OOP and procedural approaches.<sup class="reference" id="cite_ref-42"><a href="#cite_note-42">[42]</a></sup></p>
<p><a href="/wiki/Christopher_J._Date" title="Christopher J. Date">Christopher J. Date</a> stated that critical comparison of OOP to other technologies, relational in particular, is difficult because of lack of an agreed-upon and rigorous definition of OOP;<sup class="reference" id="cite_ref-DatePage650_43-0"><a href="#cite_note-DatePage650-43">[43]</a></sup> however, Date and Darwen have proposed a theoretical foundation on OOP that uses OOP as a kind of customizable <a href="/wiki/Data_type" title="Data type">type system</a> to support <a class="mw-redirect" href="/wiki/RDBMS" title="RDBMS">RDBMS</a>.<sup class="reference" id="cite_ref-ThirdManifesto_44-0"><a href="#cite_note-ThirdManifesto-44">[44]</a></sup></p>
<p>In an article Lawrence Krubner claimed that compared to other languages (LISP dialects, functional languages, etc.) OOP languages have no unique strengths, and inflict a heavy burden of unneeded complexity.<sup class="reference" id="cite_ref-lawrence_45-0"><a href="#cite_note-lawrence-45">[45]</a></sup></p>
<p><a href="/wiki/Alexander_Stepanov" title="Alexander Stepanov">Alexander Stepanov</a> compares object orientation unfavourably to <a href="/wiki/Generic_programming" title="Generic programming">generic programming</a>:<sup class="reference" id="cite_ref-stepanov_40-1"><a href="#cite_note-stepanov-40">[40]</a></sup></p>
<blockquote class="templatequote">
<p>I find OOP technically unsound. It attempts to decompose the world in terms of interfaces that vary on a single type. To deal with the real problems you need multisorted algebras — families of interfaces that span multiple types. I find OOP philosophically unsound. It claims that everything is an object. Even if it is true it is not very interesting — saying that everything is an object is saying nothing at all.</p>
</blockquote>
<p><a href="/wiki/Paul_Graham_(computer_programmer)" title="Paul Graham (computer programmer)">Paul Graham</a> has suggested that OOP's popularity within large companies is due to "large (and frequently changing) groups of mediocre programmers". According to Graham, the discipline imposed by OOP prevents any one programmer from "doing too much damage".<sup class="reference" id="cite_ref-graham_46-0"><a href="#cite_note-graham-46">[46]</a></sup></p>
<p><a href="/wiki/Steve_Yegge" title="Steve Yegge">Steve Yegge</a> noted that, as opposed to <a href="/wiki/Functional_programming" title="Functional programming">functional programming</a>:<sup class="reference" id="cite_ref-yegge_47-0"><a href="#cite_note-yegge-47">[47]</a></sup></p>
<blockquote class="templatequote">
<p>Object Oriented Programming puts the Nouns first and foremost. Why would you go to such lengths to put one part of speech on a pedestal? Why should one kind of concept take precedence over another? It's not as if OOP has suddenly made verbs less important in the way we actually think. It's a strangely skewed perspective.</p>
</blockquote>
<p><a class="mw-redirect" href="/wiki/Rich_Hickey" title="Rich Hickey">Rich Hickey</a>, creator of <a href="/wiki/Clojure" title="Clojure">Clojure</a>, described object systems as overly simplistic models of the real world. He emphasized the inability of OOP to model time properly, which is getting increasingly problematic as software systems become more concurrent.<sup class="reference" id="cite_ref-hickey_41-1"><a href="#cite_note-hickey-41">[41]</a></sup></p>
<p><a href="/wiki/Eric_S._Raymond" title="Eric S. Raymond">Eric S. Raymond</a>, a <a href="/wiki/Unix" title="Unix">Unix</a> programmer and <a href="/wiki/Open-source_software" title="Open-source software">open-source software</a> advocate, has been critical of claims that present object-oriented programming as the "One True Solution", and has written that object-oriented programming languages tend to encourage thickly layered programs that destroy transparency.<sup class="reference" id="cite_ref-Eric_S._Raymond_2003_48-0"><a href="#cite_note-Eric_S._Raymond_2003-48">[48]</a></sup> Raymond compares this unfavourably to the approach taken with Unix and the <a href="/wiki/C_(programming_language)" title="C (programming language)">C programming language</a>.<sup class="reference" id="cite_ref-Eric_S._Raymond_2003_48-1"><a href="#cite_note-Eric_S._Raymond_2003-48">[48]</a></sup></p>
<p><a href="/wiki/Rob_Pike" title="Rob Pike">Rob Pike</a>, a programmer involved in the creation of <a href="/wiki/UTF-8" title="UTF-8">UTF-8</a> and <a href="/wiki/Go_(programming_language)" title="Go (programming language)">Go</a>, has said that OOP languages frequently favor <a href="/wiki/Composition_over_inheritance" title="Composition over inheritance">inheritance over composition</a>, and the paradigm as a whole shifts the focus from <a href="/wiki/Data_structure" title="Data structure">data structures</a> and <a href="/wiki/Algorithm" title="Algorithm">algorithms</a> to <a href="/wiki/Data_type" title="Data type">types</a>.<sup class="reference" id="cite_ref-49"><a href="#cite_note-49">[49]</a></sup> Furthermore, he cites an instance of a <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> professor whose "idiomatic" solution to a problem was to create six new classes, rather than to simply use a <a href="/wiki/Lookup_table" title="Lookup table">lookup table</a>.<sup class="reference" id="cite_ref-50"><a href="#cite_note-50">[50]</a></sup></p>
<h2><span class="mw-headline" id="Formal_semantics">Formal semantics</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=22" title="Edit section: Formal semantics">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="hatnote" role="note">See also: <a class="mw-redirect" href="/wiki/Formal_semantics_of_programming_languages" title="Formal semantics of programming languages">Formal semantics of programming languages</a></div>
<p>Objects are the run-time entities in an object-oriented system. They may represent a person, a place, a bank account, a table of data, or any item that the program has to handle.</p>
<p>There have been several attempts at formalizing the concepts used in object-oriented programming. The following concepts and constructs have been used as interpretations of OOP concepts:</p>
<ul>
<li><a class="mw-redirect" href="/wiki/F-Coalgebra" title="F-Coalgebra">co algebraic data types</a><sup class="reference" id="cite_ref-poll97_51-0"><a href="#cite_note-poll97-51">[51]</a></sup></li>
<li><a href="/wiki/Abstract_data_type" title="Abstract data type">abstract data types</a> (which have <a class="mw-redirect" href="/wiki/Existential_types" title="Existential types">existential types</a>) allow the definition of <a class="mw-redirect" href="/wiki/Module_(programming)" title="Module (programming)">modules</a> but these do not support <a href="/wiki/Dynamic_dispatch" title="Dynamic dispatch">dynamic dispatch</a></li>
<li><a class="mw-redirect" href="/wiki/Recursive_type" title="Recursive type">recursive types</a></li>
<li>encapsulated state</li>
<li><a href="/wiki/Inheritance_(object-oriented_programming)" title="Inheritance (object-oriented programming)">inheritance</a></li>
<li><a href="/wiki/Record_(computer_science)" title="Record (computer science)">records</a> are basis for understanding objects if <a class="mw-redirect" href="/wiki/Function_literal" title="Function literal">function literals</a> can be stored in fields (like in functional programming languages), but the actual calculi need be considerably more complex to incorporate essential features of OOP. Several extensions of <a href="/wiki/System_F-sub" title="System F-sub">System F<sub>&lt;:</sub></a> that deal with mutable objects have been studied;<sup class="reference" id="cite_ref-AbadiCardelli_52-0"><a href="#cite_note-AbadiCardelli-52">[52]</a></sup> these allow both <a class="mw-redirect" href="/wiki/Subtype_polymorphism" title="Subtype polymorphism">subtype polymorphism</a> and <a href="/wiki/Parametric_polymorphism" title="Parametric polymorphism">parametric polymorphism</a> (generics)</li>
</ul>
<p>Attempts to find a consensus definition or theory behind objects have not proven very successful (however, see Abadi &amp; Cardelli, <a class="external text" href="http://portal.acm.org/citation.cfm?id=547964&amp;dl=ACM&amp;coll=portal" rel="nofollow"><i>A Theory of Objects</i></a><sup class="reference" id="cite_ref-AbadiCardelli_52-1"><a href="#cite_note-AbadiCardelli-52">[52]</a></sup> for formal definitions of many OOP concepts and constructs), and often diverge widely. For example, some definitions focus on mental activities, and some on program structuring. One of the simpler definitions is that OOP is the act of using "map" data structures or arrays that can contain functions and pointers to other maps, all with some <a href="/wiki/Syntactic_sugar" title="Syntactic sugar">syntactic and scoping sugar</a> on top. Inheritance can be performed by cloning the maps (sometimes called "prototyping").</p>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=23" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div aria-label="Portals" class="noprint portal plainlist tright" role="navigation" style="margin:0.5em 0 0.5em 1em;border:solid #aaa 1px">
<ul style="display:table;box-sizing:border-box;padding:0.1em;max-width:175px;background:#f9f9f9;font-size:85%;line-height:110%;font-style:italic;font-weight:bold">
<li style="display:table-row"><span style="display:table-cell;padding:0.2em;vertical-align:middle;text-align:center"><a class="image" href="/wiki/File:8bit-dynamiclist_(reversed).gif"><img alt="icon" class="noviewer" data-file-height="32" data-file-width="32" height="28" src="//upload.wikimedia.org/wikipedia/commons/thumb/c/cc/8bit-dynamiclist_%28reversed%29.gif/28px-8bit-dynamiclist_%28reversed%29.gif" srcset="//upload.wikimedia.org/wikipedia/commons/c/cc/8bit-dynamiclist_%28reversed%29.gif 1.5x" width="28"/></a></span><span style="display:table-cell;padding:0.2em 0.2em 0.2em 0.3em;vertical-align:middle"><a href="/wiki/Portal:Computer_programming" title="Portal:Computer programming">Computer programming portal</a></span></li>
</ul>
</div>
<ul>
<li><a href="/wiki/Comparison_of_programming_languages_(object-oriented_programming)" title="Comparison of programming languages (object-oriented programming)">Comparison of programming languages (object-oriented programming)</a></li>
<li><a href="/wiki/Comparison_of_programming_paradigms" title="Comparison of programming paradigms">Comparison of programming paradigms</a></li>
<li><a href="/wiki/Component-based_software_engineering" title="Component-based software engineering">Component-based software engineering</a></li>
<li><a href="/wiki/Design_by_contract" title="Design by contract">Design by contract</a></li>
<li><a class="mw-redirect" href="/wiki/Object_association" title="Object association">Object association</a></li>
<li><a href="/wiki/Object_database" title="Object database">Object database</a></li>
<li><a class="mw-redirect" href="/wiki/Object_modeling_language" title="Object modeling language">Object modeling language</a></li>
<li><a href="/wiki/Object-oriented_analysis_and_design" title="Object-oriented analysis and design">Object-oriented analysis and design</a></li>
<li><a href="/wiki/Object-relational_impedance_mismatch" title="Object-relational impedance mismatch">Object-relational impedance mismatch</a> (and <a href="/wiki/The_Third_Manifesto" title="The Third Manifesto">The Third Manifesto</a>)</li>
<li><a href="/wiki/Object-relational_mapping" title="Object-relational mapping">Object-relational mapping</a></li>
</ul>
<h3><span class="mw-headline" id="Systems">Systems</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=24" title="Edit section: Systems">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li><a href="/wiki/CADES" title="CADES">CADES</a></li>
<li><a href="/wiki/Common_Object_Request_Broker_Architecture" title="Common Object Request Broker Architecture">Common Object Request Broker Architecture</a> (CORBA)</li>
<li><a href="/wiki/Distributed_Component_Object_Model" title="Distributed Component Object Model">Distributed Component Object Model</a></li>
<li><a href="/wiki/Distributed_Data_Management_Architecture" title="Distributed Data Management Architecture">Distributed Data Management Architecture</a></li>
<li><a href="/wiki/Jeroo" title="Jeroo">Jeroo</a></li>
</ul>
<h3><span class="mw-headline" id="Modeling_languages">Modeling languages</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=25" title="Edit section: Modeling languages">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<ul>
<li><a href="/wiki/IDEF4" title="IDEF4">IDEF4</a></li>
<li><a href="/wiki/Interface_description_language" title="Interface description language">Interface description language</a></li>
<li><a class="mw-redirect" href="/wiki/Lepus3" title="Lepus3">Lepus3</a></li>
<li><a href="/wiki/Unified_Modeling_Language" title="Unified Modeling Language">UML</a></li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=26" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist columns references-column-count references-column-count-2" style="-moz-column-count: 2; -webkit-column-count: 2; column-count: 2; list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><cite class="citation journal">Kindler, E.; Krivy, I. (2011). "Object-Oriented Simulation of systems with sophisticated control". International Journal of General Systems: 313–343.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.atitle=Object-Oriented+Simulation+of+systems+with+sophisticated+control&amp;rft.aufirst=E.&amp;rft.au=Krivy%2C+I.&amp;rft.aulast=Kindler&amp;rft.date=2011&amp;rft.genre=article&amp;rft.pages=313-343&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><cite class="citation book">Lewis, John; Loftus, William (2008). <i>Java Software Solutions Foundations of Programming Design 6th ed</i>. Pearson Education Inc. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-321-53205-8" title="Special:BookSources/0-321-53205-8">0-321-53205-8</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=John&amp;rft.aulast=Lewis&amp;rft.au=Loftus%2C+William&amp;rft.btitle=Java+Software+Solutions+Foundations+of+Programming+Design+6th+ed&amp;rft.date=2008&amp;rft.genre=book&amp;rft.isbn=0-321-53205-8&amp;rft.pub=Pearson+Education+Inc.&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span>, section 1.6 "Object-Oriented Programming"</span></li>
<li id="cite_note-ArmstrongQuarks-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-ArmstrongQuarks_3-0">^</a></b></span> <span class="reference-text">Deborah J. Armstrong. <i>The Quarks of Object-Oriented Development</i>. A survey of nearly 40 years of computing literature which identified a number of fundamental concepts found in the large majority of definitions of OOP, in descending order of popularity: Inheritance, Object, Class, Encapsulation, Method, Message Passing, Polymorphism, and Abstraction.</span></li>
<li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4">^</a></b></span> <span class="reference-text"><a href="/wiki/John_C._Mitchell" title="John C. Mitchell">John C. Mitchell</a>, <i>Concepts in programming languages</i>, Cambridge University Press, 2003, <a class="internal mw-magiclink-isbn" href="/wiki/Special:BookSources/0521780985">ISBN 0-521-78098-5</a>, p.278. Lists: Dynamic dispatch, abstraction, subtype polymorphism, and inheritance.</span></li>
<li id="cite_note-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-5">^</a></b></span> <span class="reference-text">Michael Lee Scott, <i>Programming language pragmatics</i>, Edition 2, Morgan Kaufmann, 2006, <a class="internal mw-magiclink-isbn" href="/wiki/Special:BookSources/0126339511">ISBN 0-12-633951-1</a>, p. 470. Lists encapsulation, inheritance, and dynamic dispatch.</span></li>
<li id="cite_note-pierce-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-pierce_6-0">^</a></b></span> <span class="reference-text"><cite class="citation book">Pierce, Benjamin (2002). <i><a href="/wiki/Types_and_Programming_Languages" title="Types and Programming Languages">Types and Programming Languages</a></i>. MIT Press. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-262-16209-1" title="Special:BookSources/0-262-16209-1">0-262-16209-1</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Benjamin&amp;rft.aulast=Pierce&amp;rft.btitle=Types+and+Programming+Languages&amp;rft.date=2002&amp;rft.genre=book&amp;rft.isbn=0-262-16209-1&amp;rft.pub=MIT+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span>, section 18.1 "What is Object-Oriented Programming?" Lists: Dynamic dispatch, encapsulation or multi-methods (multiple dispatch), subtype polymorphism, inheritance or delegation, open recursion ("this"/"self")</span></li>
<li id="cite_note-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-7">^</a></b></span> <span class="reference-text"><cite class="citation book">Booch, Grady (1986). <a class="external text" href="https://en.wikiquote.org/wiki/Grady_Booch"><i>Software Engineering with Ada</i></a>. Addison Wesley. p. 220. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/978-0805306088" title="Special:BookSources/978-0805306088">978-0805306088</a>. <q>Perhaps the greatest strength of an object-oriented approach to development is that it offers a mechanism that captures a model of the real world.</q></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Grady&amp;rft.aulast=Booch&amp;rft.btitle=Software+Engineering+with+Ada&amp;rft.date=1986&amp;rft.genre=book&amp;rft_id=https%3A%2F%2Fen.wikiquote.org%2Fwiki%2FGrady_Booch&amp;rft.isbn=978-0805306088&amp;rft.pages=220&amp;rft.pub=Addison+Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text"><cite class="citation book">Jacobsen, Ivar; Magnus Christerson; Patrik Jonsson; Gunnar Overgaard (1992). <i>Object Oriented Software Engineering</i>. Addison-Wesley ACM Press. pp. 43–69. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-201-54435-0" title="Special:BookSources/0-201-54435-0">0-201-54435-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Ivar&amp;rft.au=Gunnar+Overgaard&amp;rft.aulast=Jacobsen&amp;rft.au=Magnus+Christerson&amp;rft.au=Patrik+Jonsson&amp;rft.btitle=Object+Oriented+Software+Engineering&amp;rft.date=1992&amp;rft.genre=book&amp;rft.isbn=0-201-54435-0&amp;rft.pages=43-69&amp;rft.pub=Addison-Wesley+ACM+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-9">^</a></b></span> <span class="reference-text"><cite class="citation journal">McCarthy, J.; <a class="new" href="/w/index.php?title=Robert_Brayton_(computer_scientist)&amp;action=edit&amp;redlink=1" title="Robert Brayton (computer scientist) (page does not exist)">Brayton, R.</a>; <a class="new" href="/w/index.php?title=Daniel_Edwards_(programmer)&amp;action=edit&amp;redlink=1" title="Daniel Edwards (programmer) (page does not exist)">Edwards, D.</a>; <a href="/wiki/Phyllis_Fox" title="Phyllis Fox">Fox, P.</a>; <a href="/wiki/Louis_Hodes" title="Louis Hodes">Hodes, L.</a>; <a href="/wiki/David_Luckham" title="David Luckham">Luckham, D.</a>; <a class="new" href="/w/index.php?title=Klim_Maling_(programmer)&amp;action=edit&amp;redlink=1" title="Klim Maling (programmer) (page does not exist)">Maling, K.</a>; <a href="/wiki/David_Park_(computer_scientist)" title="David Park (computer scientist)">Park, D.</a>; <a href="/wiki/Steve_Russell_(computer_scientist)" title="Steve Russell (computer scientist)">Russell, S.</a> (March 1960). <a class="external text" href="http://history.siam.org/sup/Fox_1960_LISP.pdf" rel="nofollow">"LISP I Programmers Manual"</a> <span style="font-size:85%;">(PDF)</span>. <a href="/wiki/Boston" title="Boston">Boston</a>, <a href="/wiki/Massachusetts" title="Massachusetts">Massachusetts</a>: Artificial Intelligence Group, <a href="/wiki/M.I.T._Computation_Center" title="M.I.T. Computation Center">M.I.T. Computation Center</a> and <a href="/wiki/Research_Laboratory_of_Electronics_at_MIT" title="Research Laboratory of Electronics at MIT">Research Laboratory</a>: 88f. <q>In the local M.I.T. patois, association lists [of atomic symbols] are also referred to as "property lists", and atomic symbols are sometimes called "objects".</q></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.atitle=LISP+I+Programmers+Manual&amp;rft.au=Brayton%2C+R.&amp;rft.au=Edwards%2C+D.&amp;rft.aufirst=J.&amp;rft.au=Fox%2C+P.&amp;rft.au=Hodes%2C+L.&amp;rft.aulast=McCarthy&amp;rft.au=Luckham%2C+D.&amp;rft.au=Maling%2C+K.&amp;rft.au=Park%2C+D.&amp;rft.au=Russell%2C+S.&amp;rft.date=1960-03&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fhistory.siam.org%2Fsup%2FFox_1960_LISP.pdf&amp;rft.pages=88f&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-10">^</a></b></span> <span class="reference-text"><cite class="citation book"><a href="/wiki/John_McCarthy_(computer_scientist)" title="John McCarthy (computer scientist)">McCarthy, John</a>; Abrahams, Paul W.; <a class="new" href="/w/index.php?title=Daniel_Edwards_(programmer)&amp;action=edit&amp;redlink=1" title="Daniel Edwards (programmer) (page does not exist)">Edwards, Daniel J.</a>; Hart, swapnil d.; Levin, Michael I. (1962). <a class="external text" href="http://community.computerhistory.org/scc/projects/LISP/book/LISP%201.5%20Programmers%20Manual.pdf" rel="nofollow"><i>LISP 1.5 Programmer's Manual</i></a> <span style="font-size:85%;">(PDF)</span>. <a href="/wiki/MIT_Press" title="MIT Press">MIT Press</a>. p. 105. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-262-13011-4" title="Special:BookSources/0-262-13011-4">0-262-13011-4</a>. <q>Object — a synonym for atomic symbol</q></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.au=Abrahams%2C+Paul+W.&amp;rft.au=Edwards%2C+Daniel+J.&amp;rft.aufirst=John&amp;rft.au=Hart%2C+swapnil+d.&amp;rft.aulast=McCarthy&amp;rft.au=Levin%2C+Michael+I.&amp;rft.btitle=LISP+1.5+Programmer%27s+Manual&amp;rft.date=1962&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fcommunity.computerhistory.org%2Fscc%2Fprojects%2FLISP%2Fbook%2FLISP%25201.5%2520Programmers%2520Manual.pdf&amp;rft.isbn=0-262-13011-4&amp;rft.pages=105&amp;rft.pub=MIT+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-alanKayOnOO-11"><span class="mw-cite-backlink"><b><a href="#cite_ref-alanKayOnOO_11-0">^</a></b></span> <span class="reference-text"><cite class="citation web"><a class="external text" href="http://www.purl.org/stefan_ram/pub/doc_kay_oop_en" rel="nofollow">"Dr. Alan Kay on the Meaning of "Object-Oriented Programming<span style="padding-right:0.2em;">"</span>"</a>. 2003<span class="reference-accessdate">. Retrieved <span class="nowrap">11 February</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.btitle=Dr.+Alan+Kay+on+the+Meaning+of+%22Object-Oriented+Programming%22&amp;rft.date=2003&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.purl.org%2Fstefan_ram%2Fpub%2Fdoc_kay_oop_en&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-12"><span class="mw-cite-backlink"><b><a href="#cite_ref-12">^</a></b></span> <span class="reference-text"><cite class="citation web">Sutherland, I. E. (30 January 1963). <a class="external text" href="http://handle.dtic.mil/100.2/AD404549" rel="nofollow">"Sketchpad: A Man-Machine Graphical Communication System"</a> <span style="font-size:85%;">(PDF)</span>. Technical Report No. 296, Lincoln Laboratory, Massachusetts Institute of Technology via Defense Technical Information Center (stinet.dtic.mil)<span class="reference-accessdate">. Retrieved <span class="nowrap">3 November</span> 2007</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.au=Sutherland%2C+I.+E.&amp;rft.btitle=Sketchpad%3A+A+Man-Machine+Graphical+Communication+System&amp;rft.date=1963-01-30&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fhandle.dtic.mil%2F100.2%2FAD404549&amp;rft.pub=Technical+Report+No.+296%2C+Lincoln+Laboratory%2C+Massachusetts+Institute+of+Technology+via+Defense+Technical+Information+Center+%28stinet.dtic.mil%29&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-simuladev-13"><span class="mw-cite-backlink">^ <a href="#cite_ref-simuladev_13-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-simuladev_13-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">The Development of the Simula Languages, <a href="/wiki/Kristen_Nygaard" title="Kristen Nygaard">Kristen Nygaard</a>, <a href="/wiki/Ole-Johan_Dahl" title="Ole-Johan Dahl">Ole-Johan Dahl</a>, p.254 <a class="external text" href="http://cs-exhibitions.uni-klu.ac.at/fileadmin/template/documents/text/The_development_of_the_simula_languages.pdf" rel="nofollow">Uni-kl.ac.at</a></span></li>
<li id="cite_note-14"><span class="mw-cite-backlink"><b><a href="#cite_ref-14">^</a></b></span> <span class="reference-text"><cite class="citation web">Ross, Doug. <a class="external text" href="http://www.csail.mit.edu/timeline/timeline.php?query=event&amp;id=19" rel="nofollow">"The first software engineering language"</a>. <i>LCS/AI Lab Timeline:</i>. MIT Computer Science and Artificial Intelligence Laboratory<span class="reference-accessdate">. Retrieved <span class="nowrap">13 May</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.atitle=The+first+software+engineering+language&amp;rft.aufirst=Doug&amp;rft.aulast=Ross&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.csail.mit.edu%2Ftimeline%2Ftimeline.php%3Fquery%3Devent%26id%3D19&amp;rft.jtitle=LCS%2FAI+Lab+Timeline%3A&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-15"><span class="mw-cite-backlink"><b><a href="#cite_ref-15">^</a></b></span> <span class="reference-text"><cite class="citation journal">Dahl, Ole Johan (2004). <a class="external text" href="http://www.mn.uio.no/ifi/english/about/ole-johan-dahl/bibliography/the-birth-of-object-orientation-the-simula-languages.pdf" rel="nofollow">"The Birth of Object Orientation: the Simula Languages"</a> <span style="font-size:85%;">(PDF)</span>. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a class="external text" href="//dx.doi.org/10.1007%2F978-3-540-39993-3_3" rel="nofollow">10.1007/978-3-540-39993-3_3</a><span class="reference-accessdate">. Retrieved <span class="nowrap">9 June</span> 2016</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.atitle=The+Birth+of+Object+Orientation%3A+the+Simula+Languages&amp;rft.aufirst=Ole+Johan&amp;rft.aulast=Dahl&amp;rft.date=2004&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fwww.mn.uio.no%2Fifi%2Fenglish%2Fabout%2Fole-johan-dahl%2Fbibliography%2Fthe-birth-of-object-orientation-the-simula-languages.pdf&amp;rft_id=info%3Adoi%2F10.1007%2F978-3-540-39993-3_3&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-16"><span class="mw-cite-backlink"><b><a href="#cite_ref-16">^</a></b></span> <span class="reference-text"><cite class="citation journal">Holmevik, Jan Rune (1994). <a class="external text" href="http://www.idi.ntnu.no/grupper/su/publ/simula/holmevik-simula-ieeeannals94.pdf" rel="nofollow">"Compiling Simula: A historical study of technological genesis"</a> <span style="font-size:85%;">(PDF)</span>. <i>IEEE Annals of the History of Computing</i>. <b>16</b> (4): 25–37. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a class="external text" href="//dx.doi.org/10.1109%2F85.329756" rel="nofollow">10.1109/85.329756</a><span class="reference-accessdate">. Retrieved <span class="nowrap">12 May</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.atitle=Compiling+Simula%3A+A+historical+study+of+technological+genesis&amp;rft.aufirst=Jan+Rune&amp;rft.aulast=Holmevik&amp;rft.date=1994&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fwww.idi.ntnu.no%2Fgrupper%2Fsu%2Fpubl%2Fsimula%2Fholmevik-simula-ieeeannals94.pdf&amp;rft_id=info%3Adoi%2F10.1109%2F85.329756&amp;rft.issue=4&amp;rft.jtitle=IEEE+Annals+of+the+History+of+Computing&amp;rft.pages=25-37&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=16"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-17"><span class="mw-cite-backlink"><b><a href="#cite_ref-17">^</a></b></span> <span class="reference-text"><cite class="citation book">Wilson, Leslie B.; Robert G. Clark (2001). <i>Comparative Programming Languages</i> (3 ed.). Addison-Wesley. p. 35. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/978-0-201-71012-0" title="Special:BookSources/978-0-201-71012-0">978-0-201-71012-0</a>. <q>Simula was based on Algol 60 with one very important addition – the class concept. It is possible to declare a class, generate objects of that class, name these objects and form a hierarchical structure of class declarations.</q></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Leslie+B.&amp;rft.aulast=Wilson&amp;rft.au=Robert+G.+Clark&amp;rft.btitle=Comparative+Programming+Languages&amp;rft.date=2001&amp;rft.edition=3&amp;rft.genre=book&amp;rft.isbn=978-0-201-71012-0&amp;rft.pages=35&amp;rft.pub=Addison-Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-18"><span class="mw-cite-backlink"><b><a href="#cite_ref-18">^</a></b></span> <span class="reference-text"><cite class="citation book">Wilson, Leslie B.; Robert G. Clark (2001). <i>Comparative Programming Languages</i> (3 ed.). Addison-Wesley. p. 35. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/978-0-201-71012-0" title="Special:BookSources/978-0-201-71012-0">978-0-201-71012-0</a>. <q>The impact of Simula on the design of programming languages is large as it is the original object-oriented language. The class concept has been taken over and used in many later languages, such as C++, Ada, Smalltalk, Eiffel and Java.</q></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Leslie+B.&amp;rft.aulast=Wilson&amp;rft.au=Robert+G.+Clark&amp;rft.btitle=Comparative+Programming+Languages&amp;rft.date=2001&amp;rft.edition=3&amp;rft.genre=book&amp;rft.isbn=978-0-201-71012-0&amp;rft.pages=35&amp;rft.pub=Addison-Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-19"><span class="mw-cite-backlink"><b><a href="#cite_ref-19">^</a></b></span> <span class="reference-text"><cite class="citation book">Bal, Henri E.; Dick Grune (1994). <i>Programming Language Essentials</i>. Addison-Wesley. p. 134. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-201-63179-2" title="Special:BookSources/0-201-63179-2">0-201-63179-2</a>. <q>Simula was the first language to use a class concept.</q></cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.au=Dick+Grune&amp;rft.aufirst=Henri+E.&amp;rft.aulast=Bal&amp;rft.btitle=Programming+Language+Essentials&amp;rft.date=1994&amp;rft.genre=book&amp;rft.isbn=0-201-63179-2&amp;rft.pages=134&amp;rft.pub=Addison-Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-20"><span class="mw-cite-backlink"><b><a href="#cite_ref-20">^</a></b></span> <span class="reference-text"><cite class="citation journal"><a href="/wiki/Tony_Hoare" title="Tony Hoare">Hoare, C. A.</a> (Nov 1965). "Record Handling". <i><a href="/wiki/ALGOL_Bulletin" title="ALGOL Bulletin">ALGOL Bulletin</a></i> (21): 39–69. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a class="external text" href="//dx.doi.org/10.1145%2F1061032.1061041" rel="nofollow">10.1145/1061032.1061041</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.atitle=Record+Handling&amp;rft.aufirst=C.+A.&amp;rft.aulast=Hoare&amp;rft.date=1965-11&amp;rft.genre=article&amp;rft_id=info%3Adoi%2F10.1145%2F1061032.1061041&amp;rft.issue=21&amp;rft.jtitle=ALGOL+Bulletin&amp;rft.pages=39-69&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-st-21"><span class="mw-cite-backlink"><b><a href="#cite_ref-st_21-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Kay, Alan. <a class="external text" href="https://web.archive.org/web/20080710144930/http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" rel="nofollow">"The Early History of Smalltalk"</a>. Archived from <a class="external text" href="http://gagne.homedns.org/~tgagne/contrib/EarlyHistoryST.html" rel="nofollow">the original</a> on 10 July 2008<span class="reference-accessdate">. Retrieved <span class="nowrap">13 September</span> 2007</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Alan&amp;rft.aulast=Kay&amp;rft.btitle=The+Early+History+of+Smalltalk&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fgagne.homedns.org%2F~tgagne%2Fcontrib%2FEarlyHistoryST.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-22"><span class="mw-cite-backlink"><b><a href="#cite_ref-22">^</a></b></span> <span class="reference-text">1995 (June) Visual <a href="/wiki/FoxPro" title="FoxPro">FoxPro</a> 3.0, FoxPro evolves from a procedural language to an object-oriented language. Visual FoxPro 3.0 introduces a database container, seamless client/server capabilities, support for ActiveX technologies, and OLE Automation and null support. <a class="external text" href="http://www.foxprohistory.org/foxprotimeline.htm#summary_of_fox_releases" rel="nofollow">Summary of Fox releases</a></span></li>
<li id="cite_note-23"><span class="mw-cite-backlink"><b><a href="#cite_ref-23">^</a></b></span> <span class="reference-text">FoxPro History web site: <a class="external text" href="http://www.foxprohistory.org/tableofcontents.htm" rel="nofollow">Foxprohistory.org</a></span></li>
<li id="cite_note-24"><span class="mw-cite-backlink"><b><a href="#cite_ref-24">^</a></b></span> <span class="reference-text">1995 Reviewers Guide to Visual FoxPro 3.0: <a class="external text" href="http://www.dfpug.de/loseblattsammlung/migration/whitepapers/vfp_rg.htm" rel="nofollow">DFpug.de</a></span></li>
<li id="cite_note-25"><span class="mw-cite-backlink"><b><a href="#cite_ref-25">^</a></b></span> <span class="reference-text"><a class="external free" href="https://books.google.co.uk/books?id=MHmqfSBTXsAC&amp;pg=PA16&amp;lpg=PA16" rel="nofollow">https://books.google.co.uk/books?id=MHmqfSBTXsAC&amp;pg=PA16&amp;lpg=PA16</a></span></li>
<li id="cite_note-26"><span class="mw-cite-backlink"><b><a href="#cite_ref-26">^</a></b></span> <span class="reference-text"><cite class="citation web"><a class="external text" href="http://www.emeraldprogramminglanguage.org/" rel="nofollow">"The Emerald Programming Language"</a>. 2011-02-26.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.btitle=The+Emerald+Programming+Language&amp;rft.date=2011-02-26&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.emeraldprogramminglanguage.org%2F&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-RDMDBobjectmis-27"><span class="mw-cite-backlink"><b><a href="#cite_ref-RDMDBobjectmis_27-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Neward, Ted (26 June 2006). <a class="external text" href="http://blogs.tedneward.com/2006/06/26/The+Vietnam+Of+Computer+Science.aspx" rel="nofollow">"The Vietnam of Computer Science"</a>. Interoperability Happens<span class="reference-accessdate">. Retrieved <span class="nowrap">2 June</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Ted&amp;rft.aulast=Neward&amp;rft.btitle=The+Vietnam+of+Computer+Science&amp;rft.date=2006-06-26&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fblogs.tedneward.com%2F2006%2F06%2F26%2FThe%2BVietnam%2BOf%2BComputer%2BScience.aspx&amp;rft.pub=Interoperability+Happens&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-Meyer230-28"><span class="mw-cite-backlink"><b><a href="#cite_ref-Meyer230_28-0">^</a></b></span> <span class="reference-text">Meyer, Second Edition, p. 230</span></li>
<li id="cite_note-29"><span class="mw-cite-backlink"><b><a href="#cite_ref-29">^</a></b></span> <span class="reference-text">M.Trofimov, <i>OOOP – The Third "O" Solution: Open OOP.</i> First Class, <a href="/wiki/Object_Management_Group" title="Object Management Group">OMG</a>, 1993, Vol. 3, issue 3, p.14.</span></li>
<li id="cite_note-30"><span class="mw-cite-backlink"><b><a href="#cite_ref-30">^</a></b></span> <span class="reference-text"><cite class="citation journal"><a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Wirth, Nicklaus</a> (2006). <a class="external text" href="https://pdfs.semanticscholar.org/10bd/dc49b85196aaa6715dd46843d9dcffa38358.pdf" rel="nofollow">"Good Ideas, Through the Looking Glass"</a> <span style="font-size:85%;">(PDF)</span>. <i><a href="/wiki/Computer_(magazine)" title="Computer (magazine)">Computer (magazine)</a></i>. <b>39</b> (1): 28–39<span class="reference-accessdate">. Retrieved <span class="nowrap">2016-10-02</span></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.atitle=Good+Ideas%2C+Through+the+Looking+Glass&amp;rft.aufirst=Nicklaus&amp;rft.aulast=Wirth&amp;rft.date=2006&amp;rft.genre=article&amp;rft_id=https%3A%2F%2Fpdfs.semanticscholar.org%2F10bd%2Fdc49b85196aaa6715dd46843d9dcffa38358.pdf&amp;rft.issue=1&amp;rft.jtitle=Computer+%28magazine%29&amp;rft.pages=28-39&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=39"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-executioniKoN-31"><span class="mw-cite-backlink"><b><a href="#cite_ref-executioniKoN_31-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Yegge, Steve (30 March 2006). <a class="external text" href="http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html" rel="nofollow">"Execution in the Kingdom of Nouns"</a>. steve-yegge.blogspot.com<span class="reference-accessdate">. Retrieved <span class="nowrap">3 July</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Steve&amp;rft.aulast=Yegge&amp;rft.btitle=Execution+in+the+Kingdom+of+Nouns&amp;rft.date=2006-03-30&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fsteve-yegge.blogspot.com%2F2006%2F03%2Fexecution-in-kingdom-of-nouns.html&amp;rft.pub=steve-yegge.blogspot.com&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-executioniKoN2-32"><span class="mw-cite-backlink"><b><a href="#cite_ref-executioniKoN2_32-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Boronczyk, Timothy (11 June 2009). <a class="external text" href="http://zaemis.blogspot.com/2009/06/whats-wrong-with-oop.html" rel="nofollow">"What's Wrong with OOP"</a>. zaemis.blogspot.com<span class="reference-accessdate">. Retrieved <span class="nowrap">3 July</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Timothy&amp;rft.aulast=Boronczyk&amp;rft.btitle=What%27s+Wrong+with+OOP&amp;rft.date=2009-06-11&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fzaemis.blogspot.com%2F2009%2F06%2Fwhats-wrong-with-oop.html&amp;rft.pub=zaemis.blogspot.com&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-realisticcodereuse-33"><span class="mw-cite-backlink"><b><a href="#cite_ref-realisticcodereuse_33-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Ambler, Scott (1 January 1998). <a class="external text" href="http://www.drdobbs.com/184415594" rel="nofollow">"A Realistic Look at Object-Oriented Reuse"</a>. www.drdobbs.com<span class="reference-accessdate">. Retrieved <span class="nowrap">4 July</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Scott&amp;rft.aulast=Ambler&amp;rft.btitle=A+Realistic+Look+at+Object-Oriented+Reuse&amp;rft.date=1998-01-01&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.drdobbs.com%2F184415594&amp;rft.pub=www.drdobbs.com&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-flaws-34"><span class="mw-cite-backlink"><b><a href="#cite_ref-flaws_34-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Shelly, Asaf (22 August 2008). <a class="external text" href="http://software.intel.com/en-us/blogs/2008/08/22/flaws-of-object-oriented-modeling/" rel="nofollow">"Flaws of Object Oriented Modeling"</a>. Intel Software Network<span class="reference-accessdate">. Retrieved <span class="nowrap">4 July</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Asaf&amp;rft.aulast=Shelly&amp;rft.btitle=Flaws+of+Object+Oriented+Modeling&amp;rft.date=2008-08-22&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fsoftware.intel.com%2Fen-us%2Fblogs%2F2008%2F08%2F22%2Fflaws-of-object-oriented-modeling%2F&amp;rft.pub=Intel+Software+Network&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-multithreadingisaverb-35"><span class="mw-cite-backlink"><b><a href="#cite_ref-multithreadingisaverb_35-0">^</a></b></span> <span class="reference-text"><cite class="citation web">James, Justin (1 October 2007). <a class="external text" href="http://blogs.techrepublic.com.com/programming-and-development/?p=518" rel="nofollow">"Multithreading is a verb not a noun"</a>. techrepublic.com<span class="reference-accessdate">. Retrieved <span class="nowrap">4 July</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Justin&amp;rft.aulast=James&amp;rft.btitle=Multithreading+is+a+verb+not+a+noun&amp;rft.date=2007-10-01&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fblogs.techrepublic.com.com%2Fprogramming-and-development%2F%3Fp%3D518&amp;rft.pub=techrepublic.com&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-multicore-36"><span class="mw-cite-backlink"><b><a href="#cite_ref-multicore_36-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Shelly, Asaf (22 August 2008). <a class="external text" href="http://support.microsoft.com/?scid=kb%3Ben-us%3B558117" rel="nofollow">"HOW TO: Multicore Programming (Multiprocessing) Visual C++ Class Design Guidelines, Member Functions"</a>. support.microsoft.com<span class="reference-accessdate">. Retrieved <span class="nowrap">4 July</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Asaf&amp;rft.aulast=Shelly&amp;rft.btitle=HOW+TO%3A+Multicore+Programming+%28Multiprocessing%29+Visual+C%2B%2B+Class+Design+Guidelines%2C+Member+Functions&amp;rft.date=2008-08-22&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fsupport.microsoft.com%2F%3Fscid%3Dkb%253Ben-us%253B558117&amp;rft.pub=support.microsoft.com&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-37"><span class="mw-cite-backlink"><b><a href="#cite_ref-37">^</a></b></span> <span class="reference-text"><cite class="citation web"><a href="/wiki/Robert_Harper_(computer_scientist)" title="Robert Harper (computer scientist)">Robert Harper</a> (17 April 2011). <a class="external text" href="http://existentialtype.wordpress.com/2011/04/17/some-advice-on-teaching-fp/" rel="nofollow">"Some thoughts on teaching FP"</a>. Existential Type Blog<span class="reference-accessdate">. Retrieved <span class="nowrap">5 December</span> 2011</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.au=Robert+Harper&amp;rft.btitle=Some+thoughts+on+teaching+FP&amp;rft.date=2011-04-17&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fexistentialtype.wordpress.com%2F2011%2F04%2F17%2Fsome-advice-on-teaching-fp%2F&amp;rft.pub=Existential+Type+Blog&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-badprop-38"><span class="mw-cite-backlink">^ <a href="#cite_ref-badprop_38-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-badprop_38-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><cite class="citation journal"><a href="/wiki/Luca_Cardelli" title="Luca Cardelli">Cardelli, Luca</a> (1996). <a class="external text" href="http://lucacardelli.name/Papers/BadPropertiesOfOO.html" rel="nofollow">"Bad Engineering Properties of Object-Oriented Languages"</a>. <i>ACM Comput. Surv</i>. ACM. <b>28</b> (4es): 150. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a class="external text" href="//dx.doi.org/10.1145%2F242224.242415" rel="nofollow">10.1145/242224.242415</a>. <a href="/wiki/International_Standard_Serial_Number" title="International Standard Serial Number">ISSN</a> <a class="external text" href="//www.worldcat.org/issn/0360-0300" rel="nofollow">0360-0300</a><span class="reference-accessdate">. Retrieved <span class="nowrap">21 April</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.atitle=Bad+Engineering+Properties+of+Object-Oriented+Languages&amp;rft.aufirst=Luca&amp;rft.aulast=Cardelli&amp;rft.date=1996&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Flucacardelli.name%2FPapers%2FBadPropertiesOfOO.html&amp;rft_id=info%3Adoi%2F10.1145%2F242224.242415&amp;rft.issn=0360-0300&amp;rft.issue=4es&amp;rft.jtitle=ACM+Comput.+Surv.&amp;rft.pages=150&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=28"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-armstrongjoe-39"><span class="mw-cite-backlink">^ <a href="#cite_ref-armstrongjoe_39-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-armstrongjoe_39-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">Armstrong, Joe. In <i>Coders at Work: Reflections on the Craft of Programming.</i> Peter Seibel, ed. <a class="external text" href="http://www.codersatwork.com/" rel="nofollow">Codersatwork.com</a>, Accessed 13 November 2009.</span></li>
<li id="cite_note-stepanov-40"><span class="mw-cite-backlink">^ <a href="#cite_ref-stepanov_40-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-stepanov_40-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><cite class="citation web"><a href="/wiki/Alexander_Stepanov" title="Alexander Stepanov">Stepanov, Alexander</a>. <a class="external text" href="http://www.stlport.org/resources/StepanovUSA.html" rel="nofollow">"STLport: An Interview with A. Stepanov"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">21 April</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Alexander&amp;rft.aulast=Stepanov&amp;rft.btitle=STLport%3A+An+Interview+with+A.+Stepanov&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.stlport.org%2Fresources%2FStepanovUSA.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-hickey-41"><span class="mw-cite-backlink">^ <a href="#cite_ref-hickey_41-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-hickey_41-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text">Rich Hickey, JVM Languages Summit 2009 keynote, <a class="external text" href="http://www.infoq.com/presentations/Are-We-There-Yet-Rich-Hickey" rel="nofollow">Are We There Yet?</a> November 2009.</span></li>
<li id="cite_note-42"><span class="mw-cite-backlink"><b><a href="#cite_ref-42">^</a></b></span> <span class="reference-text"><cite class="citation journal">Potok, Thomas; Mladen Vouk; Andy Rindos (1999). <a class="external text" href="http://www.csm.ornl.gov/~v8q/Homepage/Papers%20Old/spetep-%20printable.pdf" rel="nofollow">"Productivity Analysis of Object-Oriented Software Developed in a Commercial Environment"</a> <span style="font-size:85%;">(PDF)</span>. <i>Software – Practice and Experience</i>. <b>29</b> (10): 833–847. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a class="external text" href="//dx.doi.org/10.1002%2F%28SICI%291097-024X%28199908%2929%3A10%3C833%3A%3AAID-SPE258%3E3.0.CO%3B2-P" rel="nofollow">10.1002/(SICI)1097-024X(199908)29:10&lt;833::AID-SPE258&gt;3.0.CO;2-P</a><span class="reference-accessdate">. Retrieved <span class="nowrap">21 April</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.atitle=Productivity+Analysis+of+Object-Oriented+Software+Developed+in+a+Commercial+Environment&amp;rft.au=Andy+Rindos&amp;rft.aufirst=Thomas&amp;rft.aulast=Potok&amp;rft.au=Mladen+Vouk&amp;rft.date=1999&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fwww.csm.ornl.gov%2F~v8q%2FHomepage%2FPapers%2520Old%2Fspetep-%2520printable.pdf&amp;rft_id=info%3Adoi%2F10.1002%2F%28SICI%291097-024X%28199908%2929%3A10%3C833%3A%3AAID-SPE258%3E3.0.CO%3B2-P&amp;rft.issue=10&amp;rft.jtitle=Software+%93+Practice+and+Experience&amp;rft.pages=833-847&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=29"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-DatePage650-43"><span class="mw-cite-backlink"><b><a href="#cite_ref-DatePage650_43-0">^</a></b></span> <span class="reference-text">C. J. Date, Introduction to Database Systems, 6th-ed., Page 650</span></li>
<li id="cite_note-ThirdManifesto-44"><span class="mw-cite-backlink"><b><a href="#cite_ref-ThirdManifesto_44-0">^</a></b></span> <span class="reference-text">C. J. Date, Hugh Darwen. <i>Foundation for Future Database Systems: The Third Manifesto</i> (2nd Edition)</span></li>
<li id="cite_note-lawrence-45"><span class="mw-cite-backlink"><b><a href="#cite_ref-lawrence_45-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Krubner, Lawrence. <a class="external text" href="http://www.smashcompany.com/technology/object-oriented-programming-is-an-expensive-disaster-which-must-end" rel="nofollow">"Object Oriented Programming is an expensive disaster which must end"</a>. smashcompany.com<span class="reference-accessdate">. Retrieved <span class="nowrap">14 October</span> 2014</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Lawrence&amp;rft.aulast=Krubner&amp;rft.btitle=Object+Oriented+Programming+is+an+expensive+disaster+which+must+end&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.smashcompany.com%2Ftechnology%2Fobject-oriented-programming-is-an-expensive-disaster-which-must-end&amp;rft.pub=smashcompany.com&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-graham-46"><span class="mw-cite-backlink"><b><a href="#cite_ref-graham_46-0">^</a></b></span> <span class="reference-text"><cite class="citation web"><a href="/wiki/Paul_Graham_(computer_programmer)" title="Paul Graham (computer programmer)">Graham, Paul</a>. <a class="external text" href="http://www.paulgraham.com/noop.html" rel="nofollow">"Why ARC isn't especially Object-Oriented."</a>. PaulGraham.com<span class="reference-accessdate">. Retrieved <span class="nowrap">13 November</span> 2009</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Paul&amp;rft.aulast=Graham&amp;rft.btitle=Why+ARC+isn%27t+especially+Object-Oriented.&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.paulgraham.com%2Fnoop.html&amp;rft.pub=PaulGraham.com&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-yegge-47"><span class="mw-cite-backlink"><b><a href="#cite_ref-yegge_47-0">^</a></b></span> <span class="reference-text"><a class="external text" href="http://steve-yegge.blogspot.com/2006/03/execution-in-kingdom-of-nouns.html" rel="nofollow">Stevey's Blog Rants</a></span></li>
<li id="cite_note-Eric_S._Raymond_2003-48"><span class="mw-cite-backlink">^ <a href="#cite_ref-Eric_S._Raymond_2003_48-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Eric_S._Raymond_2003_48-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><cite class="citation web">Eric S. Raymond (2003). <a class="external text" href="http://www.catb.org/esr/writings/taoup/html/unix_and_oo.html" rel="nofollow">"The Art of Unix Programming: Unix and Object-Oriented Languages"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">2014-08-06</span></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.au=Eric+S.+Raymond&amp;rft.btitle=The+Art+of+Unix+Programming%3A+Unix+and+Object-Oriented+Languages&amp;rft.date=2003&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.catb.org%2Fesr%2Fwritings%2Ftaoup%2Fhtml%2Funix_and_oo.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-49"><span class="mw-cite-backlink"><b><a href="#cite_ref-49">^</a></b></span> <span class="reference-text"><cite class="citation web">Pike, Rob (2012-06-25). <a class="external text" href="https://commandcenter.blogspot.com/2012/06/less-is-exponentially-more.html" rel="nofollow">"Less is exponentially more"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">2016-10-01</span></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Rob&amp;rft.aulast=Pike&amp;rft.btitle=Less+is+exponentially+more&amp;rft.date=2012-06-25&amp;rft.genre=unknown&amp;rft_id=https%3A%2F%2Fcommandcenter.blogspot.com%2F2012%2F06%2Fless-is-exponentially-more.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-50"><span class="mw-cite-backlink"><b><a href="#cite_ref-50">^</a></b></span> <span class="reference-text"><cite class="citation web">Pike, Rob (2012-11-14). <a class="external text" href="https://plus.google.com/+RobPikeTheHuman/posts/hoJdanihKwb" rel="nofollow">"A few years ago I saw this page"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">2016-10-01</span></span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Rob&amp;rft.aulast=Pike&amp;rft.btitle=A+few+years+ago+I+saw+this+page&amp;rft.date=2012-11-14&amp;rft.genre=unknown&amp;rft_id=https%3A%2F%2Fplus.google.com%2F%2BRobPikeTheHuman%2Fposts%2FhoJdanihKwb&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-poll97-51"><span class="mw-cite-backlink"><b><a href="#cite_ref-poll97_51-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Poll, Erik. <a class="external text" href="http://www.cs.ru.nl/E.Poll/papers/kyoto97.pdf" rel="nofollow">"Subtyping and Inheritance for Categorical Datatypes"</a> <span style="font-size:85%;">(PDF)</span><span class="reference-accessdate">. Retrieved <span class="nowrap">5 June</span> 2011</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Erik&amp;rft.aulast=Poll&amp;rft.btitle=Subtyping+and+Inheritance+for+Categorical+Datatypes&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fwww.cs.ru.nl%2FE.Poll%2Fpapers%2Fkyoto97.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-AbadiCardelli-52"><span class="mw-cite-backlink">^ <a href="#cite_ref-AbadiCardelli_52-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-AbadiCardelli_52-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><cite class="citation book"><a class="mw-redirect" href="/wiki/Martin_Abadi" title="Martin Abadi">Abadi, Martin</a>; Cardelli, Luca (1996). <a class="external text" href="http://portal.acm.org/citation.cfm?id=547964&amp;dl=ACM&amp;coll=portal" rel="nofollow"><i>A Theory of Objects</i></a>. Springer-Verlag New York, Inc. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-387-94775-2" title="Special:BookSources/0-387-94775-2">0-387-94775-2</a><span class="reference-accessdate">. Retrieved <span class="nowrap">21 April</span> 2010</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.au=Cardelli%2C+Luca&amp;rft.aufirst=Martin&amp;rft.aulast=Abadi&amp;rft.btitle=A+Theory+of+Objects&amp;rft.date=1996&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fportal.acm.org%2Fcitation.cfm%3Fid%3D547964%26dl%3DACM%26coll%3Dportal&amp;rft.isbn=0-387-94775-2&amp;rft.pub=Springer-Verlag+New+York%2C+Inc.&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
</ol>
</div>
<h2><span class="mw-headline" id="Further_reading">Further reading</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=27" title="Edit section: Further reading">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><cite class="citation book"><a class="mw-redirect" href="/wiki/Martin_Abadi" title="Martin Abadi">Abadi, Martin</a>; <a href="/wiki/Luca_Cardelli" title="Luca Cardelli">Luca Cardelli</a> (1998). <i>A Theory of Objects</i>. <a class="mw-redirect" href="/wiki/Springer_Verlag" title="Springer Verlag">Springer Verlag</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-387-94775-2" title="Special:BookSources/0-387-94775-2">0-387-94775-2</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Martin&amp;rft.aulast=Abadi&amp;rft.au=Luca+Cardelli&amp;rft.btitle=A+Theory+of+Objects&amp;rft.date=1998&amp;rft.genre=book&amp;rft.isbn=0-387-94775-2&amp;rft.pub=Springer+Verlag&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book"><a class="mw-redirect" href="/wiki/Harold_Abelson" title="Harold Abelson">Abelson, Harold</a>; <a href="/wiki/Gerald_Jay_Sussman" title="Gerald Jay Sussman">Gerald Jay Sussman</a> (1997). <a class="external text" href="http://mitpress.mit.edu/sicp/" rel="nofollow"><i>Structure and Interpretation of Computer Programs</i></a>. <a href="/wiki/MIT_Press" title="MIT Press">MIT Press</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-262-01153-0" title="Special:BookSources/0-262-01153-0">0-262-01153-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Harold&amp;rft.au=Gerald+Jay+Sussman&amp;rft.aulast=Abelson&amp;rft.btitle=Structure+and+Interpretation+of+Computer+Programs&amp;rft.date=1997&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fmitpress.mit.edu%2Fsicp%2F&amp;rft.isbn=0-262-01153-0&amp;rft.pub=MIT+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation journal">Armstrong, Deborah J. (February 2006). <a class="external text" href="http://portal.acm.org/citation.cfm?id=1113040" rel="nofollow">"The Quarks of Object-Oriented Development"</a>. <i>Communications of the ACM</i>. <b>49</b> (2): 123–128. <a href="/wiki/Digital_object_identifier" title="Digital object identifier">doi</a>:<a class="external text" href="//dx.doi.org/10.1145%2F1113034.1113040" rel="nofollow">10.1145/1113034.1113040</a>. <a href="/wiki/International_Standard_Serial_Number" title="International Standard Serial Number">ISSN</a> <a class="external text" href="//www.worldcat.org/issn/0001-0782" rel="nofollow">0001-0782</a><span class="reference-accessdate">. Retrieved <span class="nowrap">8 August</span> 2006</span>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.atitle=The+Quarks+of+Object-Oriented+Development&amp;rft.aufirst=Deborah+J.&amp;rft.aulast=Armstrong&amp;rft.date=2006-02&amp;rft.genre=article&amp;rft_id=http%3A%2F%2Fportal.acm.org%2Fcitation.cfm%3Fid%3D1113040&amp;rft_id=info%3Adoi%2F10.1145%2F1113034.1113040&amp;rft.issn=0001-0782&amp;rft.issue=2&amp;rft.jtitle=Communications+of+the+ACM&amp;rft.pages=123-128&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal&amp;rft.volume=49"><span style="display:none;"> </span></span></li>
<li><cite class="citation book"><a href="/wiki/Grady_Booch" title="Grady Booch">Booch, Grady</a> (1997). <i>Object-Oriented Analysis and Design with Applications</i>. <a href="/wiki/Addison-Wesley" title="Addison-Wesley">Addison-Wesley</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-8053-5340-2" title="Special:BookSources/0-8053-5340-2">0-8053-5340-2</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Grady&amp;rft.aulast=Booch&amp;rft.btitle=Object-Oriented+Analysis+and+Design+with+Applications&amp;rft.date=1997&amp;rft.genre=book&amp;rft.isbn=0-8053-5340-2&amp;rft.pub=Addison-Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book">Eeles, Peter; <a href="/wiki/Oliver_Sims" title="Oliver Sims">Oliver Sims</a> (1998). <i>Building Business Objects</i>. <a href="/wiki/John_Wiley_%26_Sons" title="John Wiley &amp; Sons">John Wiley &amp; Sons</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-471-19176-0" title="Special:BookSources/0-471-19176-0">0-471-19176-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Peter&amp;rft.aulast=Eeles&amp;rft.au=Oliver+Sims&amp;rft.btitle=Building+Business+Objects&amp;rft.date=1998&amp;rft.genre=book&amp;rft.isbn=0-471-19176-0&amp;rft.pub=John+Wiley+%26+Sons&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book"><a href="/wiki/Erich_Gamma" title="Erich Gamma">Gamma, Erich</a>; <a class="mw-redirect" href="/wiki/Richard_Helm" title="Richard Helm">Richard Helm</a>, <a href="/wiki/Ralph_Johnson_(computer_scientist)" title="Ralph Johnson (computer scientist)">Ralph Johnson</a>, <a href="/wiki/John_Vlissides" title="John Vlissides">John Vlissides</a> (1995). <i>Design Patterns: Elements of Reusable Object Oriented Software</i>. Addison-Wesley. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-201-63361-2" title="Special:BookSources/0-201-63361-2">0-201-63361-2</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Erich&amp;rft.aulast=Gamma&amp;rft.btitle=Design+Patterns%3A+Elements+of+Reusable+Object+Oriented+Software&amp;rft.date=1995&amp;rft.genre=book&amp;rft.isbn=0-201-63361-2&amp;rft.pub=Addison-Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span> <span class="error citation-comment" style="font-size:100%">Cite uses deprecated parameter <code style="color:inherit; border:inherit; padding:inherit;">|coauthors=</code> (<a href="/wiki/Help:CS1_errors#deprecated_params" title="Help:CS1 errors">help</a>)</span></li>
<li><cite class="citation book"><a href="/wiki/Paul_Harmon_(management_author)" title="Paul Harmon (management author)">Harmon, Paul</a>; William Morrissey (1996). <i>The Object Technology Casebook – Lessons from Award-Winning Business Applications</i>. John Wiley &amp; Sons. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-471-14717-6" title="Special:BookSources/0-471-14717-6">0-471-14717-6</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Paul&amp;rft.aulast=Harmon&amp;rft.au=William+Morrissey&amp;rft.btitle=The+Object+Technology+Casebook+%93+Lessons+from+Award-Winning+Business+Applications&amp;rft.date=1996&amp;rft.genre=book&amp;rft.isbn=0-471-14717-6&amp;rft.pub=John+Wiley+%26+Sons&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book"><a href="/wiki/Ivar_Jacobson" title="Ivar Jacobson">Jacobson, Ivar</a> (1992). <i>Object-Oriented Software Engineering: A <a href="/wiki/Use_case" title="Use case">Use Case</a>-Driven Approach</i>. Addison-Wesley. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-201-54435-0" title="Special:BookSources/0-201-54435-0">0-201-54435-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Ivar&amp;rft.aulast=Jacobson&amp;rft.btitle=Object-Oriented+Software+Engineering%3A+A+Use+Case-Driven+Approach&amp;rft.date=1992&amp;rft.genre=book&amp;rft.isbn=0-201-54435-0&amp;rft.pub=Addison-Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book"><a href="/wiki/Alan_Kay" title="Alan Kay">Kay, Alan</a>. <a class="external text" href="http://gagne.homedns.org/%7etgagne/contrib/EarlyHistoryST.html" rel="nofollow"><i>The Early History of Smalltalk</i></a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Alan&amp;rft.aulast=Kay&amp;rft.btitle=The+Early+History+of+Smalltalk&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fgagne.homedns.org%2F%257etgagne%2Fcontrib%2FEarlyHistoryST.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book"><a href="/wiki/Bertrand_Meyer" title="Bertrand Meyer">Meyer, Bertrand</a> (1997). <i><a href="/wiki/Object-Oriented_Software_Construction" title="Object-Oriented Software Construction">Object-Oriented Software Construction</a></i>. <a href="/wiki/Prentice_Hall" title="Prentice Hall">Prentice Hall</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-13-629155-4" title="Special:BookSources/0-13-629155-4">0-13-629155-4</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Bertrand&amp;rft.aulast=Meyer&amp;rft.btitle=Object-Oriented+Software+Construction&amp;rft.date=1997&amp;rft.genre=book&amp;rft.isbn=0-13-629155-4&amp;rft.pub=Prentice+Hall&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book" id="CITEREFPecinovsky2013">Pecinovsky, Rudolf (2013). <a class="external text" href="http://pub.bruckner.cz/titles/oop" rel="nofollow"><i>OOP – Learn Object Oriented Thinking &amp; Programming</i></a>. Bruckner Publishing. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/978-80-904661-8-0" title="Special:BookSources/978-80-904661-8-0">978-80-904661-8-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Rudolf&amp;rft.aulast=Pecinovsky&amp;rft.btitle=OOP+%93+Learn+Object+Oriented+Thinking+%26+Programming&amp;rft.date=2013&amp;rft.genre=book&amp;rft_id=http%3A%2F%2Fpub.bruckner.cz%2Ftitles%2Foop&amp;rft.isbn=978-80-904661-8-0&amp;rft.pub=Bruckner+Publishing&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book"><a href="/wiki/James_Rumbaugh" title="James Rumbaugh">Rumbaugh, James</a>; Michael Blaha; William Premerlani; Frederick Eddy; William Lorensen (1991). <i>Object-Oriented Modeling and Design</i>. Prentice Hall. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-13-629841-9" title="Special:BookSources/0-13-629841-9">0-13-629841-9</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=James&amp;rft.au=Frederick+Eddy&amp;rft.aulast=Rumbaugh&amp;rft.au=Michael+Blaha&amp;rft.au=William+Lorensen&amp;rft.au=William+Premerlani&amp;rft.btitle=Object-Oriented+Modeling+and+Design&amp;rft.date=1991&amp;rft.genre=book&amp;rft.isbn=0-13-629841-9&amp;rft.pub=Prentice+Hall&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book">Schach, Stephen (2006). <i>Object-Oriented and Classical Software Engineering, Seventh Edition</i>. <a class="mw-redirect" href="/wiki/McGraw-Hill" title="McGraw-Hill">McGraw-Hill</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-07-319126-4" title="Special:BookSources/0-07-319126-4">0-07-319126-4</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Stephen&amp;rft.aulast=Schach&amp;rft.btitle=Object-Oriented+and+Classical+Software+Engineering%2C+Seventh+Edition&amp;rft.date=2006&amp;rft.genre=book&amp;rft.isbn=0-07-319126-4&amp;rft.pub=McGraw-Hill&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book">Schreiner, Axel-Tobias (1993). <i>Object oriented programming with ANSI-C</i>. Hanser. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/3-446-17426-5" title="Special:BookSources/3-446-17426-5">3-446-17426-5</a>. <a href="/wiki/Handle_System" title="Handle System">hdl</a>:<a class="external text" href="//hdl.handle.net/1850%2F8544" rel="nofollow">1850/8544</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Axel-Tobias&amp;rft.aulast=Schreiner&amp;rft.btitle=Object+oriented+programming+with+ANSI-C&amp;rft.date=1993&amp;rft.genre=book&amp;rft.isbn=3-446-17426-5&amp;rft.pub=Hanser&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book">Taylor, David A. (1992). <i>Object-Oriented Information Systems – Planning and Implementation</i>. John Wiley &amp; Sons. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-471-54364-0" title="Special:BookSources/0-471-54364-0">0-471-54364-0</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=David+A.&amp;rft.aulast=Taylor&amp;rft.btitle=Object-Oriented+Information+Systems+%93+Planning+and+Implementation&amp;rft.date=1992&amp;rft.genre=book&amp;rft.isbn=0-471-54364-0&amp;rft.pub=John+Wiley+%26+Sons&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book">Weisfeld, Matt (2009). <i>The Object-Oriented Thought Process, Third Edition</i>. <a href="/wiki/Addison-Wesley" title="Addison-Wesley">Addison-Wesley</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-672-33016-4" title="Special:BookSources/0-672-33016-4">0-672-33016-4</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=Matt&amp;rft.aulast=Weisfeld&amp;rft.btitle=The+Object-Oriented+Thought+Process%2C+Third+Edition&amp;rft.date=2009&amp;rft.genre=book&amp;rft.isbn=0-672-33016-4&amp;rft.pub=Addison-Wesley&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
<li><cite class="citation book">West, David (2004). <i>Object Thinking (Developer Reference)</i>. <a href="/wiki/Microsoft_Press" title="Microsoft Press">Microsoft Press</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0735619654" title="Special:BookSources/0735619654">0735619654</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AObject-oriented+programming&amp;rft.aufirst=David&amp;rft.aulast=West&amp;rft.btitle=Object+Thinking+%28Developer+Reference%29&amp;rft.date=2004&amp;rft.genre=book&amp;rft.isbn=0735619654&amp;rft.pub=Microsoft+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></li>
</ul>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=28" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table class="mbox-small plainlinks sistersitebox" role="presentation" style="border:1px solid #aaa;background-color:#f9f9f9">
<tr>
<td class="mbox-image"><a class="image" href="/wiki/File:Wikiquote-logo.svg"><img alt="" class="noviewer" data-file-height="355" data-file-width="300" height="40" src="//upload.wikimedia.org/wikipedia/commons/thumb/f/fa/Wikiquote-logo.svg/34px-Wikiquote-logo.svg.png" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/f/fa/Wikiquote-logo.svg/51px-Wikiquote-logo.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/fa/Wikiquote-logo.svg/68px-Wikiquote-logo.svg.png 2x" width="34"/></a></td>
<td class="mbox-text plainlist">Wikiquote has quotations related to: <i><b><a class="extiw" href="https://en.wikiquote.org/wiki/Object-orientation" title="q:Object-orientation">Object-orientation</a></b></i></td>
</tr>
</table>
<table class="mbox-small plainlinks sistersitebox" role="presentation" style="border:1px solid #aaa;background-color:#f9f9f9">
<tr>
<td class="mbox-image"><a class="image" href="/wiki/File:Wikiversity-logo.svg"><img alt="" class="noviewer" data-file-height="800" data-file-width="1000" height="32" src="//upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/40px-Wikiversity-logo.svg.png" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/60px-Wikiversity-logo.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/9/91/Wikiversity-logo.svg/80px-Wikiversity-logo.svg.png 2x" width="40"/></a></td>
<td class="mbox-text plainlist">Wikiversity has learning materials about <i><b><a class="extiw" href="https://en.wikiversity.org/wiki/Special:Search/Object-oriented_programming" title="v:Special:Search/Object-oriented programming">Object-oriented programming</a></b></i> at
<div style="margin-left: 10px;"><a class="extiw" href="https://en.wikiversity.org/wiki/Topic:Object-Oriented_Programming" title="v:Topic:Object-Oriented Programming">Topic:Object-Oriented Programming</a></div>
</td>
</tr>
</table>
<table class="mbox-small plainlinks sistersitebox" role="presentation" style="border:1px solid #aaa;background-color:#f9f9f9">
<tr>
<td class="mbox-image"><a class="image" href="/wiki/File:Wikibooks-logo-en-noslogan.svg"><img alt="" class="noviewer" data-file-height="400" data-file-width="400" height="40" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/60px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/80px-Wikibooks-logo-en-noslogan.svg.png 2x" width="40"/></a></td>
<td class="mbox-text plainlist">Wikibooks has a book on the topic of: <i><b><a class="extiw" href="//en.wikibooks.org/wiki/Object_Oriented_Programming" title="wikibooks:Object Oriented Programming">Object Oriented Programming</a></b></i></td>
</tr>
</table>
<ul>
<li><a class="external text" href="https://www.dmoz.org/Computers/Programming/Methodologies/Object-Oriented" rel="nofollow">Object-oriented programming</a> at <a href="/wiki/DMOZ" title="DMOZ">DMOZ</a></li>
<li><a class="external text" href="http://www.objectorienteddesign.org" rel="nofollow">Real life and real world example of object oriented programming</a></li>
<li><a class="external text" href="http://www.codeproject.com/Articles/22769/Introduction-to-Object-Oriented-Programming-Concep" rel="nofollow">Introduction to Object Oriented Programming Concepts (OOP) and More</a> by L.W.C. Nirosh</li>
<li><a class="external text" href="http://software.intel.com/en-us/blogs/2008/08/22/flaws-of-object-oriented-modeling/" rel="nofollow">Discussion about the flaws of OOD</a></li>
<li><a class="external text" href="http://java.sun.com/docs/books/tutorial/java/concepts/index.html" rel="nofollow">OOP Concepts (Java Tutorials)</a></li>
<li><a class="external text" href="https://se9book.wordpress.com/2011/08/29/science-or-snake-oil-empirical-software-engineering/" rel="nofollow">Science or Snake Oil: Empirical Software engineering</a> Thoughts on software and systems engineering, by Ian Sommerville (2011-8-29)</li>
</ul>
<div aria-labelledby="Types_of_programming_languages" class="navbox" role="navigation" style="padding:3px">
<table class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
<tr>
<th class="navbox-title" colspan="2" scope="col">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="/wiki/Template:Types_of_programming_languages" title="Template:Types of programming languages"><abbr style=";;background:none transparent;border:none;" title="View this template">v</abbr></a></li>
<li class="nv-talk"><a href="/wiki/Template_talk:Types_of_programming_languages" title="Template talk:Types of programming languages"><abbr style=";;background:none transparent;border:none;" title="Discuss this template">t</abbr></a></li>
<li class="nv-edit"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Template:Types_of_programming_languages&amp;action=edit"><abbr style=";;background:none transparent;border:none;" title="Edit this template">e</abbr></a></li>
</ul>
</div>
<div id="Types_of_programming_languages" style="font-size:114%"><a href="/wiki/Programming_paradigm" title="Programming paradigm">Types of programming languages</a></div>
</th>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<td class="navbox-list navbox-odd hlist" colspan="2" style="width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Actor_model" title="Actor model">Actor-based</a></li>
<li><a href="/wiki/Array_programming" title="Array programming">Array</a></li>
<li><a href="/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">Aspect-oriented</a></li>
<li><a href="/wiki/Class-based_programming" title="Class-based programming">Class-based</a></li>
<li><a href="/wiki/Concatenative_programming_language" title="Concatenative programming language">Concatenative</a></li>
<li><a href="/wiki/Concurrent_computing" title="Concurrent computing">Concurrent</a></li>
<li><a href="/wiki/Data-structured_language" title="Data-structured language">Data-structured</a></li>
<li><a href="/wiki/Dataflow_programming" title="Dataflow programming">Dataflow</a></li>
<li><a href="/wiki/Declarative_programming" title="Declarative programming">Declarative</a></li>
<li><a href="/wiki/Domain-specific_language" title="Domain-specific language">Domain-specific</a></li>
<li><a href="/wiki/Dynamic_programming_language" title="Dynamic programming language">Dynamic</a></li>
<li><a href="/wiki/Esoteric_programming_language" title="Esoteric programming language">Esoteric</a></li>
<li><a href="/wiki/Event-driven_programming" title="Event-driven programming">Event-driven</a></li>
<li><a href="/wiki/Extensible_programming" title="Extensible programming">Extensible</a></li>
<li><a href="/wiki/Functional_programming" title="Functional programming">Functional</a></li>
<li><a href="/wiki/Imperative_programming" title="Imperative programming">Imperative</a></li>
<li><a href="/wiki/Logic_programming" title="Logic programming">Logic</a></li>
<li><a href="/wiki/Macro_(computer_science)" title="Macro (computer science)">Macro</a></li>
<li><a href="/wiki/Metaprogramming" title="Metaprogramming">Metaprogramming</a>+*<a class="mw-redirect" href="/wiki/Multi-paradigm_programming_language" title="Multi-paradigm programming language">Multi-paradigm</a></li>
<li><a href="/wiki/Object-based_language" title="Object-based language">Object-based</a></li>
<li><strong class="selflink">Object-oriented</strong></li>
<li><a class="mw-redirect" href="/wiki/Pipeline_programming" title="Pipeline programming">Pipeline</a></li>
<li><a href="/wiki/Procedural_programming" title="Procedural programming">Procedural</a></li>
<li><a href="/wiki/Prototype-based_programming" title="Prototype-based programming">Prototype-based</a></li>
<li><a href="/wiki/Reflection_(computer_programming)" title="Reflection (computer programming)">Reflective</a></li>
<li><a href="/wiki/Rule-based_system" title="Rule-based system">Rule-based</a></li>
<li><a href="/wiki/Scripting_language" title="Scripting language">Scripting</a></li>
<li><a href="/wiki/Synchronous_programming_language" title="Synchronous programming language">Synchronous</a></li>
<li><a class="mw-redirect" href="/wiki/Templating_language" title="Templating language">Templating</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<td class="navbox-list navbox-even hlist" colspan="2" style="width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Assembly_language" title="Assembly language">Assembly</a></li>
<li><a href="/wiki/Compiled_language" title="Compiled language">Compiled</a></li>
<li><a href="/wiki/Interpreted_language" title="Interpreted language">Interpreted</a></li>
<li><a href="/wiki/Machine_code" title="Machine code">Machine</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<td class="navbox-list navbox-odd hlist" colspan="2" style="width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Low-level_programming_language" title="Low-level programming language">Low-level</a></li>
<li><a href="/wiki/High-level_programming_language" title="High-level programming language">High-level</a></li>
<li><a href="/wiki/Very_high-level_programming_language" title="Very high-level programming language">Very high-level</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<td class="navbox-list navbox-even hlist" colspan="2" style="width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/First-generation_programming_language" title="First-generation programming language">First generation</a></li>
<li><a href="/wiki/Second-generation_programming_language" title="Second-generation programming language">Second generation</a></li>
<li><a href="/wiki/Third-generation_programming_language" title="Third-generation programming language">Third generation</a></li>
<li><a href="/wiki/Fourth-generation_programming_language" title="Fourth-generation programming language">Fourth generation</a></li>
<li><a href="/wiki/Fifth-generation_programming_language" title="Fifth-generation programming language">Fifth generation</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<td class="navbox-list navbox-odd hlist" colspan="2" style="width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Non-English-based_programming_languages" title="Non-English-based programming languages">Non-English-based</a></li>
<li><a href="/wiki/Visual_programming_language" title="Visual programming language">Visual</a></li>
</ul>
</div>
</td>
</tr>
</table>
</div>
<div aria-labelledby="Software_engineering" class="navbox" role="navigation" style="padding:3px">
<table class="nowraplinks hlist collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
<tr>
<th class="navbox-title" colspan="2" scope="col">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="/wiki/Template:Software_engineering" title="Template:Software engineering"><abbr style=";;background:none transparent;border:none;" title="View this template">v</abbr></a></li>
<li class="nv-talk"><a href="/wiki/Template_talk:Software_engineering" title="Template talk:Software engineering"><abbr style=";;background:none transparent;border:none;" title="Discuss this template">t</abbr></a></li>
<li class="nv-edit"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Template:Software_engineering&amp;action=edit"><abbr style=";;background:none transparent;border:none;" title="Edit this template">e</abbr></a></li>
</ul>
</div>
<div id="Software_engineering" style="font-size:114%"><a href="/wiki/Software_engineering" title="Software engineering">Software engineering</a></div>
</th>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Fields</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Computer_programming" title="Computer programming">Computer programming</a></li>
<li><a href="/wiki/Requirements_engineering" title="Requirements engineering">Requirements engineering</a></li>
<li><a href="/wiki/Software_deployment" title="Software deployment">Software deployment</a></li>
<li><a href="/wiki/Software_design" title="Software design">Software design</a></li>
<li><a href="/wiki/Software_maintenance" title="Software maintenance">Software maintenance</a></li>
<li><a href="/wiki/Software_testing" title="Software testing">Software testing</a></li>
<li><a href="/wiki/Systems_analysis" title="Systems analysis">Systems analysis</a></li>
<li><a href="/wiki/Formal_methods" title="Formal methods">Formal methods</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Concepts</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Data_modeling" title="Data modeling">Data modeling</a></li>
<li><a href="/wiki/Enterprise_architecture" title="Enterprise architecture">Enterprise architecture</a></li>
<li><a href="/wiki/Functional_specification" title="Functional specification">Functional specification</a></li>
<li><a href="/wiki/Modeling_language" title="Modeling language">Modeling language</a></li>
<li><a href="/wiki/Orthogonality_(programming)" title="Orthogonality (programming)">Orthogonality</a></li>
<li><a href="/wiki/Programming_paradigm" title="Programming paradigm">Programming paradigm</a></li>
<li><a href="/wiki/Software" title="Software">Software</a></li>
<li><a href="/wiki/Software_archaeology" title="Software archaeology">Software archaeology</a></li>
<li><a href="/wiki/Software_architecture" title="Software architecture">Software architecture</a></li>
<li><a href="/wiki/Software_configuration_management" title="Software configuration management">Software configuration management</a></li>
<li><a class="mw-redirect" href="/wiki/Software_development_methodology" title="Software development methodology">Software development methodology</a></li>
<li><a href="/wiki/Software_development_process" title="Software development process">Software development process</a></li>
<li><a href="/wiki/Software_quality" title="Software quality">Software quality</a></li>
<li><a href="/wiki/Software_quality_assurance" title="Software quality assurance">Software quality assurance</a></li>
<li><a href="/wiki/Software_verification_and_validation" title="Software verification and validation">Software verification and validation</a></li>
<li><a href="/wiki/Structured_analysis" title="Structured analysis">Structured analysis</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Orientations</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Agile_software_development" title="Agile software development">Agile</a></li>
<li><a href="/wiki/Aspect-oriented_software_development" title="Aspect-oriented software development">Aspect-oriented</a></li>
<li><strong class="selflink">Object orientation</strong></li>
<li><a href="/wiki/Ontology_(information_science)" title="Ontology (information science)">Ontology</a></li>
<li><a href="/wiki/Service-oriented_architecture" title="Service-oriented architecture">Service orientation</a></li>
<li><a href="/wiki/Systems_development_life_cycle" title="Systems development life cycle">SDLC</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Models</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em"></div>
<table class="nowraplinks navbox-subgroup" style="border-spacing:0">
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;font-weight:normal;">
<div style="padding:0em 0.75em;">Developmental</div>
</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Agile_software_development" title="Agile software development">Agile</a></li>
<li><a href="/wiki/Enterprise_Unified_Process" title="Enterprise Unified Process">EUP</a></li>
<li><a href="/wiki/Executable_UML" title="Executable UML">Executable UML</a></li>
<li><a href="/wiki/Incremental_build_model" title="Incremental build model">Incremental model</a></li>
<li><a href="/wiki/Iterative_and_incremental_development" title="Iterative and incremental development">Iterative model</a></li>
<li><a href="/wiki/Software_prototyping" title="Software prototyping">Prototype model</a></li>
<li><a href="/wiki/Rapid_application_development" title="Rapid application development">RAD</a></li>
<li><a href="/wiki/Unified_Process" title="Unified Process">UP</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;font-weight:normal;">
<div style="padding:0em 0.75em;">Other</div>
</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/ISO/IEC_15504" title="ISO/IEC 15504">SPICE</a></li>
<li><a href="/wiki/Capability_Maturity_Model_Integration" title="Capability Maturity Model Integration">CMMI</a></li>
<li><a href="/wiki/Data_model" title="Data model">Data model</a></li>
<li><a href="/wiki/Entity%E2%80%93relationship_model" title="Entity–relationship model">ER model</a></li>
<li><a href="/wiki/Function_model" title="Function model">Function model</a></li>
<li><a href="/wiki/Information_model" title="Information model">Information model</a></li>
<li><a href="/wiki/Metamodeling" title="Metamodeling">Metamodeling</a></li>
<li><a href="/wiki/Object_model" title="Object model">Object model</a></li>
<li><a href="/wiki/Systems_modeling" title="Systems modeling">Systems model</a></li>
<li><a href="/wiki/View_model" title="View model">View model</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;font-weight:normal;">
<div style="padding:0em 0.75em;">Languages</div>
</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/IDEF" title="IDEF">IDEF</a></li>
<li><a href="/wiki/Unified_Modeling_Language" title="Unified Modeling Language">UML</a></li>
<li><a href="/wiki/Systems_Modeling_Language" title="Systems Modeling Language">SysML</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">
<div style="padding:0.1em 0;line-height:1.2em;">Software<br/>
engineers</div>
</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Victor_Basili" title="Victor Basili">Victor Basili</a></li>
<li><a href="/wiki/Kent_Beck" title="Kent Beck">Kent Beck</a></li>
<li><a href="/wiki/Grady_Booch" title="Grady Booch">Grady Booch</a></li>
<li><a href="/wiki/Fred_Brooks" title="Fred Brooks">Fred Brooks</a></li>
<li><a href="/wiki/Barry_Boehm" title="Barry Boehm">Barry Boehm</a></li>
<li><a href="/wiki/Ward_Cunningham" title="Ward Cunningham">Ward Cunningham</a></li>
<li><a href="/wiki/Tom_DeMarco" title="Tom DeMarco">Tom DeMarco</a></li>
<li><a href="/wiki/Edsger_W._Dijkstra" title="Edsger W. Dijkstra">Edsger W. Dijkstra</a></li>
<li><a href="/wiki/Martin_Fowler" title="Martin Fowler">Martin Fowler</a></li>
<li><a href="/wiki/Tony_Hoare" title="Tony Hoare">C. A. R. Hoare</a></li>
<li><a href="/wiki/Watts_Humphrey" title="Watts Humphrey">Watts Humphrey</a></li>
<li><a href="/wiki/Michael_A._Jackson" title="Michael A. Jackson">Michael A. Jackson</a></li>
<li><a href="/wiki/Ivar_Jacobson" title="Ivar Jacobson">Ivar Jacobson</a></li>
<li><a href="/wiki/Stephen_J._Mellor" title="Stephen J. Mellor">Stephen J. Mellor</a></li>
<li><a href="/wiki/Bertrand_Meyer" title="Bertrand Meyer">Bertrand Meyer</a></li>
<li><a href="/wiki/David_Parnas" title="David Parnas">David Parnas</a></li>
<li><a href="/wiki/Winston_W._Royce" title="Winston W. Royce">Winston W. Royce</a></li>
<li><a href="/wiki/James_Rumbaugh" title="James Rumbaugh">James Rumbaugh</a></li>
<li><a href="/wiki/Niklaus_Wirth" title="Niklaus Wirth">Niklaus Wirth</a></li>
<li><a href="/wiki/Edward_Yourdon" title="Edward Yourdon">Edward Yourdon</a></li>
<li><a href="/wiki/Mohamed_Fayad" title="Mohamed Fayad">Mohamed Fayad</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Related fields</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Computer_science" title="Computer science">Computer science</a></li>
<li><a href="/wiki/Computer_engineering" title="Computer engineering">Computer engineering</a></li>
<li><a href="/wiki/Project_management" title="Project management">Project management</a></li>
<li><a href="/wiki/Risk_management" title="Risk management">Risk management</a></li>
<li><a href="/wiki/Systems_engineering" title="Systems engineering">Systems engineering</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<td class="navbox-abovebelow" colspan="2" style="font-weight:bold;">
<div>
<ul>
<li><img alt="Category" data-file-height="31" data-file-width="36" height="14" src="//upload.wikimedia.org/wikipedia/en/thumb/4/48/Folder_Hexagonal_Icon.svg/16px-Folder_Hexagonal_Icon.svg.png" srcset="//upload.wikimedia.org/wikipedia/en/thumb/4/48/Folder_Hexagonal_Icon.svg/24px-Folder_Hexagonal_Icon.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/4/48/Folder_Hexagonal_Icon.svg/32px-Folder_Hexagonal_Icon.svg.png 2x" title="Category" width="16"/> <a href="/wiki/Category:Software_engineering" title="Category:Software engineering">Category</a></li>
<li><img alt="Commons page" data-file-height="1376" data-file-width="1024" height="16" src="//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/12px-Commons-logo.svg.png" srcset="//upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/18px-Commons-logo.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/4/4a/Commons-logo.svg/24px-Commons-logo.svg.png 2x" title="Commons page" width="12"/> <a class="extiw" href="https://commons.wikimedia.org/wiki/Software_engineering" title="commons:Software engineering">Commons</a></li>
</ul>
</div>
</td>
</tr>
</table>
</div>
<div aria-label="Navbox" class="navbox" role="navigation" style="padding:3px">
<table class="nowraplinks hlist navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
<tr>
<th class="navbox-group" scope="row"><a href="/wiki/Help:Authority_control" title="Help:Authority control">Authority control</a></th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><span style="white-space:nowrap;"><a href="/wiki/Library_of_Congress_Control_Number" title="Library of Congress Control Number">LCCN</a>: <span class="uid"><a class="external text" href="http://id.loc.gov/authorities/subjects/sh87007503" rel="nofollow">sh87007503</a></span></span></li>
<li><span style="white-space:nowrap;"><a href="/wiki/Integrated_Authority_File" title="Integrated Authority File">GND</a>: <span class="uid"><a class="external text" href="http://d-nb.info/gnd/4233947-9" rel="nofollow">4233947-9</a></span></span></li>
<li><span style="white-space:nowrap;"><a href="/wiki/Biblioth%C3%A8que_nationale_de_France" title="Bibliothèque nationale de France">BNF</a>: <span class="uid"><a class="external text" href="http://catalogue.bnf.fr/ark:/12148/cb12115131k" rel="nofollow">cb12115131k</a> <a class="external text" href="http://data.bnf.fr/ark:/12148/cb12115131k" rel="nofollow">(data)</a></span></span></li>
<li><span style="white-space:nowrap;"><a href="/wiki/National_Diet_Library" title="National Diet Library">NDL</a>: <span class="uid"><a class="external text" href="http://id.ndl.go.jp/auth/ndlna/00937980" rel="nofollow">00937980</a></span></span></li>
<li><span style="white-space:nowrap;"><a href="/wiki/Biblioteca_Nacional_de_Espa%C3%B1a" title="Biblioteca Nacional de España">BNE</a>: <span class="uid"><a class="external text" href="http://catalogo.bne.es/uhtbin/authoritybrowse.cgi?action=display&amp;authority_id=XX537453" rel="nofollow">XX537453</a></span></span></li>
</ul>
</div>
</td>
</tr>
</table>
</div>
<!-- Saved in parser cache with key enwiki:pcache:idhash:27471338-0!*!0!!en!4!* and timestamp 20161002031452 and revision id 742170496
 -->
<noscript><img alt="" height="1" src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" style="border: none; position: absolute;" title="" width="1"/></noscript></div> <div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;oldid=742170496">https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;oldid=742170496</a>"					</div>
<div class="catlinks" data-mw="interface" id="catlinks"><div class="mw-normal-catlinks" id="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Object-oriented_programming" title="Category:Object-oriented programming">Object-oriented programming</a></li><li><a href="/wiki/Category:Programming_paradigms" title="Category:Programming paradigms">Programming paradigms</a></li><li><a href="/wiki/Category:Norwegian_inventions" title="Category:Norwegian inventions">Norwegian inventions</a></li></ul></div><div class="mw-hidden-catlinks mw-hidden-cats-hidden" id="mw-hidden-catlinks">Hidden categories: <ul><li><a href="/wiki/Category:All_articles_with_failed_verification" title="Category:All articles with failed verification">All articles with failed verification</a></li><li><a href="/wiki/Category:Articles_with_failed_verification_from_June_2016" title="Category:Articles with failed verification from June 2016">Articles with failed verification from June 2016</a></li><li><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></li><li><a href="/wiki/Category:Articles_with_unsourced_statements_from_June_2016" title="Category:Articles with unsourced statements from June 2016">Articles with unsourced statements from June 2016</a></li><li><a href="/wiki/Category:Articles_with_unsourced_statements_from_February_2010" title="Category:Articles with unsourced statements from February 2010">Articles with unsourced statements from February 2010</a></li><li><a href="/wiki/Category:Articles_needing_additional_references_from_August_2009" title="Category:Articles needing additional references from August 2009">Articles needing additional references from August 2009</a></li><li><a href="/wiki/Category:All_articles_needing_additional_references" title="Category:All articles needing additional references">All articles needing additional references</a></li><li><a href="/wiki/Category:Articles_containing_potentially_dated_statements_from_2006" title="Category:Articles containing potentially dated statements from 2006">Articles containing potentially dated statements from 2006</a></li><li><a href="/wiki/Category:All_articles_containing_potentially_dated_statements" title="Category:All articles containing potentially dated statements">All articles containing potentially dated statements</a></li><li><a href="/wiki/Category:Pages_containing_cite_templates_with_deprecated_parameters" title="Category:Pages containing cite templates with deprecated parameters">Pages containing cite templates with deprecated parameters</a></li><li><a href="/wiki/Category:Articles_with_DMOZ_links" title="Category:Articles with DMOZ links">Articles with DMOZ links</a></li><li><a href="/wiki/Category:Use_dmy_dates_from_September_2010" title="Category:Use dmy dates from September 2010">Use dmy dates from September 2010</a></li><li><a href="/wiki/Category:Wikipedia_articles_with_LCCN_identifiers" title="Category:Wikipedia articles with LCCN identifiers">Wikipedia articles with LCCN identifiers</a></li><li><a href="/wiki/Category:Wikipedia_articles_with_GND_identifiers" title="Category:Wikipedia articles with GND identifiers">Wikipedia articles with GND identifiers</a></li><li><a href="/wiki/Category:Wikipedia_articles_with_BNF_identifiers" title="Category:Wikipedia articles with BNF identifiers">Wikipedia articles with BNF identifiers</a></li></ul></div></div> <div class="visualClear"></div>
</div>
</div>
<div id="mw-navigation">
<h2>Navigation menu</h2>
<div id="mw-head">
<div aria-labelledby="p-personal-label" class="" id="p-personal" role="navigation">
<h3 id="p-personal-label">Personal tools</h3>
<ul>
<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a accesskey="n" href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]">Talk</a></li><li id="pt-anoncontribs"><a accesskey="y" href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Object-oriented+programming" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a accesskey="o" href="/w/index.php?title=Special:UserLogin&amp;returnto=Object-oriented+programming" title="You're encouraged to log in; however, it's not mandatory. [o]">Log in</a></li> </ul>
</div>
<div id="left-navigation">
<div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
<h3 id="p-namespaces-label">Namespaces</h3>
<ul>
<li class="selected" id="ca-nstab-main"><span><a accesskey="c" href="/wiki/Object-oriented_programming" title="View the content page [c]">Article</a></span></li>
<li id="ca-talk"><span><a accesskey="t" href="/wiki/Talk:Object-oriented_programming" rel="discussion" title="Discussion about the content page [t]">Talk</a></span></li>
</ul>
</div>
<div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
<h3 id="p-variants-label">
<span>Variants</span><a href="#"></a>
</h3>
<div class="menu">
<ul>
</ul>
</div>
</div>
</div>
<div id="right-navigation">
<div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
<h3 id="p-views-label">Views</h3>
<ul>
<li class="selected" id="ca-view"><span><a href="/wiki/Object-oriented_programming">Read</a></span></li>
<li id="ca-edit"><span><a accesskey="e" href="/w/index.php?title=Object-oriented_programming&amp;action=edit" title="Edit this page [e]">Edit</a></span></li>
<li class="collapsible" id="ca-history"><span><a accesskey="h" href="/w/index.php?title=Object-oriented_programming&amp;action=history" title="Past revisions of this page [h]">View history</a></span></li>
</ul>
</div>
<div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>
<div class="menu">
<ul>
</ul>
</div>
</div>
<div id="p-search" role="search">
<h3>
<label for="searchInput">Search</label>
</h3>
<form action="/w/index.php" id="searchform">
<div id="simpleSearch">
<input accesskey="f" id="searchInput" name="search" placeholder="Search" title="Search Wikipedia [f]" type="search"/><input name="title" type="hidden" value="Special:Search"/><input class="searchButton mw-fallbackSearchButton" id="mw-searchButton" name="fulltext" title="Search Wikipedia for this text" type="submit" value="Search"/><input class="searchButton" id="searchButton" name="go" title="Go to a page with this exact name if it exists" type="submit" value="Go"/> </div>
</form>
</div>
</div>
</div>
<div id="mw-panel">
<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page" title="Visit the main page"></a></div>
<div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
<h3 id="p-navigation-label">Navigation</h3>
<div class="body">
<ul>
<li id="n-mainpage-description"><a accesskey="z" href="/wiki/Main_Page" title="Visit the main page [z]">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a accesskey="x" href="/wiki/Special:Random" title="Load a random article [x]">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-interaction-label" class="portal" id="p-interaction" role="navigation">
<h3 id="p-interaction-label">Interaction</h3>
<div class="body">
<ul>
<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a accesskey="r" href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
<h3 id="p-tb-label">Tools</h3>
<div class="body">
<ul>
<li id="t-whatlinkshere"><a accesskey="j" href="/wiki/Special:WhatLinksHere/Object-oriented_programming" title="List of all English Wikipedia pages containing links to this page [j]">What links here</a></li><li id="t-recentchangeslinked"><a accesskey="k" href="/wiki/Special:RecentChangesLinked/Object-oriented_programming" title="Recent changes in pages linked from this page [k]">Related changes</a></li><li id="t-upload"><a accesskey="u" href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]">Upload file</a></li><li id="t-specialpages"><a accesskey="q" href="/wiki/Special:SpecialPages" title="A list of all special pages [q]">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Object-oriented_programming&amp;oldid=742170496" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Object-oriented_programming&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a accesskey="g" href="https://www.wikidata.org/wiki/Q79872" title="Link to connected data repository item [g]">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Object-oriented_programming&amp;id=742170496" title="Information on how to cite this page">Cite this page</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
<h3 id="p-coll-print_export-label">Print/export</h3>
<div class="body">
<ul>
<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Object-oriented+programming">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Object-oriented+programming&amp;returnto=Object-oriented+programming&amp;oldid=742170496&amp;writer=rdf2latex">Download as PDF</a></li><li id="t-print"><a accesskey="p" href="/w/index.php?title=Object-oriented_programming&amp;printable=yes" title="Printable version of this page [p]">Printable version</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-wikibase-otherprojects-label" class="portal" id="p-wikibase-otherprojects" role="navigation">
<h3 id="p-wikibase-otherprojects-label">In other projects</h3>
<div class="body">
<ul>
<li class="wb-otherproject-link wb-otherproject-commons"><a href="https://commons.wikimedia.org/wiki/Category:Object-oriented_programming" hreflang="en">Wikimedia Commons</a></li><li class="wb-otherproject-link wb-otherproject-wikibooks"><a href="https://en.wikibooks.org/wiki/Object_Oriented_Programming" hreflang="en">Wikibooks</a></li><li class="wb-otherproject-link wb-otherproject-wikiversity"><a href="https://en.wikiversity.org/wiki/Object_Oriented_Programming" hreflang="en">Wikiversity</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
<h3 id="p-lang-label">Languages</h3>
<div class="body">
<ul>
<li class="interlanguage-link interwiki-af"><a href="https://af.wikipedia.org/wiki/Objekgeori%C3%ABnteerde_programmering" hreflang="af" lang="af" title="Objekgeoriënteerde programmering – Afrikaans">Afrikaans</a></li><li class="interlanguage-link interwiki-ar"><a href="https://ar.wikipedia.org/wiki/%D8%A8%D8%B1%D9%85%D8%AC%D8%A9_%D9%83%D8%A7%D8%A6%D9%86%D9%8A%D8%A9_%D8%A7%D9%84%D8%AA%D9%88%D8%AC%D9%87" hreflang="ar" lang="ar" title="برمجة كائنية التوجه – Arabic">العربية</a></li><li class="interlanguage-link interwiki-az"><a href="https://az.wikipedia.org/wiki/Obyekt_y%C3%B6n%C3%BCml%C3%BC_proqramla%C5%9Fd%C4%B1rma" hreflang="az" lang="az" title="Obyekt yönümlü proqramlaşdırma – Azerbaijani">Azərbaycanca</a></li><li class="interlanguage-link interwiki-bn"><a href="https://bn.wikipedia.org/wiki/%E0%A6%85%E0%A6%AC%E0%A6%9C%E0%A7%87%E0%A6%95%E0%A7%8D%E0%A6%9F_%E0%A6%93%E0%A6%B0%E0%A6%BF%E0%A6%AF%E0%A6%BC%E0%A7%87%E0%A6%A8%E0%A7%8D%E0%A6%9F%E0%A7%87%E0%A6%A1_%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82" hreflang="bn" lang="bn" title="অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং – Bengali">বাংলা</a></li><li class="interlanguage-link interwiki-be"><a href="https://be.wikipedia.org/wiki/%D0%90%D0%B1%27%D0%B5%D0%BA%D1%82%D0%BD%D0%B0-%D0%B0%D1%80%D1%8B%D0%B5%D0%BD%D1%82%D0%B0%D0%B2%D0%B0%D0%BD%D0%B0%D0%B5_%D0%BF%D1%80%D0%B0%D0%B3%D1%80%D0%B0%D0%BC%D0%B0%D0%B2%D0%B0%D0%BD%D0%BD%D0%B5" hreflang="be" lang="be" title="Аб'ектна-арыентаванае праграмаванне – Belarusian">Беларуская</a></li><li class="interlanguage-link interwiki-be-x-old"><a href="https://be-x-old.wikipedia.org/wiki/%D0%90%D0%B1%E2%80%99%D0%B5%D0%BA%D1%82%D0%BD%D0%B0-%D0%B0%D1%80%D1%8B%D0%B5%D0%BD%D1%82%D0%B0%D0%B2%D0%B0%D0%BD%D0%B0%D0%B5_%D0%BF%D1%80%D0%B0%D0%B3%D1%80%D0%B0%D0%BC%D0%B0%D0%B2%D0%B0%D0%BD%D1%8C%D0%BD%D0%B5" hreflang="be-x-old" lang="be-x-old" title="Аб’ектна-арыентаванае праграмаваньне – беларуская (тарашкевіца)‎">Беларуская (тарашкевіца)‎</a></li><li class="interlanguage-link interwiki-bg"><a href="https://bg.wikipedia.org/wiki/%D0%9E%D0%B1%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%B0%D0%BD%D0%BE_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8%D1%80%D0%B0%D0%BD%D0%B5" hreflang="bg" lang="bg" title="Обектно-ориентирано програмиране – Bulgarian">Български</a></li><li class="interlanguage-link interwiki-bs"><a href="https://bs.wikipedia.org/wiki/Objektno-orijentirano_programiranje" hreflang="bs" lang="bs" title="Objektno-orijentirano programiranje – Bosnian">Bosanski</a></li><li class="interlanguage-link interwiki-ca"><a href="https://ca.wikipedia.org/wiki/Programaci%C3%B3_orientada_a_objectes" hreflang="ca" lang="ca" title="Programació orientada a objectes – Catalan">Català</a></li><li class="interlanguage-link interwiki-cs"><a href="https://cs.wikipedia.org/wiki/Objektov%C4%9B_orientovan%C3%A9_programov%C3%A1n%C3%AD" hreflang="cs" lang="cs" title="Objektově orientované programování – Czech">Čeština</a></li><li class="interlanguage-link interwiki-da"><a href="https://da.wikipedia.org/wiki/Objektorienteret_programmering" hreflang="da" lang="da" title="Objektorienteret programmering – Danish">Dansk</a></li><li class="interlanguage-link interwiki-de"><a href="https://de.wikipedia.org/wiki/Objektorientierte_Programmierung" hreflang="de" lang="de" title="Objektorientierte Programmierung – German">Deutsch</a></li><li class="interlanguage-link interwiki-et"><a href="https://et.wikipedia.org/wiki/Objektorienteeritud_programmeerimine" hreflang="et" lang="et" title="Objektorienteeritud programmeerimine – Estonian">Eesti</a></li><li class="interlanguage-link interwiki-el"><a href="https://el.wikipedia.org/wiki/%CE%91%CE%BD%CF%84%CE%B9%CE%BA%CE%B5%CE%B9%CE%BC%CE%B5%CE%BD%CE%BF%CF%83%CF%84%CF%81%CE%B5%CF%86%CE%AE%CF%82_%CF%80%CF%81%CE%BF%CE%B3%CF%81%CE%B1%CE%BC%CE%BC%CE%B1%CF%84%CE%B9%CF%83%CE%BC%CF%8C%CF%82" hreflang="el" lang="el" title="Αντικειμενοστρεφής προγραμματισμός – Greek">Ελληνικά</a></li><li class="interlanguage-link interwiki-es"><a href="https://es.wikipedia.org/wiki/Programaci%C3%B3n_orientada_a_objetos" hreflang="es" lang="es" title="Programación orientada a objetos – Spanish">Español</a></li><li class="interlanguage-link interwiki-eo"><a href="https://eo.wikipedia.org/wiki/Objektema_programado" hreflang="eo" lang="eo" title="Objektema programado – Esperanto">Esperanto</a></li><li class="interlanguage-link interwiki-eu"><a href="https://eu.wikipedia.org/wiki/Objektuei_orientatutako_programazio" hreflang="eu" lang="eu" title="Objektuei orientatutako programazio – Basque">Euskara</a></li><li class="interlanguage-link interwiki-fa"><a href="https://fa.wikipedia.org/wiki/%D8%A8%D8%B1%D9%86%D8%A7%D9%85%D9%87%E2%80%8C%D9%86%D9%88%DB%8C%D8%B3%DB%8C_%D8%B4%DB%8C%D8%A1%DA%AF%D8%B1%D8%A7" hreflang="fa" lang="fa" title="برنامه‌نویسی شیءگرا – Persian">فارسی</a></li><li class="interlanguage-link interwiki-fr"><a href="https://fr.wikipedia.org/wiki/Programmation_orient%C3%A9e_objet" hreflang="fr" lang="fr" title="Programmation orientée objet – French">Français</a></li><li class="interlanguage-link interwiki-gl"><a href="https://gl.wikipedia.org/wiki/Programaci%C3%B3n_orientada_a_obxectos" hreflang="gl" lang="gl" title="Programación orientada a obxectos – Galician">Galego</a></li><li class="interlanguage-link interwiki-ko"><a href="https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_%EC%A7%80%ED%96%A5_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D" hreflang="ko" lang="ko" title="객체 지향 프로그래밍 – Korean">한국어</a></li><li class="interlanguage-link interwiki-hy"><a href="https://hy.wikipedia.org/wiki/%D5%95%D5%A2%D5%B5%D5%A5%D5%AF%D5%BF_%D5%AF%D5%B8%D5%B2%D5%B4%D5%B6%D5%B8%D6%80%D5%B8%D5%B7%D5%BE%D5%A1%D5%AE_%D5%AE%D6%80%D5%A1%D5%A3%D6%80%D5%A1%D5%BE%D5%B8%D6%80%D5%B8%D6%82%D5%B4" hreflang="hy" lang="hy" title="Օբյեկտ կողմնորոշված ծրագրավորում – Armenian">Հայերեն</a></li><li class="interlanguage-link interwiki-hi"><a href="https://hi.wikipedia.org/wiki/%E0%A4%91%E0%A4%AC%E0%A5%8D%E0%A4%9C%E0%A5%87%E0%A4%95%E0%A5%8D%E0%A4%9F_%E0%A4%93%E0%A4%B0%E0%A4%BF%E0%A4%8F%E0%A4%82%E0%A4%9F%E0%A5%87%E0%A4%A1_%E0%A4%AA%E0%A5%8D%E0%A4%B0%E0%A5%8B%E0%A4%97%E0%A5%8D%E0%A4%B0%E0%A4%BE%E0%A4%AE%E0%A4%BF%E0%A4%82%E0%A4%97" hreflang="hi" lang="hi" title="ऑब्जेक्ट ओरिएंटेड प्रोग्रामिंग – Hindi">हिन्दी</a></li><li class="interlanguage-link interwiki-hr"><a href="https://hr.wikipedia.org/wiki/Objektno_orijentirano_programiranje" hreflang="hr" lang="hr" title="Objektno orijentirano programiranje – Croatian">Hrvatski</a></li><li class="interlanguage-link interwiki-io"><a href="https://io.wikipedia.org/wiki/Objekt-orientizita_programifo" hreflang="io" lang="io" title="Objekt-orientizita programifo – Ido">Ido</a></li><li class="interlanguage-link interwiki-ilo"><a href="https://ilo.wikipedia.org/wiki/Panangprograma_a_naitaratar_iti_bambanag" hreflang="ilo" lang="ilo" title="Panangprograma a naitaratar iti bambanag – Iloko">Ilokano</a></li><li class="interlanguage-link interwiki-id"><a href="https://id.wikipedia.org/wiki/Pemrograman_berorientasi_objek" hreflang="id" lang="id" title="Pemrograman berorientasi objek – Indonesian">Bahasa Indonesia</a></li><li class="interlanguage-link interwiki-is"><a href="https://is.wikipedia.org/wiki/Hlutbundin_forritun" hreflang="is" lang="is" title="Hlutbundin forritun – Icelandic">Íslenska</a></li><li class="interlanguage-link interwiki-it"><a href="https://it.wikipedia.org/wiki/Programmazione_orientata_agli_oggetti" hreflang="it" lang="it" title="Programmazione orientata agli oggetti – Italian">Italiano</a></li><li class="interlanguage-link interwiki-he"><a href="https://he.wikipedia.org/wiki/%D7%AA%D7%9B%D7%A0%D7%95%D7%AA_%D7%9E%D7%95%D7%A0%D7%97%D7%94-%D7%A2%D7%A6%D7%9E%D7%99%D7%9D" hreflang="he" lang="he" title="תכנות מונחה-עצמים – Hebrew">עברית</a></li><li class="interlanguage-link interwiki-ka"><a href="https://ka.wikipedia.org/wiki/%E1%83%9D%E1%83%91%E1%83%98%E1%83%94%E1%83%A5%E1%83%A2%E1%83%96%E1%83%94_%E1%83%9D%E1%83%A0%E1%83%98%E1%83%94%E1%83%9C%E1%83%A2%E1%83%98%E1%83%A0%E1%83%94%E1%83%91%E1%83%A3%E1%83%9A%E1%83%98_%E1%83%9E%E1%83%A0%E1%83%9D%E1%83%92%E1%83%A0%E1%83%90%E1%83%9B%E1%83%98%E1%83%A0%E1%83%94%E1%83%91%E1%83%90" hreflang="ka" lang="ka" title="ობიექტზე ორიენტირებული პროგრამირება – Georgian">ქართული</a></li><li class="interlanguage-link interwiki-kk"><a href="https://kk.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D1%96%D0%B3%D0%B5-%D0%B1%D0%B0%D2%93%D1%8B%D1%82%D1%82%D0%B0%D0%BB%D2%93%D0%B0%D0%BD_%D0%B1%D0%B0%D2%93%D0%B4%D0%B0%D1%80%D0%BB%D0%B0%D0%BC%D0%B0%D0%BB%D0%B0%D1%83" hreflang="kk" lang="kk" title="Объектіге-бағытталған бағдарламалау – Kazakh">Қазақша</a></li><li class="interlanguage-link interwiki-ky"><a href="https://ky.wikipedia.org/wiki/%D0%9E%D0%B1%D0%B6%D0%B5%D0%BA%D1%82%D0%BA%D0%B5_%D0%B1%D0%B0%D0%B3%D1%8B%D1%82%D1%82%D0%B0%D0%BB%D0%B3%D0%B0%D0%BD_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0%D0%BB%D0%BE%D0%BE" hreflang="ky" lang="ky" title="Обжектке багытталган программалоо – Kyrgyz">Кыргызча</a></li><li class="interlanguage-link interwiki-la"><a href="https://la.wikipedia.org/wiki/Programmatura_ad_res_directa" hreflang="la" lang="la" title="Programmatura ad res directa – Latin">Latina</a></li><li class="interlanguage-link interwiki-lv"><a href="https://lv.wikipedia.org/wiki/Objektorient%C4%93t%C4%81_programm%C4%93%C5%A1ana" hreflang="lv" lang="lv" title="Objektorientētā programmēšana – Latvian">Latviešu</a></li><li class="interlanguage-link interwiki-lt"><a href="https://lt.wikipedia.org/wiki/Objektinis_programavimas" hreflang="lt" lang="lt" title="Objektinis programavimas – Lithuanian">Lietuvių</a></li><li class="interlanguage-link interwiki-hu"><a href="https://hu.wikipedia.org/wiki/Objektumorient%C3%A1lt_programoz%C3%A1s" hreflang="hu" lang="hu" title="Objektumorientált programozás – Hungarian">Magyar</a></li><li class="interlanguage-link interwiki-mk"><a href="https://mk.wikipedia.org/wiki/%D0%9E%D0%B1%D1%98%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%B0%D0%BD%D0%BE_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8%D1%80%D0%B0%D1%9A%D0%B5" hreflang="mk" lang="mk" title="Објектно-ориентирано програмирање – Macedonian">Македонски</a></li><li class="interlanguage-link interwiki-ml"><a href="https://ml.wikipedia.org/wiki/%E0%B4%92%E0%B4%AC%E0%B5%8D%E0%B4%9C%E0%B4%95%E0%B5%8D%E0%B4%B1%E0%B5%8D%E0%B4%B1%E0%B5%8D_%E0%B4%93%E0%B4%B1%E0%B4%BF%E0%B4%AF%E0%B4%A8%E0%B5%8D%E0%B4%B1%E0%B4%A1%E0%B5%8D_%E0%B4%AA%E0%B5%8D%E0%B4%B0%E0%B5%8B%E0%B4%97%E0%B5%8D%E0%B4%B0%E0%B4%BE%E0%B4%AE%E0%B4%BF%E0%B4%99%E0%B5%8D_%E0%B4%AD%E0%B4%BE%E0%B4%B7" hreflang="ml" lang="ml" title="ഒബ്ജക്റ്റ് ഓറിയന്റഡ് പ്രോഗ്രാമിങ് ഭാഷ – Malayalam">മലയാളം</a></li><li class="interlanguage-link interwiki-ms"><a href="https://ms.wikipedia.org/wiki/Pengaturcaraan_berorientasi_objek" hreflang="ms" lang="ms" title="Pengaturcaraan berorientasi objek – Malay">Bahasa Melayu</a></li><li class="interlanguage-link interwiki-mn"><a href="https://mn.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82_%D1%85%D0%B0%D0%BD%D0%B4%D0%B0%D0%BB%D1%82%D0%B0%D1%82_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%87%D0%BB%D0%B0%D0%BB" hreflang="mn" lang="mn" title="Объект хандалтат програмчлал – Mongolian">Монгол</a></li><li class="interlanguage-link interwiki-my"><a href="https://my.wikipedia.org/wiki/%E1%80%A1%E1%80%B1%E1%80%AC%E1%80%B7%E1%80%97%E1%80%BA%E1%80%82%E1%80%BB%E1%80%80%E1%80%BA_%E1%80%A1%E1%80%AD%E1%80%AF%E1%80%9B%E1%80%AE%E1%80%9A%E1%80%84%E1%80%B7%E1%80%BA%E1%80%90%E1%80%80%E1%80%BA_%E1%80%95%E1%80%9B%E1%80%AD%E1%80%AF%E1%80%82%E1%80%9B%E1%80%99%E1%80%BA%E1%80%B8%E1%80%99%E1%80%84%E1%80%BA%E1%80%B8" hreflang="my" lang="my" title="အော့ဗ်ဂျက် အိုရီယင့်တက် ပရိုဂရမ်းမင်း – Burmese">မြန်မာဘာသာ</a></li><li class="interlanguage-link interwiki-ja"><a href="https://ja.wikipedia.org/wiki/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0" hreflang="ja" lang="ja" title="オブジェクト指向プログラミング – Japanese">日本語</a></li><li class="interlanguage-link interwiki-no"><a href="https://no.wikipedia.org/wiki/Objektorientert_programmering" hreflang="no" lang="no" title="Objektorientert programmering – Norwegian">Norsk bokmål</a></li><li class="interlanguage-link interwiki-nn"><a href="https://nn.wikipedia.org/wiki/Objektorientert_programmering" hreflang="nn" lang="nn" title="Objektorientert programmering – Norwegian Nynorsk">Norsk nynorsk</a></li><li class="interlanguage-link interwiki-pl"><a href="https://pl.wikipedia.org/wiki/Programowanie_obiektowe" hreflang="pl" lang="pl" title="Programowanie obiektowe – Polish">Polski</a></li><li class="interlanguage-link interwiki-pt"><a href="https://pt.wikipedia.org/wiki/Object-oriented_programming" hreflang="pt" lang="pt" title="Object-oriented programming – Portuguese">Português</a></li><li class="interlanguage-link interwiki-ro"><a href="https://ro.wikipedia.org/wiki/Programare_orientat%C4%83_pe_obiecte" hreflang="ro" lang="ro" title="Programare orientată pe obiecte – Romanian">Română</a></li><li class="interlanguage-link interwiki-rue"><a href="https://rue.wikipedia.org/wiki/%D0%9E%D0%B1%D1%94%D0%BA%D1%82%D0%BE%D0%B2%D0%BE_%D0%BE%D1%80%D1%8C%D1%94%D0%BD%D1%82%D0%BE%D0%B2%D0%B0%D0%BD%D0%B5_%D0%BF%D1%80%D0%BE%D2%91%D1%80%D0%B0%D0%BC%D0%BE%D0%B2%D0%B0%D0%BD%D1%8F" hreflang="rue" lang="rue" title="Обєктово орьєнтоване проґрамованя – Rusyn">Русиньскый</a></li><li class="interlanguage-link interwiki-ru"><a href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5" hreflang="ru" lang="ru" title="Объектно-ориентированное программирование – Russian">Русский</a></li><li class="interlanguage-link interwiki-sco"><a href="https://sco.wikipedia.org/wiki/Object-orientit_programmin" hreflang="sco" lang="sco" title="Object-orientit programmin – Scots">Scots</a></li><li class="interlanguage-link interwiki-sq"><a href="https://sq.wikipedia.org/wiki/Programimi_i_orientuar_n%C3%AB_objekte" hreflang="sq" lang="sq" title="Programimi i orientuar në objekte – Albanian">Shqip</a></li><li class="interlanguage-link interwiki-scn"><a href="https://scn.wikipedia.org/wiki/Prugrammazzioni_urientata_all%27uggetta" hreflang="scn" lang="scn" title="Prugrammazzioni urientata all'uggetta – Sicilian">Sicilianu</a></li><li class="interlanguage-link interwiki-simple"><a href="https://simple.wikipedia.org/wiki/Object-oriented_programming" hreflang="simple" lang="simple" title="Object-oriented programming – Simple English">Simple English</a></li><li class="interlanguage-link interwiki-sk"><a href="https://sk.wikipedia.org/wiki/Objektov%C3%A9_programovanie" hreflang="sk" lang="sk" title="Objektové programovanie – Slovak">Slovenčina</a></li><li class="interlanguage-link interwiki-sr"><a href="https://sr.wikipedia.org/wiki/%D0%9E%D0%B1%D1%98%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D1%98%D0%B5%D0%BD%D1%82%D0%B8%D1%81%D0%B0%D0%BD%D0%BE_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%B8%D1%80%D0%B0%D1%9A%D0%B5" hreflang="sr" lang="sr" title="Објектно-оријентисано програмирање – Serbian">Српски / srpski</a></li><li class="interlanguage-link interwiki-sh"><a href="https://sh.wikipedia.org/wiki/Objektno-orijentisano_programiranje" hreflang="sh" lang="sh" title="Objektno-orijentisano programiranje – Serbo-Croatian">Srpskohrvatski / српскохрватски</a></li><li class="interlanguage-link interwiki-fi"><a href="https://fi.wikipedia.org/wiki/Olio-ohjelmointi" hreflang="fi" lang="fi" title="Olio-ohjelmointi – Finnish">Suomi</a></li><li class="interlanguage-link interwiki-sv"><a href="https://sv.wikipedia.org/wiki/Objektorienterad_programmering" hreflang="sv" lang="sv" title="Objektorienterad programmering – Swedish">Svenska</a></li><li class="interlanguage-link interwiki-ta"><a href="https://ta.wikipedia.org/wiki/%E0%AE%AA%E0%AF%8A%E0%AE%B0%E0%AF%81%E0%AE%B3%E0%AF%8D_%E0%AE%A8%E0%AF%8B%E0%AE%95%E0%AF%8D%E0%AE%95%E0%AF%81_%E0%AE%A8%E0%AE%BF%E0%AE%B0%E0%AE%B2%E0%AE%BE%E0%AE%95%E0%AF%8D%E0%AE%95%E0%AE%AE%E0%AF%8D" hreflang="ta" lang="ta" title="பொருள் நோக்கு நிரலாக்கம் – Tamil">தமிழ்</a></li><li class="interlanguage-link interwiki-th"><a href="https://th.wikipedia.org/wiki/%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B9%80%E0%B8%82%E0%B8%B5%E0%B8%A2%E0%B8%99%E0%B9%82%E0%B8%9B%E0%B8%A3%E0%B9%81%E0%B8%81%E0%B8%A3%E0%B8%A1%E0%B9%80%E0%B8%8A%E0%B8%B4%E0%B8%87%E0%B8%A7%E0%B8%B1%E0%B8%95%E0%B8%96%E0%B8%B8" hreflang="th" lang="th" title="การเขียนโปรแกรมเชิงวัตถุ – Thai">ไทย</a></li><li class="interlanguage-link interwiki-tr"><a href="https://tr.wikipedia.org/wiki/Nesne_y%C3%B6nelimli_programlama" hreflang="tr" lang="tr" title="Nesne yönelimli programlama – Turkish">Türkçe</a></li><li class="interlanguage-link interwiki-uk"><a href="https://uk.wikipedia.org/wiki/%D0%9E%D0%B1%27%D1%94%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D1%96%D1%94%D0%BD%D1%82%D0%BE%D0%B2%D0%B0%D0%BD%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F" hreflang="uk" lang="uk" title="Об'єктно-орієнтоване програмування – Ukrainian">Українська</a></li><li class="interlanguage-link interwiki-ur"><a href="https://ur.wikipedia.org/wiki/%D8%A7%D9%88%D8%A8%D8%AC%DB%8C%DA%A9%D9%B9_%D8%A7%D9%88%D8%B1%DB%8C%D8%A6%D9%86%D9%B9%DA%88_%D9%BE%D8%B1%D9%88%DA%AF%D8%B1%D8%A7%D9%85%D9%86%DA%AF" hreflang="ur" lang="ur" title="اوبجیکٹ اوریئنٹڈ پروگرامنگ – Urdu">اردو</a></li><li class="interlanguage-link interwiki-vi"><a href="https://vi.wikipedia.org/wiki/L%E1%BA%ADp_tr%C3%ACnh_h%C6%B0%E1%BB%9Bng_%C4%91%E1%BB%91i_t%C6%B0%E1%BB%A3ng" hreflang="vi" lang="vi" title="Lập trình hướng đối tượng – Vietnamese">Tiếng Việt</a></li><li class="interlanguage-link interwiki-wuu"><a href="https://wuu.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BC%8F%E7%BC%96%E5%88%B6" hreflang="wuu" lang="wuu" title="面向对象程式编制 – Wu Chinese">吴语</a></li><li class="interlanguage-link interwiki-zh-yue"><a href="https://zh-yue.wikipedia.org/wiki/%E7%89%A9%E4%BB%B6%E5%B0%8E%E5%90%91%E7%A8%8B%E5%BC%8F%E8%A8%AD%E8%A8%88" hreflang="zh-yue" lang="zh-yue" title="物件導向程式設計 – Cantonese">粵語</a></li><li class="interlanguage-link interwiki-zh"><a href="https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1" hreflang="zh" lang="zh" title="面向对象程序设计 – Chinese">中文</a></li><li class="uls-p-lang-dummy"><a href="#"></a></li> </ul>
<div class="after-portlet after-portlet-lang"><span class="wb-langlinks-edit wb-langlinks-link"><a class="wbc-editpage" href="https://www.wikidata.org/wiki/Q79872#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></span></div> </div>
</div>
</div>
</div>
<div id="footer" role="contentinfo">
<ul id="footer-info">
<li id="footer-info-lastmod"> This page was last modified on 2 October 2016, at 03:14.</li>
<li id="footer-info-copyright">Text is available under the <a href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License" rel="license">Creative Commons Attribution-ShareAlike License</a><a href="//creativecommons.org/licenses/by-sa/3.0/" rel="license" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
</ul>
<ul id="footer-places">
<li id="footer-places-privacy"><a class="extiw" href="https://wikimediafoundation.org/wiki/Privacy_policy" title="wmf:Privacy policy">Privacy policy</a></li>
<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
<li id="footer-places-mobileview"><a class="noprint stopMobileRedirectToggle" href="//en.m.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;mobileaction=toggle_view_mobile">Mobile view</a></li>
</ul>
<ul class="noprint" id="footer-icons">
<li id="footer-copyrightico">
<a href="https://wikimediafoundation.org/"><img alt="Wikimedia Foundation" height="31" src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88"/></a> </li>
<li id="footer-poweredbyico">
<a href="//www.mediawiki.org/"><img alt="Powered by MediaWiki" height="31" src="/static/images/poweredby_mediawiki_88x31.png" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88"/></a> </li>
</ul>
<div style="clear:both"></div>
</div>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.loader.load(["ext.cite.a11y","mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.gadget.featured-articles-links","mmv.bootstrap.autostart","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.centralNotice.geoIP","ext.centralNotice.startUp"]);});</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set( {
    "wgPageParseReport": {
        "limitreport": {
            "cputime": "0.912",
            "walltime": "1.045",
            "ppvisitednodes": {
                "value": 4504,
                "limit": 1000000
            },
            "ppgeneratednodes": {
                "value": 0,
                "limit": 1500000
            },
            "postexpandincludesize": {
                "value": 166138,
                "limit": 2097152
            },
            "templateargumentsize": {
                "value": 5594,
                "limit": 2097152
            },
            "expansiondepth": {
                "value": 12,
                "limit": 40
            },
            "expensivefunctioncount": {
                "value": 8,
                "limit": 500
            },
            "entityaccesscount": {
                "value": 1,
                "limit": 400
            },
            "timingprofile": [
                "100.00%  817.482      1 -total",
                " 39.09%  319.529      1 Template:Reflist",
                " 15.36%  125.581     25 Template:Cite_book",
                " 14.61%  119.447      5 Template:Fix",
                " 11.17%   91.328     20 Template:Cite_web",
                " 10.88%   88.956      9 Template:Cite_journal",
                "  8.87%   72.522      2 Template:Fv",
                "  8.19%   66.958      5 Template:Delink",
                "  6.00%   49.037      3 Template:Navbox",
                "  5.35%   43.701      8 Template:Category_handler"
            ]
        },
        "scribunto": {
            "limitreport-timeusage": {
                "value": "0.424",
                "limit": "10.000"
            },
            "limitreport-memusage": {
                "value": 5698728,
                "limit": 52428800
            }
        },
        "cachereport": {
            "origin": "mw1165",
            "timestamp": "20161002031453",
            "ttl": 2592000,
            "transientcontent": false
        }
    }
} );});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":89,"wgHostname":"mw1253"});});</script>
</body>
</html>

