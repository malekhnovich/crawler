The following page is located at the url: http://en.wikipedia.org/wiki/Decorator_pattern
<!DOCTYPE html>

<html class="client-nojs" dir="ltr" lang="en">
<head>
<meta charset="utf-8"/>
<title>Decorator pattern - Wikipedia, the free encyclopedia</title>
<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Decorator_pattern","wgTitle":"Decorator pattern","wgCurRevisionId":732949237,"wgRevisionId":732949237,"wgArticleId":164854,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Articles needing additional references from June 2013","All articles needing additional references","Software design patterns","Articles with example Java code"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Decorator_pattern","wgRelevantArticleId":164854,"wgRequestId":"V-FvCgpAADwAALODW9sAAAAS","wgIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgWikiEditorEnabledModules":{"toolbar":true,"dialogs":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":true,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":false},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgFlaggedRevsParams":{"tags":{"status":{"levels":1,"quality":2,"pristine":3}}},"wgStableRevisionId":null,"wgWikibaseItemId":"Q23839","wgCentralAuthMobileDomain":false,"wgVisualEditorToolbarScrollOffset":0,"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user.cssprefs":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.cite.styles":"ready","ext.pygments":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.tmh.thumbnail.styles":"ready","ext.wikimediaBadges":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.options",function($,jQuery,require,module){mw.user.options.set({"variant":"en"});});mw.loader.implement("user.tokens",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/;

});mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","ext.centralauth.centralautologin","mmv.head","ext.visualEditor.desktopArticleTarget.init","ext.uls.interface","ext.quicksurveys.init","mw.MediaWikiPlayer.loader","mw.PopUpMediaTransform","skins.vector.js"]);});</script>
<link href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.cite.styles%7Cext.gadget.DRN-wizard%2CReferenceTooltips%2Ccharinsert%2Cextra-toolbar-buttons%2Cfeatured-articles-links%2CrefToolbar%2Cswitcher%2Cteahouse%2Cwatchlist-notice%7Cext.pygments%2CwikimediaBadges%7Cext.tmh.thumbnail.styles%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cwikibase.client.init&amp;only=styles&amp;skin=vector" rel="stylesheet"/>
<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>
<meta content="" name="ResourceLoaderDynamicStyles"/>
<link href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector" rel="stylesheet"/>
<meta content="MediaWiki 1.28.0-wmf.20" name="generator"/>
<meta content="origin-when-cross-origin" name="referrer"/>
<link href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Decorator_pattern" rel="alternate"/>
<link href="/w/index.php?title=Decorator_pattern&amp;action=edit" rel="alternate" title="Edit this page" type="application/x-wiki"/>
<link href="/w/index.php?title=Decorator_pattern&amp;action=edit" rel="edit" title="Edit this page"/>
<link href="/static/apple-touch/wikipedia.png" rel="apple-touch-icon"/>
<link href="/static/favicon/wikipedia.ico" rel="shortcut icon"/>
<link href="/w/opensearch_desc.php" rel="search" title="Wikipedia (en)" type="application/opensearchdescription+xml"/>
<link href="//en.wikipedia.org/w/api.php?action=rsd" rel="EditURI" type="application/rsd+xml"/>
<link href="//creativecommons.org/licenses/by-sa/3.0/" rel="copyright"/>
<link href="https://en.wikipedia.org/wiki/Decorator_pattern" rel="canonical"/>
<link href="//login.wikimedia.org" rel="dns-prefetch"/>
<link href="//meta.wikimedia.org" rel="dns-prefetch"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Decorator_pattern rootpage-Decorator_pattern skin-vector action-view feature-page-action-bar-v2"> <div class="noprint" id="mw-page-base"></div>
<div class="noprint" id="mw-head-base"></div>
<div class="mw-body" id="content" role="main">
<a id="top"></a>
<div id="siteNotice"><!-- CentralNotice --></div>
<div class="mw-indicators">
</div>
<h1 class="firstHeading" id="firstHeading" lang="en">Decorator pattern</h1>
<div class="mw-body-content" id="bodyContent">
<div id="siteSub">From Wikipedia, the free encyclopedia</div>
<div id="contentSub"></div>
<div class="mw-jump" id="jump-to-nav">
					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>
</div>
<div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="en"><div class="hatnote" role="note">Not to be confused with <a href="/wiki/Python_syntax_and_semantics#Decorators" title="Python syntax and semantics">the concept of "decorators" in Python</a>.</div>
<table class="metadata plainlinks ambox ambox-content ambox-Refimprove" role="presentation">
<tr>
<td class="mbox-image">
<div style="width:52px"><a class="image" href="/wiki/File:Question_book-new.svg"><img alt="" data-file-height="399" data-file-width="512" height="39" src="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" width="50"/></a></div>
</td>
<td class="mbox-text"><span class="mbox-text-span">This article <b>needs additional citations for <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">verification</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="//en.wikipedia.org/w/index.php?title=Decorator_pattern&amp;action=edit">improve this article</a> by <a href="/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1" title="Help:Introduction to referencing with Wiki Markup/1">adding citations to reliable sources</a>. Unsourced material may be challenged and removed.</span> <small><i>(June 2013)</i></small> <small class="hide-when-compact"><i>(<a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this template message</a>)</i></small></span></td>
</tr>
</table>
<p>In <a href="/wiki/Object-oriented_programming" title="Object-oriented programming">object-oriented programming</a>, the <b>decorator pattern</b> (also known as Wrapper, an alternative naming shared with the <a href="/wiki/Adapter_pattern" title="Adapter pattern">Adapter pattern</a>) is a <a class="mw-redirect" href="/wiki/Design_pattern_(computer_science)" title="Design pattern (computer science)">design pattern</a> that allows behavior to be added to an individual <a href="/wiki/Object_(computer_science)" title="Object (computer science)">object</a>, either statically or dynamically, without affecting the behavior of other objects from the same <a class="mw-redirect" href="/wiki/Class_(computer_science)" title="Class (computer science)">class</a>.<sup class="reference" id="cite_ref-1"><a href="#cite_note-1">[1]</a></sup> The decorator pattern is often useful for adhering to the <a href="/wiki/Single_responsibility_principle" title="Single responsibility principle">Single Responsibility Principle</a>, as it allows functionality to be divided between classes with unique areas of concern.<sup class="reference" id="cite_ref-2"><a href="#cite_note-2">[2]</a></sup></p>
<p></p>
<div class="toc" id="toc">
<div id="toctitle">
<h2>Contents</h2>
</div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Intent"><span class="tocnumber">1</span> <span class="toctext">Intent</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#Motivation"><span class="tocnumber">2</span> <span class="toctext">Motivation</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Examples"><span class="tocnumber">3</span> <span class="toctext">Examples</span></a>
<ul>
<li class="toclevel-2 tocsection-4"><a href="#C.2B.2B"><span class="tocnumber">3.1</span> <span class="toctext">C++</span></a>
<ul>
<li class="toclevel-3 tocsection-5"><a href="#Dynamic_Decorator"><span class="tocnumber">3.1.1</span> <span class="toctext">Dynamic Decorator</span></a></li>
<li class="toclevel-3 tocsection-6"><a href="#Static_Decorator_.28Mixin_Inheritance.29"><span class="tocnumber">3.1.2</span> <span class="toctext">Static Decorator (Mixin Inheritance)</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-7"><a href="#Java"><span class="tocnumber">3.2</span> <span class="toctext">Java</span></a>
<ul>
<li class="toclevel-3 tocsection-8"><a href="#First_example_.28window.2Fscrolling_scenario.29"><span class="tocnumber">3.2.1</span> <span class="toctext">First example (window/scrolling scenario)</span></a></li>
<li class="toclevel-3 tocsection-9"><a href="#Second_example_.28coffee_making_scenario.29"><span class="tocnumber">3.2.2</span> <span class="toctext">Second example (coffee making scenario)</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-10"><a href="#PHP"><span class="tocnumber">3.3</span> <span class="toctext">PHP</span></a></li>
<li class="toclevel-2 tocsection-11"><a href="#Python"><span class="tocnumber">3.4</span> <span class="toctext">Python</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-12"><a href="#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#External_links"><span class="tocnumber">6</span> <span class="toctext">External links</span></a></li>
</ul>
</div>
<p></p>
<h2><span class="mw-headline" id="Intent">Intent</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=1" title="Edit section: Intent">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="thumb tright">
<div class="thumbinner" style="width:402px;"><a class="image" href="/wiki/File:Decorator_UML_class_diagram.svg"><img alt="" class="thumbimage" data-file-height="760" data-file-width="960" height="317" src="//upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Decorator_UML_class_diagram.svg/400px-Decorator_UML_class_diagram.svg.png" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Decorator_UML_class_diagram.svg/600px-Decorator_UML_class_diagram.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Decorator_UML_class_diagram.svg/800px-Decorator_UML_class_diagram.svg.png 2x" width="400"/></a>
<div class="thumbcaption">
<div class="magnify"><a class="internal" href="/wiki/File:Decorator_UML_class_diagram.svg" title="Enlarge"></a></div>
Decorator <a href="/wiki/Unified_Modeling_Language" title="Unified Modeling Language">UML</a> class diagram</div>
</div>
</div>
<p>The decorator pattern can be used to extend (decorate) the functionality of a certain object statically, or in some cases at <a href="/wiki/Run_time_(program_lifecycle_phase)" title="Run time (program lifecycle phase)">run-time</a>, independently of other instances of the same <a class="mw-redirect" href="/wiki/Class_(computer_science)" title="Class (computer science)">class</a>, provided some groundwork is done at design time. This is achieved by designing a new <i>Decorator</i> class that <a class="mw-redirect" href="/wiki/Wrapper_pattern" title="Wrapper pattern">wraps</a> the original class. This wrapping could be achieved by the following sequence of steps:</p>
<ol>
<li>Subclass the original "Component" class into a <i>Decorator</i> class (see UML diagram);</li>
<li>In the <i>Decorator</i> class, add a Component pointer as a field;</li>
<li>Pass a Component to the <i>Decorator</i> constructor to initialize the Component pointer;</li>
<li>In the <i>Decorator</i> class, <a href="/wiki/Forwarding_(object-oriented_programming)" title="Forwarding (object-oriented programming)">forward</a> all "Component" methods to the "Component" pointer; and</li>
<li>In the ConcreteDecorator class, override any Component method(s) whose behavior needs to be modified.</li>
</ol>
<p>This pattern is designed so that multiple decorators can be stacked on top of each other, each time adding a new functionality to the overridden method(s).</p>
<p>Note that decorators and the original class object share a common set of features. In the previous diagram, the "operation()" method was available in both the decorated and undecorated versions.</p>
<p>The decoration features (e.g., methods, properties, or other members) are usually defined by an interface, <a href="/wiki/Mixin" title="Mixin">mixin</a> (a.k.a. "<a href="/wiki/Trait_(computer_programming)" title="Trait (computer programming)">trait</a>") or class inheritance which is shared by the decorators and the decorated object. In the previous example the class "Component" is inherited by both the "ConcreteComponent" and the subclasses that descend from <i>Decorator</i>.</p>
<p>The decorator pattern is an alternative to <a class="mw-redirect" href="/wiki/Subclass_(computer_science)" title="Subclass (computer science)">subclassing</a>. Subclassing adds behavior at <a href="/wiki/Compile_time" title="Compile time">compile time</a>, and the change affects all instances of the original class; decorating can provide new behavior at <a href="/wiki/Run_time_(program_lifecycle_phase)" title="Run time (program lifecycle phase)">run-time</a> for selective objects.</p>
<p>This difference becomes most important when there are several <i>independent</i> ways of extending functionality. In some <a class="mw-redirect" href="/wiki/Object-oriented_programming_language" title="Object-oriented programming language">object-oriented programming languages</a>, classes cannot be created at runtime, and it is typically not possible to predict, at design time, what combinations of extensions will be needed. This would mean that a new class would have to be made for every possible combination. By contrast, decorators are objects, created at runtime, and can be combined on a per-use basis. The I/O Streams implementations of both <a href="/wiki/Java_Platform,_Standard_Edition#java.io" title="Java Platform, Standard Edition">Java</a> and the <a href="/wiki/.NET_Framework" title=".NET Framework">.NET Framework</a> incorporate the decorator pattern.</p>
<h2><span class="mw-headline" id="Motivation">Motivation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=2" title="Edit section: Motivation">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="thumb tright">
<div class="thumbinner" style="width:402px;"><a class="image" href="/wiki/File:UML2_Decorator_Pattern.png"><img alt="" class="thumbimage" data-file-height="342" data-file-width="763" height="179" src="//upload.wikimedia.org/wikipedia/commons/thumb/c/c6/UML2_Decorator_Pattern.png/400px-UML2_Decorator_Pattern.png" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/c/c6/UML2_Decorator_Pattern.png/600px-UML2_Decorator_Pattern.png 1.5x, //upload.wikimedia.org/wikipedia/commons/c/c6/UML2_Decorator_Pattern.png 2x" width="400"/></a>
<div class="thumbcaption">
<div class="magnify"><a class="internal" href="/wiki/File:UML2_Decorator_Pattern.png" title="Enlarge"></a></div>
UML diagram for the window example</div>
</div>
</div>
<p>As an example, consider a window in a <a href="/wiki/Windowing_system" title="Windowing system">windowing system</a>. To allow <a href="/wiki/Scrolling" title="Scrolling">scrolling</a> of the window's contents, one may wish to add horizontal or vertical <a href="/wiki/Scrollbar" title="Scrollbar">scrollbars</a> to it, as appropriate. Assume windows are represented by instances of the <i>Window</i> class, and assume this class has no functionality for adding scrollbars. One could create a subclass <i>ScrollingWindow</i> that provides them, or create a <i>ScrollingWindowDecorator</i> that adds this functionality to existing <i>Window</i> objects. At this point, either solution would be fine.</p>
<p>Now, assume one also desires the ability to add borders to windows. Again, the original <i>Window</i> class has no support. The <i>ScrollingWindow</i> subclass now poses a problem, because it has effectively created a new kind of window. If one wishes to add border support to many but not <i>all</i> windows, one must create subclasses <i>WindowWithBorder</i> and <i>ScrollingWindowWithBorder</i> etc. This problem gets worse with every new feature or window subtype to be added. For the decorator solution, we simply create a new <i>BorderedWindowDecorator</i>—at runtime, we can decorate existing windows with the <i>ScrollingWindowDecorator</i> or the <i>BorderedWindowDecorator</i> or both, as we see fit. Notice that if the functionality needs to be added to all Windows, you could modify the base class and that will do. On the other hand, sometimes (e.g., using external frameworks) it is not possible, legal, or convenient to modify the base class.</p>
<p>Note, in the previous example, that the "SimpleWindow" and "WindowDecorator" classes implement the "Window" interface, which defines the "draw()" method and the "getDescription()" method, that are required in this scenario, in order to decorate a window control.</p>
<h2><span class="mw-headline" id="Examples">Examples</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=3" title="Edit section: Examples">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<h3><span class="mw-headline" id="C.2B.2B">C++</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=4" title="Edit section: C++">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Two options are presented here, first a dynamic, runtime-composable decorator (has issues with calling decorated functions unless proxied explicitly) and a decorator that uses mixin inheritance.</p>
<h4><span class="mw-headline" id="Dynamic_Decorator">Dynamic Decorator</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=5" title="Edit section: Dynamic Decorator">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">struct</span> <span class="n">Shape</span>
<span class="p">{</span>
  <span class="k">virtual</span> <span class="n">string</span> <span class="n">str</span><span class="p">()</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">};</span>
<span class="k">struct</span> <span class="nl">Circle</span> <span class="p">:</span> <span class="n">Shape</span>
<span class="p">{</span>
  <span class="kt">float</span> <span class="n">radius</span><span class="p">;</span>
  <span class="kt">void</span> <span class="nf">resize</span><span class="p">(</span><span class="kt">float</span> <span class="n">factor</span><span class="p">)</span> <span class="p">{</span> <span class="n">radius</span> <span class="o">*=</span> <span class="n">factor</span><span class="p">;</span> <span class="p">}</span>
  <span class="n">string</span> <span class="nf">str</span><span class="p">()</span> <span class="k">override</span>
  <span class="p">{</span>
    <span class="k">return</span> <span class="n">string</span><span class="p">(</span><span class="s">"A circle of radius"</span><span class="p">)</span> <span class="o">+</span> <span class="n">lexical_cast</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span><span class="p">(</span><span class="n">radius</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">};</span>
<span class="k">struct</span> <span class="nl">ColoredShape</span> <span class="p">:</span> <span class="n">Shape</span>
<span class="p">{</span>
  <span class="n">string</span> <span class="n">color</span><span class="p">;</span>
  <span class="n">Shape</span><span class="o">&amp;</span> <span class="n">shape</span><span class="p">;</span>
  <span class="n">string</span> <span class="nf">str</span><span class="p">()</span> <span class="k">override</span>
  <span class="p">{</span>
    <span class="k">return</span> <span class="n">shape</span><span class="p">.</span><span class="n">str</span><span class="p">()</span> <span class="o">+</span> <span class="n">string</span><span class="p">(</span><span class="s">" which is "</span><span class="p">)</span> <span class="o">+</span> <span class="n">color</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// usage:</span>
<span class="n">Circle</span> <span class="n">c</span><span class="p">{</span><span class="mi">123</span><span class="p">};</span>
<span class="n">ColoredShape</span> <span class="n">cc</span><span class="p">{</span><span class="s">"red"</span><span class="p">,</span> <span class="n">c</span><span class="p">};</span>
<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">cc</span><span class="p">.</span><span class="n">str</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
<span class="c1">// cannot call this:</span>
<span class="n">cc</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="mf">1.2</span><span class="p">);</span> <span class="c1">// not part of ColoredShape</span>
</pre></div>
<h4><span class="mw-headline" id="Static_Decorator_.28Mixin_Inheritance.29">Static Decorator (Mixin Inheritance)</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=6" title="Edit section: Static Decorator (Mixin Inheritance)">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">struct</span> <span class="n">Circle</span>
<span class="p">{</span>
  <span class="kt">float</span> <span class="n">radius</span><span class="p">;</span>
  <span class="kt">void</span> <span class="nf">resize</span><span class="p">(</span><span class="kt">float</span> <span class="n">factor</span><span class="p">)</span> <span class="p">{</span> <span class="n">radius</span> <span class="o">*=</span> <span class="n">factor</span><span class="p">;</span> <span class="p">}</span>
  <span class="n">string</span> <span class="nf">str</span><span class="p">()</span>
  <span class="p">{</span>
    <span class="k">return</span> <span class="n">string</span><span class="p">(</span><span class="s">"A circle of radius"</span><span class="p">)</span> <span class="o">+</span> <span class="n">lexical_cast</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span><span class="p">(</span><span class="n">radius</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="n">T</span><span class="o">&gt;</span> <span class="k">struct</span> <span class="nl">ColoredShape</span> <span class="p">:</span> <span class="n">T</span>
<span class="p">{</span>
  <span class="n">string</span> <span class="n">color</span><span class="p">;</span>
  <span class="n">string</span> <span class="nf">str</span><span class="p">()</span>
  <span class="p">{</span>
    <span class="k">return</span> <span class="n">T</span><span class="o">::</span><span class="n">str</span><span class="p">()</span> <span class="o">+</span> <span class="s">" is colored "</span> <span class="o">+</span> <span class="n">color</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// usage:</span>
<span class="n">ColoredShape</span><span class="o">&lt;</span><span class="n">Circle</span><span class="o">&gt;</span> <span class="n">red_circle</span><span class="p">{</span><span class="s">"red"</span><span class="p">};</span>
<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">red_circle</span><span class="p">.</span><span class="n">str</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
<span class="c1">// and this is legal</span>
<span class="n">red_circle</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="mf">1.2</span><span class="p">);</span>
</pre></div>
<h3><span class="mw-headline" id="Java">Java</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=7" title="Edit section: Java">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<h4><span class="mw-headline" id="First_example_.28window.2Fscrolling_scenario.29">First example (window/scrolling scenario)</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=8" title="Edit section: First example (window/scrolling scenario)">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>The following Java example illustrates the use of decorators using the window/scrolling scenario.</p>
<div style="clear:both;"></div>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c1">// The Window interface class</span>
<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Window</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">draw</span><span class="o">();</span> <span class="c1">// Draws the Window</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getDescription</span><span class="o">();</span> <span class="c1">// Returns a description of the Window</span>
<span class="o">}</span>

<span class="c1">// Implementation of a simple Window without any scrollbars</span>
<span class="kd">class</span> <span class="nc">SimpleWindow</span> <span class="kd">implements</span> <span class="n">Window</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">draw</span><span class="o">()</span> <span class="o">{</span>
        <span class="c1">// Draw window</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getDescription</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="s">"simple window"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
<p>The following classes contain the decorators for all <tt>Window</tt> classes, including the decorator classes themselves.</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c1">// abstract decorator class - note that it implements Window</span>
<span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">WindowDecorator</span> <span class="kd">implements</span> <span class="n">Window</span> <span class="o">{</span>
    <span class="kd">protected</span> <span class="n">Window</span> <span class="n">windowToBeDecorated</span><span class="o">;</span> <span class="c1">// the Window being decorated</span>

    <span class="kd">public</span> <span class="nf">WindowDecorator</span> <span class="o">(</span><span class="n">Window</span> <span class="n">windowToBeDecorated</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">windowToBeDecorated</span> <span class="o">=</span> <span class="n">windowToBeDecorated</span><span class="o">;</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">draw</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">windowToBeDecorated</span><span class="o">.</span><span class="na">draw</span><span class="o">();</span> <span class="c1">//Delegation</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getDescription</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">windowToBeDecorated</span><span class="o">.</span><span class="na">getDescription</span><span class="o">();</span> <span class="c1">//Delegation</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// The first concrete decorator which adds vertical scrollbar functionality</span>
<span class="kd">class</span> <span class="nc">VerticalScrollBarDecorator</span> <span class="kd">extends</span> <span class="n">WindowDecorator</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nf">VerticalScrollBarDecorator</span> <span class="o">(</span><span class="n">Window</span> <span class="n">windowToBeDecorated</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">windowToBeDecorated</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">draw</span><span class="o">()</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">draw</span><span class="o">();</span>
        <span class="n">drawVerticalScrollBar</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">drawVerticalScrollBar</span><span class="o">()</span> <span class="o">{</span>
        <span class="c1">// Draw the vertical scrollbar</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getDescription</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">getDescription</span><span class="o">()</span> <span class="o">+</span> <span class="s">", including vertical scrollbars"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// The second concrete decorator which adds horizontal scrollbar functionality</span>
<span class="kd">class</span> <span class="nc">HorizontalScrollBarDecorator</span> <span class="kd">extends</span> <span class="n">WindowDecorator</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nf">HorizontalScrollBarDecorator</span> <span class="o">(</span><span class="n">Window</span> <span class="n">windowToBeDecorated</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">windowToBeDecorated</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">draw</span><span class="o">()</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">draw</span><span class="o">();</span>
        <span class="n">drawHorizontalScrollBar</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">drawHorizontalScrollBar</span><span class="o">()</span> <span class="o">{</span>
        <span class="c1">// Draw the horizontal scrollbar</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getDescription</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">getDescription</span><span class="o">()</span> <span class="o">+</span> <span class="s">", including horizontal scrollbars"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
<p>Here's a test program that creates a <tt>Window</tt> instance which is fully decorated (i.e., with vertical and horizontal scrollbars), and prints its description:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DecoratedWindowTest</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="c1">// Create a decorated Window with horizontal and vertical scrollbars</span>
        <span class="n">Window</span> <span class="n">decoratedWindow</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HorizontalScrollBarDecorator</span> <span class="o">(</span>
                <span class="k">new</span> <span class="n">VerticalScrollBarDecorator</span> <span class="o">(</span><span class="k">new</span> <span class="n">SimpleWindow</span><span class="o">()));</span>

        <span class="c1">// Print the Window's description</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">decoratedWindow</span><span class="o">.</span><span class="na">getDescription</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
<p>Below is the JUnit test class for the Test Driven Development</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">junit</span><span class="o">.</span><span class="na">Assert</span><span class="o">.</span><span class="na">assertEquals</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.junit.Test</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">WindowDecoratorTest</span> <span class="o">{</span>
	<span class="nd">@Test</span>
	<span class="kd">public</span> <span class="kt">void</span> <span class="nf">testWindowDecoratorTest</span><span class="o">()</span> <span class="o">{</span>
	    <span class="n">Window</span> <span class="n">decoratedWindow</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HorizontalScrollBarDecorator</span><span class="o">(</span><span class="k">new</span> <span class="n">VerticalScrollbarDecorator</span><span class="o">(</span><span class="k">new</span> <span class="n">SimpleWindow</span><span class="o">()));</span>
      	    <span class="c1">// assert that the description indeed includes horizontal + vertical scrollbars</span>
            <span class="n">assertEquals</span><span class="o">(</span><span class="s">"simple window, including vertical scrollbars, including horizontal scrollbars"</span><span class="o">,</span> <span class="n">decoratedWindow</span><span class="o">.</span><span class="na">getDescription</span><span class="o">())</span>
	<span class="o">}</span>
<span class="o">}</span>
</pre></div>
<p>The output of this program is "simple window, including vertical scrollbars, including horizontal scrollbars". Notice how the <tt>getDescription</tt> method of the two decorators first retrieve the decorated <tt>Window</tt>'s description and <i>decorates</i> it with a suffix.</p>
<h4><span class="mw-headline" id="Second_example_.28coffee_making_scenario.29">Second example (coffee making scenario)</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=9" title="Edit section: Second example (coffee making scenario)">edit</a><span class="mw-editsection-bracket">]</span></span></h4>
<p>The next Java example illustrates the use of decorators using coffee making scenario. In this example, the scenario only includes cost and ingredients.</p>
<div style="clear:both;"></div>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c1">// The interface Coffee defines the functionality of Coffee implemented by decorator</span>
<span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Coffee</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kt">double</span> <span class="nf">getCost</span><span class="o">();</span> <span class="c1">// Returns the cost of the coffee</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getIngredients</span><span class="o">();</span> <span class="c1">// Returns the ingredients of the coffee</span>
<span class="o">}</span>

<span class="c1">// Extension of a simple coffee without any extra ingredients</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">SimpleCoffee</span> <span class="kd">implements</span> <span class="n">Coffee</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">double</span> <span class="nf">getCost</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getIngredients</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="s">"Coffee"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
<p>The following classes contain the decorators for all <span style="font-family: monospace, monospace;">Coffee</span> classes, including the decorator classes themselves..</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="c1">// Abstract decorator class - note that it implements Coffee interface</span>
<span class="kd">public</span> <span class="kd">abstract</span> <span class="kd">class</span> <span class="nc">CoffeeDecorator</span> <span class="kd">implements</span> <span class="n">Coffee</span> <span class="o">{</span>
    <span class="kd">protected</span> <span class="kd">final</span> <span class="n">Coffee</span> <span class="n">decoratedCoffee</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">CoffeeDecorator</span><span class="o">(</span><span class="n">Coffee</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">decoratedCoffee</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">double</span> <span class="nf">getCost</span><span class="o">()</span> <span class="o">{</span> <span class="c1">// Implementing methods of the interface</span>
        <span class="k">return</span> <span class="n">decoratedCoffee</span><span class="o">.</span><span class="na">getCost</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getIngredients</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">decoratedCoffee</span><span class="o">.</span><span class="na">getIngredients</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// Decorator WithMilk mixes milk into coffee.</span>
<span class="c1">// Note it extends CoffeeDecorator.</span>
<span class="kd">class</span> <span class="nc">WithMilk</span> <span class="kd">extends</span> <span class="n">CoffeeDecorator</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nf">WithMilk</span><span class="o">(</span><span class="n">Coffee</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">double</span> <span class="nf">getCost</span><span class="o">()</span> <span class="o">{</span> <span class="c1">// Overriding methods defined in the abstract superclass</span>
        <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">getCost</span><span class="o">()</span> <span class="o">+</span> <span class="mf">0.5</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getIngredients</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">getIngredients</span><span class="o">()</span> <span class="o">+</span> <span class="s">", Milk"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>

<span class="c1">// Decorator WithSprinkles mixes sprinkles onto coffee.</span>
<span class="c1">// Note it extends CoffeeDecorator.</span>
<span class="kd">class</span> <span class="nc">WithSprinkles</span> <span class="kd">extends</span> <span class="n">CoffeeDecorator</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="nf">WithSprinkles</span><span class="o">(</span><span class="n">Coffee</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">double</span> <span class="nf">getCost</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">getCost</span><span class="o">()</span> <span class="o">+</span> <span class="mf">0.2</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getIngredients</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="kd">super</span><span class="o">.</span><span class="na">getIngredients</span><span class="o">()</span> <span class="o">+</span> <span class="s">", Sprinkles"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
<p>Here's a test program that creates a <span style="font-family: monospace, monospace;">Coffee</span> instance which is fully decorated (with milk and sprinkles), and calculate cost of coffee and prints its ingredients:</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Main</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">printInfo</span><span class="o">(</span><span class="n">Coffee</span> <span class="n">c</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Cost: "</span> <span class="o">+</span> <span class="n">c</span><span class="o">.</span><span class="na">getCost</span><span class="o">()</span> <span class="o">+</span> <span class="s">"; Ingredients: "</span> <span class="o">+</span> <span class="n">c</span><span class="o">.</span><span class="na">getIngredients</span><span class="o">());</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Coffee</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleCoffee</span><span class="o">();</span>
        <span class="n">printInfo</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>

        <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WithMilk</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
        <span class="n">printInfo</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>

        <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">WithSprinkles</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
        <span class="n">printInfo</span><span class="o">(</span><span class="n">c</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</pre></div>
<p>The output of this program is given below:</p>
<pre>
Cost: 1.0; Ingredients: Coffee
Cost: 1.5; Ingredients: Coffee, Milk
Cost: 1.7; Ingredients: Coffee, Milk, Sprinkles
</pre>
<h3><span class="mw-headline" id="PHP">PHP</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=10" title="Edit section: PHP">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">abstract</span> <span class="k">class</span> <span class="nc">Component</span>
<span class="p">{</span>
    <span class="k">protected</span> <span class="nv">$data</span><span class="p">;</span>
    <span class="k">protected</span> <span class="nv">$value</span><span class="p">;</span>

    <span class="k">abstract</span> <span class="k">public</span> <span class="k">function</span> <span class="nf">getData</span><span class="p">();</span>

    <span class="k">abstract</span> <span class="k">public</span> <span class="k">function</span> <span class="nf">getValue</span><span class="p">();</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">ConcreteComponent</span> <span class="k">extends</span> <span class="nx">Component</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">value</span> <span class="o">=</span> <span class="mi">1000</span><span class="p">;</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span> <span class="o">=</span> <span class="s2">"Concrete Component:</span><span class="se">\t</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">value</span><span class="si">}</span><span class="se">\n</span><span class="s2">"</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getData</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getValue</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">value</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">abstract</span> <span class="k">class</span> <span class="nc">Decorator</span> <span class="k">extends</span> <span class="nx">Component</span>
<span class="p">{</span>
    
<span class="p">}</span>

<span class="k">class</span> <span class="nc">ConcreteDecorator1</span> <span class="k">extends</span> <span class="nx">Decorator</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nx">Component</span> <span class="nv">$data</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">value</span> <span class="o">=</span> <span class="mi">500</span><span class="p">;</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getData</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span><span class="o">-&gt;</span><span class="na">getData</span><span class="p">()</span> <span class="o">.</span> <span class="s2">"Concrete Decorator 1:</span><span class="se">\t</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">value</span><span class="si">}</span><span class="se">\n</span><span class="s2">"</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getValue</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">value</span> <span class="o">+</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span><span class="o">-&gt;</span><span class="na">getValue</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">ConcreteDecorator2</span> <span class="k">extends</span> <span class="nx">Decorator</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(</span><span class="nx">Component</span> <span class="nv">$data</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">value</span> <span class="o">=</span> <span class="mi">500</span><span class="p">;</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getData</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span><span class="o">-&gt;</span><span class="na">getData</span><span class="p">()</span> <span class="o">.</span> <span class="s2">"Concrete Decorator 2:</span><span class="se">\t</span><span class="si">{</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">value</span><span class="si">}</span><span class="se">\n</span><span class="s2">"</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">getValue</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">value</span> <span class="o">+</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">data</span><span class="o">-&gt;</span><span class="na">getValue</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">Client</span>
<span class="p">{</span>
    <span class="k">private</span> <span class="nv">$component</span><span class="p">;</span>

    <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">component</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ConcreteComponent</span><span class="p">();</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">component</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">wrapComponent</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">component</span><span class="p">);</span>

        <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">component</span><span class="o">-&gt;</span><span class="na">getData</span><span class="p">();</span>
        <span class="k">echo</span> <span class="s2">"Client:</span><span class="se">\t\t\t</span><span class="s2">"</span><span class="p">;</span>
        <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">component</span><span class="o">-&gt;</span><span class="na">getValue</span><span class="p">();</span>
    <span class="p">}</span>

    <span class="k">private</span> <span class="k">function</span> <span class="nf">wrapComponent</span><span class="p">(</span><span class="nx">Component</span> <span class="nv">$component</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="nv">$component1</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ConcreteDecorator1</span><span class="p">(</span><span class="nv">$component</span><span class="p">);</span>
        <span class="nv">$component2</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ConcreteDecorator2</span><span class="p">(</span><span class="nv">$component1</span><span class="p">);</span>
        <span class="k">return</span> <span class="nv">$component2</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nv">$client</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Client</span><span class="p">();</span>

<span class="c1">// Result: #quanton81</span>

<span class="c1">//Concrete Component:	1000</span>
<span class="c1">//Concrete Decorator 1:	500</span>
<span class="c1">//Concrete Decorator 2:	500</span>
<span class="c1">//Client:               2000</span>
</pre></div>
<h3><span class="mw-headline" id="Python">Python</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=11" title="Edit section: Python">edit</a><span class="mw-editsection-bracket">]</span></span></h3>
<p>Python includes a more natural way of decorating a function by using an annotation on the function that is decorated.</p>
<div class="mw-highlight mw-content-ltr" dir="ltr">
<pre>
<span class="k">def</span> <span class="nf">benchmark</span><span class="p">(</span><span class="n">func</span><span class="p">):</span>
    <span class="sd">"""</span>
<span class="sd">    Print the seconds that a function takes to execute.</span>
<span class="sd">    """</span>
    <span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">time</span>
    <span class="k">def</span> <span class="nf">wrapper</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
        <span class="n">t0</span> <span class="o">=</span> <span class="n">time</span><span class="p">()</span>
        <span class="n">res</span> <span class="o">=</span> <span class="n">func</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">"function @{0} took {1:0.3f} seconds"</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">func</span><span class="o">.</span><span class="n">__name__</span><span class="p">,</span> <span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">t0</span><span class="p">))</span>
        <span class="k">return</span> <span class="n">res</span>
    <span class="k">return</span> <span class="n">wrapper</span>
    
<span class="nd">@benchmark</span>
<span class="k">def</span> <span class="nf">wait_some_seconds</span><span class="p">(</span><span class="n">num_seconds</span> <span class="o">=</span> <span class="mi">1</span><span class="p">):</span>
    <span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">sleep</span>
    <span class="n">sleep</span><span class="p">(</span><span class="n">num_seconds</span><span class="p">)</span>

<span class="n">wait_some_seconds</span><span class="p">(</span><span class="mf">1.11</span><span class="p">)</span>
<span class="c1"># function @wait_some_seconds took 1.11 seconds</span>
<span class="n">wait_some_seconds</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="c1"># function @wait_some_seconds took 5.000 seconds</span>
</pre></div>
<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=12" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<ul>
<li><a href="/wiki/Composite_pattern" title="Composite pattern">Composite pattern</a></li>
<li><a href="/wiki/Adapter_pattern" title="Adapter pattern">Adapter pattern</a></li>
<li><a class="mw-redirect" href="/wiki/Abstract_class" title="Abstract class">Abstract class</a></li>
<li><a class="mw-redirect" href="/wiki/Abstract_factory" title="Abstract factory">Abstract factory</a></li>
<li><a href="/wiki/Aspect-oriented_programming" title="Aspect-oriented programming">Aspect-oriented programming</a></li>
<li><a href="/wiki/Immutable_object" title="Immutable object">Immutable object</a></li>
</ul>
<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=13" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<div class="reflist" style="list-style-type: decimal;">
<ol class="references">
<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><cite class="citation book">Gamma, Erich; et al. (1995). <i>Design Patterns</i>. Reading, MA: Addison-Wesley Publishing Co, Inc. pp. 175ff. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a> <a href="/wiki/Special:BookSources/0-201-63361-2" title="Special:BookSources/0-201-63361-2">0-201-63361-2</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADecorator+pattern&amp;rft.aufirst=Erich&amp;rft.aulast=Gamma&amp;rft.btitle=Design+Patterns&amp;rft.date=1995&amp;rft.genre=book&amp;rft.isbn=0-201-63361-2&amp;rft.pages=175ff&amp;rft.place=Reading%2C+MA&amp;rft.pub=Addison-Wesley+Publishing+Co%2C+Inc.&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text"><cite class="citation web"><a class="external text" href="http://sam-burns.co.uk/57/how-to-implement-a-decorator-pattern/" rel="nofollow">"How to Implement a Decorator Pattern"</a>.</cite><span class="Z3988" title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3ADecorator+pattern&amp;rft.btitle=How+to+Implement+a+Decorator+Pattern&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fsam-burns.co.uk%2F57%2Fhow-to-implement-a-decorator-pattern%2F&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook"><span style="display:none;"> </span></span></span></li>
</ol>
</div>
<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Decorator_pattern&amp;action=edit&amp;section=14" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>
<table class="mbox-small plainlinks sistersitebox" role="presentation" style="border:1px solid #aaa;background-color:#f9f9f9">
<tr>
<td class="mbox-image"><a class="image" href="/wiki/File:Wikibooks-logo-en-noslogan.svg"><img alt="" class="noviewer" data-file-height="400" data-file-width="400" height="40" src="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/40px-Wikibooks-logo-en-noslogan.svg.png" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/60px-Wikibooks-logo-en-noslogan.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/d/df/Wikibooks-logo-en-noslogan.svg/80px-Wikibooks-logo-en-noslogan.svg.png 2x" width="40"/></a></td>
<td class="mbox-text plainlist">The Wikibook <i><a class="extiw" href="//en.wikibooks.org/wiki/Computer_Science_Design_Patterns" title="wikibooks:Computer Science Design Patterns">Computer Science Design Patterns</a></i> has a page on the topic of: <i><b><a class="extiw" href="//en.wikibooks.org/wiki/Computer_Science_Design_Patterns/Decorator" title="wikibooks:Computer Science Design Patterns/Decorator">Decorator implementations in various languages</a></b></i></td>
</tr>
</table>
<ul>
<li><a class="external text" href="http://c2.com/cgi/wiki?DecoratorPattern" rel="nofollow">Decorator pattern description from the Portland Pattern Repository</a></li>
<li><a class="external text" href="http://patterns.pl/decorator.html" rel="nofollow">Decorator pattern C++11 implementation example</a></li>
</ul>
<div aria-labelledby="Software_design_patterns" class="navbox" role="navigation" style="padding:3px">
<table class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
<tr>
<th class="navbox-title" colspan="2" scope="col">
<div class="plainlinks hlist navbar mini">
<ul>
<li class="nv-view"><a href="/wiki/Template:Design_Patterns_patterns" title="Template:Design Patterns patterns"><abbr style=";;background:none transparent;border:none;" title="View this template">v</abbr></a></li>
<li class="nv-talk"><a href="/wiki/Template_talk:Design_Patterns_patterns" title="Template talk:Design Patterns patterns"><abbr style=";;background:none transparent;border:none;" title="Discuss this template">t</abbr></a></li>
<li class="nv-edit"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Template:Design_Patterns_patterns&amp;action=edit"><abbr style=";;background:none transparent;border:none;" title="Edit this template">e</abbr></a></li>
</ul>
</div>
<div id="Software_design_patterns" style="font-size:114%"><a href="/wiki/Software_design_pattern" title="Software design pattern">Software design patterns</a></div>
</th>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row"><a href="/wiki/Design_Patterns" title="Design Patterns">Gang of Four<br/>
patterns</a></th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em"></div>
<table class="nowraplinks navbox-subgroup" style="border-spacing:0">
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;">
<div style="padding:0em 0.75em;"><a href="/wiki/Creational_pattern" title="Creational pattern">Creational</a></div>
</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Abstract_factory_pattern" title="Abstract factory pattern">Abstract factory</a></li>
<li><a href="/wiki/Builder_pattern" title="Builder pattern">Builder</a></li>
<li><a href="/wiki/Factory_method_pattern" title="Factory method pattern">Factory method</a></li>
<li><a href="/wiki/Prototype_pattern" title="Prototype pattern">Prototype</a></li>
<li><a href="/wiki/Singleton_pattern" title="Singleton pattern">Singleton</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;">
<div style="padding:0em 0.75em;"><a href="/wiki/Structural_pattern" title="Structural pattern">Structural</a></div>
</th>
<td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Adapter_pattern" title="Adapter pattern">Adapter</a></li>
<li><a href="/wiki/Bridge_pattern" title="Bridge pattern">Bridge</a></li>
<li><a href="/wiki/Composite_pattern" title="Composite pattern">Composite</a></li>
<li><strong class="selflink">Decorator</strong></li>
<li><a href="/wiki/Facade_pattern" title="Facade pattern">Facade</a></li>
<li><a href="/wiki/Flyweight_pattern" title="Flyweight pattern">Flyweight</a></li>
<li><a href="/wiki/Proxy_pattern" title="Proxy pattern">Proxy</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row" style="padding-left:0;padding-right:0;">
<div style="padding:0em 0.75em;"><a href="/wiki/Behavioral_pattern" title="Behavioral pattern">Behavioral</a></div>
</th>
<td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Chain-of-responsibility_pattern" title="Chain-of-responsibility pattern">Chain of responsibility</a></li>
<li><a href="/wiki/Command_pattern" title="Command pattern">Command</a></li>
<li><a href="/wiki/Interpreter_pattern" title="Interpreter pattern">Interpreter</a></li>
<li><a href="/wiki/Iterator_pattern" title="Iterator pattern">Iterator</a></li>
<li><a href="/wiki/Mediator_pattern" title="Mediator pattern">Mediator</a></li>
<li><a href="/wiki/Memento_pattern" title="Memento pattern">Memento</a></li>
<li><a href="/wiki/Observer_pattern" title="Observer pattern">Observer</a></li>
<li><a href="/wiki/State_pattern" title="State pattern">State</a></li>
<li><a href="/wiki/Strategy_pattern" title="Strategy pattern">Strategy</a></li>
<li><a href="/wiki/Template_method_pattern" title="Template method pattern">Template method</a></li>
<li><a href="/wiki/Visitor_pattern" title="Visitor pattern">Visitor</a></li>
</ul>
</div>
</td>
</tr>
</table>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row"><a href="/wiki/Concurrency_pattern" title="Concurrency pattern">Concurrency<br/>
patterns</a></th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Active_object" title="Active object">Active object</a></li>
<li><a href="/wiki/Balking_pattern" title="Balking pattern">Balking</a></li>
<li><a href="/wiki/Binding_properties_pattern" title="Binding properties pattern">Binding properties</a></li>
<li><a href="/wiki/Double-checked_locking" title="Double-checked locking">Double-checked locking</a></li>
<li><a href="/wiki/Asynchronous_method_invocation" title="Asynchronous method invocation">Event-based asynchronous</a></li>
<li><a href="/wiki/Guarded_suspension" title="Guarded suspension">Guarded suspension</a></li>
<li><a href="/wiki/Join-pattern" title="Join-pattern">Join</a></li>
<li><a class="mw-redirect" href="/wiki/Lock_pattern" title="Lock pattern">Lock</a></li>
<li><a href="/wiki/Monitor_(synchronization)" title="Monitor (synchronization)">Monitor</a></li>
<li><a href="/wiki/Proactor_pattern" title="Proactor pattern">Proactor</a></li>
<li><a href="/wiki/Reactor_pattern" title="Reactor pattern">Reactor</a></li>
<li><a href="/wiki/Readers%E2%80%93writer_lock" title="Readers–writer lock">Read write lock</a></li>
<li><a class="mw-redirect" href="/wiki/Scheduler_pattern" title="Scheduler pattern">Scheduler</a></li>
<li><a class="mw-redirect" href="/wiki/Thread_pool_pattern" title="Thread pool pattern">Thread pool</a></li>
<li><a href="/wiki/Thread-local_storage" title="Thread-local storage">Thread-local storage</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row"><a href="/wiki/Architectural_pattern" title="Architectural pattern">Architectural<br/>
patterns</a></th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Front_controller" title="Front controller">Front controller</a></li>
<li><a href="/wiki/Interceptor_pattern" title="Interceptor pattern">Interceptor</a></li>
<li><a href="/wiki/Model%E2%80%93view%E2%80%93controller" title="Model–view–controller">MVC</a></li>
<li><a href="/wiki/Multitier_architecture" title="Multitier architecture"><i>n</i>-tier</a></li>
<li><a href="/wiki/Specification_pattern" title="Specification pattern">Specification</a></li>
<li><a href="/wiki/Publish%E2%80%93subscribe_pattern" title="Publish–subscribe pattern">Publish–subscribe</a></li>
<li><a href="/wiki/Naked_objects" title="Naked objects">Naked objects</a></li>
<li><a href="/wiki/Service_locator_pattern" title="Service locator pattern">Service locator</a></li>
<li><a href="/wiki/Active_record_pattern" title="Active record pattern">Active record</a></li>
<li><a href="/wiki/Identity_map_pattern" title="Identity map pattern">Identity map</a></li>
<li><a href="/wiki/Data_access_object" title="Data access object">Data access object</a></li>
<li><a href="/wiki/Data_transfer_object" title="Data transfer object">Data transfer object</a></li>
<li><a class="new" href="/w/index.php?title=Action%E2%80%93Domain%E2%80%93Responder&amp;action=edit&amp;redlink=1" title="Action–Domain–Responder (page does not exist)">ADR</a></li>
<li><a href="/wiki/Inversion_of_control" title="Inversion of control">Inversion of control</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Other<br/>
patterns</th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a class="mw-redirect" href="/wiki/Blackboard_design_pattern" title="Blackboard design pattern">Blackboard</a></li>
<li><a href="/wiki/Business_delegate_pattern" title="Business delegate pattern">Business delegate</a></li>
<li><a href="/wiki/Composite_entity_pattern" title="Composite entity pattern">Composite entity</a></li>
<li><a href="/wiki/Dependency_injection" title="Dependency injection">Dependency injection</a></li>
<li><a href="/wiki/Intercepting_filter_pattern" title="Intercepting filter pattern">Intercepting filter</a></li>
<li><a href="/wiki/Lazy_loading" title="Lazy loading">Lazy loading</a></li>
<li><a href="/wiki/Mock_object" title="Mock object">Mock object</a></li>
<li><a class="mw-redirect" href="/wiki/Null_object_pattern" title="Null object pattern">Null object</a></li>
<li><a href="/wiki/Object_pool_pattern" title="Object pool pattern">Object pool</a></li>
<li><a href="/wiki/Servant_(design_pattern)" title="Servant (design pattern)">Servant</a></li>
<li><a href="/wiki/Twin_pattern" title="Twin pattern">Twin</a></li>
<li><a href="/wiki/Type_Tunnel_pattern" title="Type Tunnel pattern">Type tunnel</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Books</th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><i><a href="/wiki/Design_Patterns" title="Design Patterns">Design Patterns</a></i></li>
<li><i><a href="/wiki/Enterprise_Integration_Patterns" title="Enterprise Integration Patterns">Enterprise Integration Patterns</a></i></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">People</th>
<td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/Christopher_Alexander" title="Christopher Alexander">Christopher Alexander</a></li>
<li><a href="/wiki/Erich_Gamma" title="Erich Gamma">Erich Gamma</a></li>
<li><a href="/wiki/Ralph_Johnson_(computer_scientist)" title="Ralph Johnson (computer scientist)">Ralph Johnson</a></li>
<li><a href="/wiki/John_Vlissides" title="John Vlissides">John Vlissides</a></li>
<li><a href="/wiki/Grady_Booch" title="Grady Booch">Grady Booch</a></li>
<li><a href="/wiki/Kent_Beck" title="Kent Beck">Kent Beck</a></li>
<li><a href="/wiki/Ward_Cunningham" title="Ward Cunningham">Ward Cunningham</a></li>
<li><a href="/wiki/Martin_Fowler" title="Martin Fowler">Martin Fowler</a></li>
<li><a href="/wiki/Robert_Cecil_Martin" title="Robert Cecil Martin">Robert Martin</a></li>
<li><a href="/wiki/Jim_Coplien" title="Jim Coplien">Jim Coplien</a></li>
<li><a href="/wiki/Douglas_C._Schmidt" title="Douglas C. Schmidt">Douglas Schmidt</a></li>
<li><a href="/wiki/Linda_Rising" title="Linda Rising">Linda Rising</a></li>
</ul>
</div>
</td>
</tr>
<tr style="height:2px">
<td colspan="2"></td>
</tr>
<tr>
<th class="navbox-group" scope="row">Communities</th>
<td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
<div style="padding:0em 0.25em">
<ul>
<li><a href="/wiki/The_Hillside_Group" title="The Hillside Group">The Hillside Group</a></li>
<li><a href="/wiki/Portland_Pattern_Repository" title="Portland Pattern Repository">The Portland Pattern Repository</a></li>
</ul>
</div>
</td>
</tr>
</table>
</div>
<!-- Saved in parser cache with key enwiki:pcache:idhash:164854-0!*!0!!en!4!* and timestamp 20161002202900 and revision id 732949237
 -->
<noscript><img alt="" height="1" src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" style="border: none; position: absolute;" title="" width="1"/></noscript></div> <div class="printfooter">
						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Decorator_pattern&amp;oldid=732949237">https://en.wikipedia.org/w/index.php?title=Decorator_pattern&amp;oldid=732949237</a>"					</div>
<div class="catlinks" data-mw="interface" id="catlinks"><div class="mw-normal-catlinks" id="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Software_design_patterns" title="Category:Software design patterns">Software design patterns</a></li></ul></div><div class="mw-hidden-catlinks mw-hidden-cats-hidden" id="mw-hidden-catlinks">Hidden categories: <ul><li><a href="/wiki/Category:Articles_needing_additional_references_from_June_2013" title="Category:Articles needing additional references from June 2013">Articles needing additional references from June 2013</a></li><li><a href="/wiki/Category:All_articles_needing_additional_references" title="Category:All articles needing additional references">All articles needing additional references</a></li><li><a href="/wiki/Category:Articles_with_example_Java_code" title="Category:Articles with example Java code">Articles with example Java code</a></li></ul></div></div> <div class="visualClear"></div>
</div>
</div>
<div id="mw-navigation">
<h2>Navigation menu</h2>
<div id="mw-head">
<div aria-labelledby="p-personal-label" class="" id="p-personal" role="navigation">
<h3 id="p-personal-label">Personal tools</h3>
<ul>
<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a accesskey="n" href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]">Talk</a></li><li id="pt-anoncontribs"><a accesskey="y" href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Decorator+pattern" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a accesskey="o" href="/w/index.php?title=Special:UserLogin&amp;returnto=Decorator+pattern" title="You're encouraged to log in; however, it's not mandatory. [o]">Log in</a></li> </ul>
</div>
<div id="left-navigation">
<div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
<h3 id="p-namespaces-label">Namespaces</h3>
<ul>
<li class="selected" id="ca-nstab-main"><span><a accesskey="c" href="/wiki/Decorator_pattern" title="View the content page [c]">Article</a></span></li>
<li id="ca-talk"><span><a accesskey="t" href="/wiki/Talk:Decorator_pattern" rel="discussion" title="Discussion about the content page [t]">Talk</a></span></li>
</ul>
</div>
<div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
<h3 id="p-variants-label">
<span>Variants</span><a href="#"></a>
</h3>
<div class="menu">
<ul>
</ul>
</div>
</div>
</div>
<div id="right-navigation">
<div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
<h3 id="p-views-label">Views</h3>
<ul>
<li class="selected" id="ca-view"><span><a href="/wiki/Decorator_pattern">Read</a></span></li>
<li id="ca-edit"><span><a accesskey="e" href="/w/index.php?title=Decorator_pattern&amp;action=edit" title="Edit this page [e]">Edit</a></span></li>
<li class="collapsible" id="ca-history"><span><a accesskey="h" href="/w/index.php?title=Decorator_pattern&amp;action=history" title="Past revisions of this page [h]">View history</a></span></li>
</ul>
</div>
<div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
<h3 id="p-cactions-label"><span>More</span><a href="#"></a></h3>
<div class="menu">
<ul>
</ul>
</div>
</div>
<div id="p-search" role="search">
<h3>
<label for="searchInput">Search</label>
</h3>
<form action="/w/index.php" id="searchform">
<div id="simpleSearch">
<input accesskey="f" id="searchInput" name="search" placeholder="Search" title="Search Wikipedia [f]" type="search"/><input name="title" type="hidden" value="Special:Search"/><input class="searchButton mw-fallbackSearchButton" id="mw-searchButton" name="fulltext" title="Search Wikipedia for this text" type="submit" value="Search"/><input class="searchButton" id="searchButton" name="go" title="Go to a page with this exact name if it exists" type="submit" value="Go"/> </div>
</form>
</div>
</div>
</div>
<div id="mw-panel">
<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page" title="Visit the main page"></a></div>
<div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
<h3 id="p-navigation-label">Navigation</h3>
<div class="body">
<ul>
<li id="n-mainpage-description"><a accesskey="z" href="/wiki/Main_Page" title="Visit the main page [z]">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a accesskey="x" href="/wiki/Special:Random" title="Load a random article [x]">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-interaction-label" class="portal" id="p-interaction" role="navigation">
<h3 id="p-interaction-label">Interaction</h3>
<div class="body">
<ul>
<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a accesskey="r" href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
<h3 id="p-tb-label">Tools</h3>
<div class="body">
<ul>
<li id="t-whatlinkshere"><a accesskey="j" href="/wiki/Special:WhatLinksHere/Decorator_pattern" title="List of all English Wikipedia pages containing links to this page [j]">What links here</a></li><li id="t-recentchangeslinked"><a accesskey="k" href="/wiki/Special:RecentChangesLinked/Decorator_pattern" title="Recent changes in pages linked from this page [k]">Related changes</a></li><li id="t-upload"><a accesskey="u" href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]">Upload file</a></li><li id="t-specialpages"><a accesskey="q" href="/wiki/Special:SpecialPages" title="A list of all special pages [q]">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Decorator_pattern&amp;oldid=732949237" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Decorator_pattern&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a accesskey="g" href="https://www.wikidata.org/wiki/Q23839" title="Link to connected data repository item [g]">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Decorator_pattern&amp;id=732949237" title="Information on how to cite this page">Cite this page</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
<h3 id="p-coll-print_export-label">Print/export</h3>
<div class="body">
<ul>
<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Decorator+pattern">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Decorator+pattern&amp;returnto=Decorator+pattern&amp;oldid=732949237&amp;writer=rdf2latex">Download as PDF</a></li><li id="t-print"><a accesskey="p" href="/w/index.php?title=Decorator_pattern&amp;printable=yes" title="Printable version of this page [p]">Printable version</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-wikibase-otherprojects-label" class="portal" id="p-wikibase-otherprojects" role="navigation">
<h3 id="p-wikibase-otherprojects-label">In other projects</h3>
<div class="body">
<ul>
<li class="wb-otherproject-link wb-otherproject-commons"><a href="https://commons.wikimedia.org/wiki/Category:Decorator_pattern" hreflang="en">Wikimedia Commons</a></li><li class="wb-otherproject-link wb-otherproject-wikibooks"><a href="https://en.wikibooks.org/wiki/Computer_Science_Design_Patterns/Decorator" hreflang="en">Wikibooks</a></li> </ul>
</div>
</div>
<div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
<h3 id="p-lang-label">Languages</h3>
<div class="body">
<ul>
<li class="interlanguage-link interwiki-ar"><a href="https://ar.wikipedia.org/wiki/%D9%86%D9%85%D9%88%D8%B0%D8%AC_%D8%A7%D9%84%D8%AA%D8%B5%D9%85%D9%8A%D9%85_%D8%AF%D9%8A%D9%83%D9%88%D8%B1" hreflang="ar" lang="ar" title="نموذج التصميم ديكور – Arabic">العربية</a></li><li class="interlanguage-link interwiki-bg"><a href="https://bg.wikipedia.org/wiki/%D0%94%D0%B5%D0%BA%D0%BE%D1%80%D0%B0%D1%82%D0%BE%D1%80_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD)" hreflang="bg" lang="bg" title="Декоратор (шаблон) – Bulgarian">Български</a></li><li class="interlanguage-link interwiki-ca"><a href="https://ca.wikipedia.org/wiki/Decorator" hreflang="ca" lang="ca" title="Decorator – Catalan">Català</a></li><li class="interlanguage-link interwiki-cs"><a href="https://cs.wikipedia.org/wiki/Dekor%C3%A1tor" hreflang="cs" lang="cs" title="Dekorátor – Czech">Čeština</a></li><li class="interlanguage-link interwiki-de"><a href="https://de.wikipedia.org/wiki/Decorator" hreflang="de" lang="de" title="Decorator – German">Deutsch</a></li><li class="interlanguage-link interwiki-es"><a href="https://es.wikipedia.org/wiki/Decorator_(patr%C3%B3n_de_dise%C3%B1o)" hreflang="es" lang="es" title="Decorator (patrón de diseño) – Spanish">Español</a></li><li class="interlanguage-link interwiki-fa"><a href="https://fa.wikipedia.org/wiki/%D8%A2%D8%B0%DB%8C%D9%86%DA%AF%D8%B1(%D8%A7%D9%84%DA%AF%D9%88%DB%8C_%D8%B7%D8%B1%D8%A7%D8%AD%DB%8C)" hreflang="fa" lang="fa" title="آذینگر(الگوی طراحی) – Persian">فارسی</a></li><li class="interlanguage-link interwiki-fr"><a href="https://fr.wikipedia.org/wiki/D%C3%A9corateur_(patron_de_conception)" hreflang="fr" lang="fr" title="Décorateur (patron de conception) – French">Français</a></li><li class="interlanguage-link interwiki-gl"><a href="https://gl.wikipedia.org/wiki/Decorator_(patr%C3%B3n_de_dese%C3%B1o)" hreflang="gl" lang="gl" title="Decorator (patrón de deseño) – Galician">Galego</a></li><li class="interlanguage-link interwiki-ko"><a href="https://ko.wikipedia.org/wiki/%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0_%ED%8C%A8%ED%84%B4" hreflang="ko" lang="ko" title="데코레이터 패턴 – Korean">한국어</a></li><li class="interlanguage-link interwiki-hy"><a href="https://hy.wikipedia.org/wiki/%D4%B4%D5%A5%D5%AF%D5%B8%D6%80%D5%A1%D5%BF%D5%B8%D6%80_(%D5%B6%D5%A1%D5%AD%D5%A1%D5%A3%D5%AE%D5%B4%D5%A1%D5%B6_%D5%B1%D6%87%D5%A1%D5%B6%D5%B4%D5%B8%D6%82%D5%B7)" hreflang="hy" lang="hy" title="Դեկորատոր (նախագծման ձևանմուշ) – Armenian">Հայերեն</a></li><li class="interlanguage-link interwiki-ia"><a href="https://ia.wikipedia.org/wiki/Decorator_(patrono_de_designo)" hreflang="ia" lang="ia" title="Decorator (patrono de designo) – Interlingua">Interlingua</a></li><li class="interlanguage-link interwiki-it"><a href="https://it.wikipedia.org/wiki/Decorator" hreflang="it" lang="it" title="Decorator – Italian">Italiano</a></li><li class="interlanguage-link interwiki-hu"><a href="https://hu.wikipedia.org/wiki/D%C3%ADsz%C3%ADt%C5%91_programtervez%C3%A9si_minta" hreflang="hu" lang="hu" title="Díszítő programtervezési minta – Hungarian">Magyar</a></li><li class="interlanguage-link interwiki-nl"><a href="https://nl.wikipedia.org/wiki/Decorator" hreflang="nl" lang="nl" title="Decorator – Dutch">Nederlands</a></li><li class="interlanguage-link interwiki-ja"><a href="https://ja.wikipedia.org/wiki/Decorator_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3" hreflang="ja" lang="ja" title="Decorator パターン – Japanese">日本語</a></li><li class="interlanguage-link interwiki-pl"><a href="https://pl.wikipedia.org/wiki/Dekorator_(wzorzec_projektowy)" hreflang="pl" lang="pl" title="Dekorator (wzorzec projektowy) – Polish">Polski</a></li><li class="interlanguage-link interwiki-pt"><a href="https://pt.wikipedia.org/wiki/Decorator" hreflang="pt" lang="pt" title="Decorator – Portuguese">Português</a></li><li class="interlanguage-link interwiki-ru"><a href="https://ru.wikipedia.org/wiki/%D0%94%D0%B5%D0%BA%D0%BE%D1%80%D0%B0%D1%82%D0%BE%D1%80_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)" hreflang="ru" lang="ru" title="Декоратор (шаблон проектирования) – Russian">Русский</a></li><li class="interlanguage-link interwiki-sv"><a href="https://sv.wikipedia.org/wiki/Dekorat%C3%B6r_(designm%C3%B6nster)" hreflang="sv" lang="sv" title="Dekoratör (designmönster) – Swedish">Svenska</a></li><li class="interlanguage-link interwiki-uk"><a href="https://uk.wikipedia.org/wiki/%D0%94%D0%B5%D0%BA%D0%BE%D1%80%D0%B0%D1%82%D0%BE%D1%80_(%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F)" hreflang="uk" lang="uk" title="Декоратор (шаблон проектування) – Ukrainian">Українська</a></li><li class="interlanguage-link interwiki-vi"><a href="https://vi.wikipedia.org/wiki/Decorator_pattern" hreflang="vi" lang="vi" title="Decorator pattern – Vietnamese">Tiếng Việt</a></li><li class="interlanguage-link interwiki-zh"><a href="https://zh.wikipedia.org/wiki/%E4%BF%AE%E9%A5%B0%E6%A8%A1%E5%BC%8F" hreflang="zh" lang="zh" title="修饰模式 – Chinese">中文</a></li><li class="uls-p-lang-dummy"><a href="#"></a></li> </ul>
<div class="after-portlet after-portlet-lang"><span class="wb-langlinks-edit wb-langlinks-link"><a class="wbc-editpage" href="https://www.wikidata.org/wiki/Q23839#sitelinks-wikipedia" title="Edit interlanguage links">Edit links</a></span></div> </div>
</div>
</div>
</div>
<div id="footer" role="contentinfo">
<ul id="footer-info">
<li id="footer-info-lastmod"> This page was last modified on 4 August 2016, at 10:00.</li>
<li id="footer-info-copyright">Text is available under the <a href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License" rel="license">Creative Commons Attribution-ShareAlike License</a><a href="//creativecommons.org/licenses/by-sa/3.0/" rel="license" style="display:none;"></a>;
additional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>
</ul>
<ul id="footer-places">
<li id="footer-places-privacy"><a class="extiw" href="https://wikimediafoundation.org/wiki/Privacy_policy" title="wmf:Privacy policy">Privacy policy</a></li>
<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>
<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>
<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>
<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>
<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>
<li id="footer-places-mobileview"><a class="noprint stopMobileRedirectToggle" href="//en.m.wikipedia.org/w/index.php?title=Decorator_pattern&amp;mobileaction=toggle_view_mobile">Mobile view</a></li>
</ul>
<ul class="noprint" id="footer-icons">
<li id="footer-copyrightico">
<a href="https://wikimediafoundation.org/"><img alt="Wikimedia Foundation" height="31" src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88"/></a> </li>
<li id="footer-poweredbyico">
<a href="//www.mediawiki.org/"><img alt="Powered by MediaWiki" height="31" src="/static/images/poweredby_mediawiki_88x31.png" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88"/></a> </li>
</ul>
<div style="clear:both"></div>
</div>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.loader.load(["ext.cite.a11y","mediawiki.toc","mediawiki.action.view.postEdit","site","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.gadget.featured-articles-links","mmv.bootstrap.autostart","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.centralNotice.geoIP","ext.centralNotice.startUp"]);});</script>
<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set( {
    "wgPageParseReport": {
        "limitreport": {
            "cputime": "0.112",
            "walltime": "0.680",
            "ppvisitednodes": {
                "value": 953,
                "limit": 1000000
            },
            "ppgeneratednodes": {
                "value": 0,
                "limit": 1500000
            },
            "postexpandincludesize": {
                "value": 37015,
                "limit": 2097152
            },
            "templateargumentsize": {
                "value": 1752,
                "limit": 2097152
            },
            "expansiondepth": {
                "value": 11,
                "limit": 40
            },
            "expensivefunctioncount": {
                "value": 1,
                "limit": 500
            },
            "entityaccesscount": {
                "value": 0,
                "limit": 400
            },
            "timingprofile": [
                "100.00%  637.803      1 -total",
                "  5.43%   34.636      1 Template:Reflist",
                "  4.48%   28.601      1 Template:Refimprove",
                "  4.19%   26.724      1 Template:Cite_book",
                "  3.89%   24.804      1 Template:Ambox",
                "  3.19%   20.351      2 Template:Navbox",
                "  3.19%   20.339      1 Template:Design_Patterns_Patterns",
                "  2.38%   15.192      1 Template:Distinguish2",
                "  2.19%   13.942      1 Template:Hatnote",
                "  1.43%    9.122      1 Template:Wikibooks"
            ]
        },
        "scribunto": {
            "limitreport-timeusage": {
                "value": "0.037",
                "limit": "10.000"
            },
            "limitreport-memusage": {
                "value": 2201371,
                "limit": 52428800
            }
        },
        "cachereport": {
            "origin": "mw1283",
            "timestamp": "20161002202900",
            "ttl": 2592000,
            "transientcontent": false
        }
    }
} );});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":141,"wgHostname":"mw1265"});});</script>
</body>
</html>

